{"remainingRequest":"C:\\Users\\jpatrick\\Documents\\GitHub\\DuetWebControl_Fork\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\jpatrick\\Documents\\GitHub\\DuetWebControl_Fork\\src\\components\\panels\\HeightmapPanel.vue?vue&type=style&index=0&id=b3cc90f4&scoped=true&lang=css&","dependencies":[{"path":"C:\\Users\\jpatrick\\Documents\\GitHub\\DuetWebControl_Fork\\src\\components\\panels\\HeightmapPanel.vue","mtime":1592248188563},{"path":"C:\\Users\\jpatrick\\Documents\\GitHub\\DuetWebControl_Fork\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\jpatrick\\Documents\\GitHub\\DuetWebControl_Fork\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\jpatrick\\Documents\\GitHub\\DuetWebControl_Fork\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\jpatrick\\Documents\\GitHub\\DuetWebControl_Fork\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1574476662000},{"path":"C:\\Users\\jpatrick\\Documents\\GitHub\\DuetWebControl_Fork\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\jpatrick\\Documents\\GitHub\\DuetWebControl_Fork\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQouaGVpZ2h0bWFwLWNvbnRhaW5lciB7DQoJYmFja2dyb3VuZC1jb2xvcjogIzAwMDsNCgljb2xvcjogI0ZGRjsNCglib3JkZXItcmFkaXVzOiA4cHg7DQoJZGlzcGxheTogZmxleDsNCn0NCg0KaDEgew0KCXdpZHRoOiAxMDAlOw0KCWFsaWduLXNlbGY6IGNlbnRlcjsNCn0NCg0KLmNhbnZhcy1jb250YWluZXIgew0KCXBvc2l0aW9uOiByZWxhdGl2ZTsNCgloZWlnaHQ6IDEwMCU7DQoJd2lkdGg6IDEwMCU7DQoJb3ZlcmZsb3c6IGhpZGRlbjsNCn0NCg0KLmNhbnZhcy1jb250YWluZXIgPiA6Zmlyc3QtY2hpbGQgew0KCWJvcmRlci1yYWRpdXM6IDhweCAwIDAgOHB4Ow0KfQ0KDQouY2FudmFzLWNvbnRhaW5lciA+IDpsYXN0LWNoaWxkIHsNCglib3JkZXItcmFkaXVzOiAwIDhweCA4cHggMDsNCn0NCg0KLmNhbnZhcy1jb250YWluZXIgPiBjYW52YXMgew0KCXBvc2l0aW9uOiBhYnNvbHV0ZTsNCn0NCg0KLm5vLWN1cnNvciB7DQoJcG9pbnRlci1ldmVudHM6IG5vbmU7DQp9DQo="},{"version":3,"sources":["HeightmapPanel.vue"],"names":[],"mappings":";AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA","file":"HeightmapPanel.vue","sourceRoot":"src/components/panels","sourcesContent":["<style scoped>\r\n.heightmap-container {\r\n\tbackground-color: #000;\r\n\tcolor: #FFF;\r\n\tborder-radius: 8px;\r\n\tdisplay: flex;\r\n}\r\n\r\nh1 {\r\n\twidth: 100%;\r\n\talign-self: center;\r\n}\r\n\r\n.canvas-container {\r\n\tposition: relative;\r\n\theight: 100%;\r\n\twidth: 100%;\r\n\toverflow: hidden;\r\n}\r\n\r\n.canvas-container > :first-child {\r\n\tborder-radius: 8px 0 0 8px;\r\n}\r\n\r\n.canvas-container > :last-child {\r\n\tborder-radius: 0 8px 8px 0;\r\n}\r\n\r\n.canvas-container > canvas {\r\n\tposition: absolute;\r\n}\r\n\r\n.no-cursor {\r\n\tpointer-events: none;\r\n}\r\n</style>\r\n\r\n<template>\r\n\t<v-card class=\"card\">\r\n\t\t<v-card-text class=\"py-1\">\r\n\t\t\t<v-row>\r\n\t\t\t\t<!-- TODO: Add CSV list here -->\r\n\r\n\t\t\t\t<v-col :class=\"{ 'pa-1': $vuetify.breakpoint.xs }\">\r\n\t\t\t\t\t<div ref=\"container\" class=\"heightmap-container\" v-resize=\"resize\">\r\n\t\t\t\t\t\t<h1 v-show=\"!ready\" class=\"text-center\">\r\n\t\t\t\t\t\t\t{{ loading ? $t('generic.loading') : (errorMessage ? errorMessage : $t('panel.heightmap.notAvailable')) }}\r\n\t\t\t\t\t\t</h1>\r\n\r\n\t\t\t\t\t\t<div v-show=\"ready\" class=\"canvas-container\">\r\n\t\t\t\t\t\t\t<canvas ref=\"canvas\" @mousemove=\"canvasMouseMove\"></canvas>\r\n\t\t\t\t\t\t\t<canvas ref=\"legend\" class=\"legend\" width=\"80\"></canvas>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</v-col>\r\n\r\n\t\t\t\t<v-col cols=\"12\" md=\"auto\" class=\"d-flex\">\r\n\t\t\t\t\t<div class=\"d-flex flex-column flex-grow-1 justify-space-between\">\r\n\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t{{ $t('panel.heightmap.numPoints', [$display(numPoints, 0)]) }}\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t<span v-if=\"radius > 0\">\r\n\t\t\t\t\t\t\t{{ $t('panel.heightmap.radius', [$display(radius, 0, 'mm')]) }}\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t{{ $t('panel.heightmap.area', [$display(area / 100, 1, 'cmÂ²')]) }}\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t{{ $t('panel.heightmap.maxDeviations', [$display(minDiff, 3), $display(maxDiff, 3, 'mm')]) }}\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t{{ $t('panel.heightmap.meanError', [$display(meanError, 3, 'mm')]) }}\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t{{ $t('panel.heightmap.rmsError', [$display(rmsError, 3, 'mm')]) }}\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t<div class=\"d-flex flex-column mt-1\">\r\n\t\t\t\t\t\t\t{{ $t('panel.heightmap.colorScheme') }}\r\n\t\t\t\t\t\t\t<v-btn-toggle v-model=\"colorScheme\" class=\"mt-1\">\r\n\t\t\t\t\t\t\t\t<v-btn value=\"terrain\" class=\"flex-grow-1\">{{ $t('panel.heightmap.terrain') }}</v-btn>\r\n\t\t\t\t\t\t\t\t<v-btn value=\"heat\" class=\"flex-grow-1\">{{ $t('panel.heightmap.heat') }}</v-btn>\r\n\t\t\t\t\t\t\t</v-btn-toggle>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<v-btn @click=\"topView\" :disabled=\"!ready\" class=\"ml-0 my-3\" >\r\n\t\t\t\t\t\t\t<v-icon small class=\"mr-1\">mdi-format-vertical-align-bottom</v-icon> {{ $t('panel.heightmap.topView') }}\r\n\t\t\t\t\t\t</v-btn>\r\n\t\t\t\t\t\t<v-btn class=\"ml-0\" :disabled=\"!isConnected\" :loading=\"loading\" @click=\"getHeightmap()\">\r\n\t\t\t\t\t\t\t<v-icon class=\"mr-1\">mdi-refresh</v-icon> {{ $t('panel.heightmap.reload') }}\r\n\t\t\t\t\t\t</v-btn>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</v-col>\r\n\t\t\t</v-row>\r\n\r\n\t\t\t<v-tooltip top absolute v-model=\"tooltip.shown\" :position-x=\"tooltip.x\" :position-y=\"tooltip.y\">\r\n\t\t\t\t<span class=\"no-cursor\">\r\n\t\t\t\t\tX: {{ $display(tooltip.coord.x, 1, 'mm') }} <br>\r\n\t\t\t\t\tY: {{ $display(tooltip.coord.y, 1, 'mm') }} <br>\r\n\t\t\t\t\tZ: {{ $display(tooltip.coord.z, 3, 'mm') }}\r\n\t\t\t\t</span>\r\n\t\t\t</v-tooltip>\r\n\t\t</v-card-text>\r\n\t</v-card>\r\n</template>\r\n\r\n<script>\r\n'use strict'\r\n\r\nimport { mapState, mapGetters, mapActions } from 'vuex'\r\n\r\nimport { Scene, PerspectiveCamera, WebGLRenderer, Raycaster, Mesh, MeshBasicMaterial, Vector2, Vector3, VertexColors, DoubleSide, ArrowHelper, GridHelper } from 'three'\r\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls'\r\n\r\nimport { getModifiedFiles } from '../../store/machine'\r\nimport { drawLegend, setFaceColors, generateIndicators, generateMeshGeometry } from '../../utils/3d.js'\r\nimport CSV from '../../utils/csv.js'\r\nimport Path from '../../utils/path.js'\r\n\r\nconst scaleZ = 0.5, maxVisualizationZ = 0.25\r\nconst indicatorColor = 0xFFFFFF, indicatorOpacity = 0.4, indicatorOpacityHighlighted = 1.0\r\n\r\nexport default {\r\n\tbeforeCreate() {\r\n\t\tthis.three = {\t\t\t\t\t\t// non-reactive data\r\n\t\t\tscene: null,\r\n\t\t\tcamera: null,\r\n\t\t\trenderer: null,\r\n\t\t\torbitControls: null,\r\n\t\t\traycaster: null,\r\n\r\n\t\t\thasHelpers: false,\r\n\t\t\tmeshGeometry: null,\r\n\t\t\tmeshPlane: null,\r\n\t\t\tmeshIndicators: null,\r\n\t\t\tlastIntersection: null\r\n\t\t}\r\n\t},\r\n\tcomputed: {\r\n\t\t...mapGetters(['isConnected']),\r\n\t\t...mapState('machine/model', {\r\n\t\t\theightmapFile: state => state.move.compensation.file,\r\n\t\t\tsystemDirectory: state => state.directories.system,\r\n\t\t}),\r\n\t\t...mapState('settings', ['language'])\r\n\t},\r\n\tdata() {\r\n\t\treturn {\r\n\t\t\tisActive: true,\r\n\t\t\tready: false,\r\n\t\t\tloading: false,\r\n\t\t\terrorMessage: null,\r\n\r\n\t\t\tcolorScheme: 'terrain',\r\n\t\t\ttooltip: {\r\n\t\t\t\tcoord: {\r\n\t\t\t\t\tx: 0,\r\n\t\t\t\t\ty: 0,\r\n\t\t\t\t\tz: 0\r\n\t\t\t\t},\r\n\t\t\t\tx: undefined,\r\n\t\t\t\ty: undefined,\r\n\t\t\t\tshown: false\r\n\t\t\t},\r\n\t\t\tnumPoints: undefined,\t\t\t// points excluding NaN\r\n\t\t\tarea: undefined,\r\n\t\t\tradius: undefined,\r\n\t\t\tminDiff: undefined,\r\n\t\t\tmaxDiff: undefined,\r\n\t\t\tmeanError: undefined,\r\n\t\t\trmsError: undefined,\r\n\r\n\t\t\tunsubscribe: undefined\r\n\t\t}\r\n\t},\r\n\tmethods: {\r\n\t\t...mapActions('machine', ['download']),\r\n\t\tinit() {\r\n\t\t\t// Perform initial resize\r\n\t\t\tconst size = this.resize();\r\n\r\n\t\t\t// Create THREE instances\r\n\t\t\tthis.three.scene = new Scene();\r\n\t\t\tthis.three.camera = new PerspectiveCamera(45, size.width / size.height, 0.1, 1000);\r\n\t\t\tthis.three.camera.position.set(1, 1, 1);\r\n\t\t\tthis.three.camera.up = new Vector3(0, 0, 1);\r\n\t\t\tthis.three.renderer = new WebGLRenderer({ canvas: this.$refs.canvas });\r\n\t\t\tthis.three.renderer.setSize(size.width, size.height);\r\n\t\t\tthis.three.orbitControls = new OrbitControls(this.three.camera, this.three.renderer.domElement);\r\n\t\t\tthis.three.orbitControls.enableKeys = false;\r\n\t\t\tthis.three.raycaster = new Raycaster();\r\n\r\n\t\t\t// Register this instance in order to deal with size changes\r\n\t\t\tif (this.isConnected) {\r\n\t\t\t\tthis.getHeightmap();\r\n\t\t\t}\r\n\t\t},\r\n\t\tresize() {\r\n\t\t\tif (!this.isActive) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// Resize canvas elements\r\n\t\t\tconst width = Math.max(this.$refs.container.offsetWidth - 80, 0);\r\n\t\t\tlet height;\r\n\t\t\tswitch (this.$vuetify.breakpoint.name) {\r\n\t\t\t\tcase 'xs':\r\n\t\t\t\t\theight = width;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'sm':\r\n\t\t\t\t\theight = width * 3 / 4;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'xl':\r\n\t\t\t\t\theight = width * 10 / 16;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\theight = width * 9 / 16;\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\tthis.$refs.container.style.height = `${height}px`;\r\n\t\t\tthis.$refs.legend.style.left = `${width}px`;\r\n\t\t\tthis.$refs.legend.height = height;\r\n\t\t\tthis.$refs.canvas.width = width;\r\n\t\t\tthis.$refs.canvas.height = height;\r\n\r\n\t\t\t// Resize the 3D height map\r\n\t\t\tif (this.three.renderer) {\r\n\t\t\t\tthis.three.camera.aspect = width / height;\r\n\t\t\t\tthis.three.camera.updateProjectionMatrix();\r\n\t\t\t\tthis.three.renderer.setSize(width, height);\r\n\t\t\t}\r\n\r\n\t\t\t// Redraw the legend and return the canvas size\r\n\t\t\tdrawLegend(this.$refs.legend, maxVisualizationZ, this.colorScheme);\r\n\t\t\treturn { width, height };\r\n\t\t},\r\n\t\tshowCSV(csvData) {\r\n\t\t\t// Load the CSV. The first line is a comment that can be removed\r\n\t\t\tconst csv = new CSV(csvData.substring(csvData.indexOf(\"\\n\") + 1));\r\n\t\t\tlet radius = parseFloat(csv.get('radius'));\r\n\t\t\tif (radius <= 0) { radius = undefined; }\r\n\t\t\tconst xMin = parseFloat(csv.get('xmin'));\r\n\t\t\tconst yMin = parseFloat(csv.get('ymin'));\r\n\t\t\tlet xSpacing = parseFloat(csv.get('xspacing'));\r\n\t\t\tif (isNaN(xSpacing)) { xSpacing = parseFloat(csv.get('spacing')); }\r\n\t\t\tlet ySpacing = parseFloat(csv.get('yspacing'));\r\n\t\t\tif (isNaN(ySpacing)) { ySpacing = parseFloat(csv.get('spacing')); }\r\n\r\n\t\t\t// Convert each point to a vector\r\n\t\t\tconst points = [];\r\n\t\t\tfor (let y = 1; y < csv.content.length; y++) {\r\n\t\t\t\tfor (let x = 0; x < csv.content[y].length; x++) {\r\n\t\t\t\t\tconst value = csv.content[y][x].trim();\r\n\t\t\t\t\tpoints.push([xMin + x * xSpacing, yMin + (y - 1) * ySpacing, (value === \"0\") ? NaN : parseFloat(value)]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Display height map\r\n\t\t\tthis.showHeightmap(points, radius);\r\n\t\t},\r\n\t\tshowHeightmap(points, probeRadius) {\r\n\t\t\t// Clean up first\r\n\t\t\tif (this.three.meshGeometry) {\r\n\t\t\t\tthis.three.scene.remove(this.three.meshPlane);\r\n\t\t\t\tthis.three.meshIndicators.forEach(function(indicator) {\r\n\t\t\t\t\tthis.remove(indicator);\r\n\t\t\t\t}, this.three.scene);\r\n\r\n\t\t\t\tthis.three.meshGeometry = null;\r\n\t\t\t\tthis.three.meshPlane = null;\r\n\t\t\t\tthis.three.meshIndicators = null;\r\n\t\t\t\tthis.three.lastIntersection = null;\r\n\t\t\t}\r\n\r\n\t\t\t// Generate stats\r\n\t\t\tlet xMin, xMax, yMin, yMax;\r\n\r\n\t\t\tthis.radius = probeRadius;\r\n\t\t\tthis.numPoints = 0;\r\n\t\t\tthis.minDiff = undefined;\r\n\t\t\tthis.maxDiff = undefined;\r\n\t\t\tthis.meanError = 0;\r\n\t\t\tthis.rmsError = 0;\r\n\r\n\t\t\tfor (let i = 0; i < points.length; i++) {\r\n\t\t\t\tconst z = points[i][2];\r\n\t\t\t\tif (!isNaN(z)) {\r\n\t\t\t\t\tconst x = points[i][0];\r\n\t\t\t\t\tconst y = points[i][1];\r\n\t\t\t\t\tif (xMin === undefined || xMin > x) { xMin = x; }\r\n\t\t\t\t\tif (xMax === undefined || xMax < x) { xMax = x; }\r\n\t\t\t\t\tif (yMin === undefined || yMin > y) { yMin = y; }\r\n\t\t\t\t\tif (yMax === undefined || yMax < y) { yMax = y; }\r\n\r\n\t\t\t\t\tthis.numPoints++;\r\n\t\t\t\t\tthis.meanError += z;\r\n\t\t\t\t\tthis.rmsError += z * z;\r\n\t\t\t\t\tif (this.minDiff === undefined || this.minDiff > z) { this.minDiff = z; }\r\n\t\t\t\t\tif (this.maxDiff === undefined || this.maxDiff < z) { this.maxDiff = z; }\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.area = probeRadius ? (probeRadius * probeRadius * Math.PI) : Math.abs((xMax - xMin) * (yMax - yMin));\r\n\t\t\tthis.rmsError = Math.sqrt(((this.rmsError * this.numPoints) - (this.meanError * this.meanError))) / this.numPoints;\r\n\t\t\tthis.meanError = this.meanError / this.numPoints;\r\n\r\n\t\t\t// Generate mesh geometry and apply face colors\r\n\t\t\tthis.three.meshGeometry = generateMeshGeometry(points, xMin, xMax, yMin, yMax, scaleZ);\r\n\t\t\tsetFaceColors(this.three.meshGeometry, scaleZ, this.colorScheme, maxVisualizationZ);\r\n\r\n\t\t\t// Make 3D mesh and add it\r\n\t\t\tconst material = new MeshBasicMaterial({ vertexColors: VertexColors, side: DoubleSide });\r\n\t\t\tthis.three.meshPlane = new Mesh(this.three.meshGeometry, material);\r\n\t\t\tthis.three.scene.add(this.three.meshPlane);\r\n\r\n\t\t\t// Make indicators and add them\r\n\t\t\tthis.three.meshIndicators = generateIndicators(this.three.meshGeometry, this.numPoints, scaleZ, indicatorColor, indicatorOpacity);\r\n\t\t\tthis.three.meshIndicators.forEach(function(indicator) {\r\n\t\t\t\tthis.add(indicator);\r\n\t\t\t}, this.three.scene);\r\n\r\n\t\t\tif (!this.three.hasHelpers) {\r\n\t\t\t\t// Make axis arrows for XYZ\r\n\t\t\t\tthis.three.scene.add(new ArrowHelper(new Vector3(1, 0, 0), new Vector3(-0.6, -0.6, 0), 0.5, 0xFF0000));\r\n\t\t\t\tthis.three.scene.add(new ArrowHelper(new Vector3(0, 1, 0), new Vector3(-0.6, -0.6, 0), 0.5, 0x00FF00));\r\n\t\t\t\tthis.three.scene.add(new ArrowHelper(new Vector3(0, 0, 1), new Vector3(-0.6, -0.6, 0), 0.5, 0x0000FF));\r\n\r\n\t\t\t\t// Make grid on XY plane\r\n\t\t\t\tconst grid = new GridHelper(1.1, 15);\r\n\t\t\t\tgrid.rotation.x = -Math.PI / 2;\r\n\t\t\t\tthis.three.scene.add(grid);\r\n\r\n\t\t\t\t// Don't add these helpers again\r\n\t\t\t\tthis.three.hasHelpers = true;\r\n\t\t\t}\r\n\r\n\t\t\t// Render scene\r\n\t\t\tthis.ready = true;\r\n\t\t\tthis.render();\r\n\r\n\t\t\t// Resize it again when the values have been changed\r\n\t\t\tthis.$nextTick(this.resize);\r\n\t\t},\r\n\t\trender() {\r\n\t\t\tif (this.three.renderer) {\r\n\t\t\t\trequestAnimationFrame(this.render);\r\n\t\t\t\tthis.three.renderer.render(this.three.scene, this.three.camera);\r\n\t\t\t}\r\n\t\t},\r\n\t\tcanvasMouseMove(e) {\r\n\t\t\tif (!e.clientX || !this.three.meshGeometry) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// Try to get the Z value below the cursor\r\n\t\t\t// For that we need normalized X+Y coordinates between -1.0 and 1.0\r\n\t\t\tconst rect = e.target.getBoundingClientRect();\r\n\t\t\tconst mouse = new Vector2();\r\n\t\t\tmouse.x = (e.clientX - rect.left) / e.target.clientWidth * 2 - 1;\r\n\t\t\tmouse.y = -(e.clientY - rect.top) / e.target.clientHeight * 2 + 1;\r\n\r\n\t\t\t// Is the cursor on a point indicator?\r\n\t\t\tthis.three.raycaster.setFromCamera(mouse, this.three.camera);\r\n\t\t\tconst intersection = this.three.raycaster.intersectObjects(this.three.meshIndicators);\r\n\t\t\tif (this.three.lastIntersection && (intersection.length === 0 || intersection[0] !== this.three.lastIntersection)) {\r\n\t\t\t\tthis.three.lastIntersection.object.material.opacity = indicatorOpacity;\r\n\t\t\t\tthis.three.lastIntersection = undefined;\r\n\t\t\t}\r\n\r\n\t\t\tlet intersectionPoint;\r\n\t\t\tif (intersection.length > 0) {\r\n\t\t\t\tif (intersection[0] !== this.three.lastIntersection) {\r\n\t\t\t\t\tintersection[0].object.material.opacity = indicatorOpacityHighlighted;\r\n\t\t\t\t\tthis.three.lastIntersection = intersection[0];\r\n\t\t\t\t}\r\n\t\t\t\tintersectionPoint = intersection[0].object.coords;\r\n\t\t\t}\r\n\r\n\t\t\t// Show or hide the tooltip\r\n\t\t\tif (intersectionPoint) {\r\n\t\t\t\tthis.tooltip.coord.x = intersectionPoint.x;\r\n\t\t\t\tthis.tooltip.coord.y = intersectionPoint.y;\r\n\t\t\t\tthis.tooltip.coord.z = intersectionPoint.z;\r\n\t\t\t\tthis.tooltip.x = e.clientX;\r\n\t\t\t\tthis.tooltip.y = e.clientY;\r\n\t\t\t\tthis.tooltip.shown = true;\r\n\t\t\t} else {\r\n\t\t\t\tthis.tooltip.shown = false;\r\n\t\t\t}\r\n\t\t},\r\n\t\ttopView() {\r\n\t\t\tthis.three.camera.position.set(0, 0, 1.5);\r\n\t\t\tthis.three.camera.rotation.set(0, 0, 0);\r\n\t\t\tthis.three.camera.updateProjectionMatrix();\r\n\t\t},\r\n\r\n\t\tasync getHeightmap(filename) {\r\n\t\t\tif (this.loading) {\r\n\t\t\t\t// Don't attempt to load more than one file at once...\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (!filename) {\r\n\t\t\t\tfilename = this.heightmapFile;\r\n\t\t\t\tif (!filename) {\r\n\t\t\t\t\tfilename = Path.combine(this.systemDirectory, Path.heightmapFile);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.ready = false;\r\n\t\t\tthis.loading = true;\r\n\t\t\ttry {\r\n\t\t\t\tconst heightmap = await this.download({ filename, type: 'text', showProgress: false, showSuccess: false, showError: false });\r\n\t\t\t\tthis.showCSV(heightmap);\r\n\t\t\t} catch (e) {\r\n\t\t\t\tconsole.warn(e);\r\n\t\t\t\tthis.errorMessage = e.message;\r\n\t\t\t}\r\n\t\t\tthis.loading = false;\r\n\t\t},\r\n\r\n\t\ttestMesh() {\r\n\t\t\tconst csvData = 'RepRapFirmware height map file v1\\nxmin,xmax,ymin,ymax,radius,spacing,xnum,ynum\\n-140.00,140.10,-140.00,140.10,150.00,20.00,15,15\\n0,0,0,0,0,-0.139,-0.188,-0.139,-0.202,-0.224,0,0,0,0,0\\n0,0,0,-0.058,-0.066,-0.109,-0.141,-0.129,-0.186,-0.198,-0.191,-0.176,0,0,0\\n0,0,0.013,-0.008,-0.053,-0.071,-0.087,-0.113,-0.162,-0.190,-0.199,-0.267,-0.237,0,0\\n0,0.124,0.076,0.025,-0.026,-0.054,-0.078,-0.137,-0.127,-0.165,-0.201,-0.189,-0.227,-0.226,0\\n0,0.198,0.120,0.047,0.089,-0.074,-0.097,-0.153,-0.188,-0.477,-0.190,-0.199,-0.237,-0.211,0\\n0.312,0.229,0.198,0.098,0.097,0.004,-0.089,-0.516,-0.150,-0.209,-0.197,-0.183,-0.216,-0.296,-0.250\\n0.287,0.263,0.292,0.100,0.190,0.015,-0.102,-0.039,-0.125,-0.149,-0.137,-0.198,-0.188,-0.220,-0.192\\n0.378,0.289,0.328,0.172,0.133,0.078,-0.086,0.134,-0.100,-0.150,-0.176,-0.234,-0.187,-0.199,-0.221\\n0.360,0.291,0.260,0.185,0.111,0.108,0.024,0.073,-0.024,-0.116,-0.187,-0.252,-0.201,-0.215,-0.187\\n0.447,0.397,0.336,0.276,0.180,0.164,0.073,-0.050,-0.049,-0.109,-0.151,-0.172,-0.211,-0.175,-0.161\\n0,0.337,0.289,0.227,0.179,0.127,0.086,0.034,-0.039,-0.060,-0.113,-0.108,-0.171,-0.153,0\\n0,0.478,0.397,0.374,0.270,0.141,0.085,0.074,0.037,-0.048,-0.080,-0.187,-0.126,-0.175,0\\n0,0,0.373,0.364,0.265,0.161,0.139,0.212,0.040,0.046,-0.008,-0.149,-0.115,0,0\\n0,0,0,0.346,0.295,0.273,0.148,0.136,0.084,0.024,-0.055,-0.078,0,0,0\\n0,0,0,0,0,0.240,0.178,0.084,0.090,0.004,0,0,0,0,0';\r\n\t\t\tthis.showCSV(csvData);\r\n\t\t},\r\n\t\ttestBedCompensation(numPoints) {\r\n\t\t\tlet testPoints;\r\n\t\t\tswitch (numPoints) {\r\n\t\t\t\tcase 3:\r\n\t\t\t\t\ttestPoints = [[15.0, 15.0, 0.123], [15.0, 195.0, -0.243], [215.0, 105.0, 0.034]];\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 4:\r\n\t\t\t\t\ttestPoints = [[15.0, 15.0, 0.015], [15.0, 185.0, -0.193], [175.0, 185.0, 0.156], [175.0, 15.0, 0.105]];\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 5:\r\n\t\t\t\t\ttestPoints = [[15.0, 15.0, 0.007], [15.0, 185.0, -0.121], [175.0, 185.0, -0.019], [175.0, 15.0, 0.193], [95.0, 100.0, 0.05]];\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tthrow new Error(\"Bad number of probe points, only one of 3/4/5 is supported\");\r\n\t\t\t}\r\n\t\t\tthis.showHeightmap(testPoints);\r\n\t\t}\r\n\t},\r\n\tactivated() {\r\n\t\tthis.isActive = true;\r\n\t\tthis.resize();\r\n\t},\r\n\tdeactivate() {\r\n\t\tthis.isActive = false;\r\n\t},\r\n\tmounted() {\r\n\t\tconst getHeightmap = this.getHeightmap;\r\n\t\tthis.unsubscribe = this.$store.subscribeAction(function(action, state) {\r\n\t\t\tif (getModifiedFiles(action, state).indexOf(Path.heightmapFile) !== -1 ||\r\n\t\t\t\taction.type.endsWith('onCodeCompleted') && action.payload.reply.indexOf(Path.heightmapFile) !== -1) {\r\n\t\t\t\tgetHeightmap();\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t// FIXME give the grid some time to resize everything...\r\n\t\tsetTimeout(this.init, 100);\r\n\t},\r\n\tbeforeDestroy() {\r\n\t\tthis.unsubscribe();\r\n\r\n\t\tif (this.three.renderer) {\r\n\t\t\tthis.three.renderer.forceContextLoss();\r\n\t\t\tthis.three.renderer = null;\r\n\t\t}\r\n\t},\r\n\twatch: {\r\n\t\tcolorScheme(to) {\r\n\t\t\tif (this.three.meshGeometry) {\r\n\t\t\t\tsetFaceColors(this.three.meshGeometry, scaleZ, to, maxVisualizationZ);\r\n\t\t\t}\r\n\t\t\tdrawLegend(this.$refs.legend, maxVisualizationZ, to);\r\n\t\t},\r\n\t\tisConnected(to) {\r\n\t\t\tif (to) {\r\n\t\t\t\tthis.getHeightmap();\r\n\t\t\t}\r\n\t\t},\r\n\t\theightmapFile(to) {\r\n\t\t\tif (to) {\r\n\t\t\t\tthis.getHeightmap(to);\r\n\t\t\t}\r\n\t\t},\r\n\t\tlanguage() {\r\n\t\t\tdrawLegend(this.$refs.legend, maxVisualizationZ, this.colorScheme);\r\n\t\t}\r\n\t}\r\n}\r\n</script>\r\n"]}]}