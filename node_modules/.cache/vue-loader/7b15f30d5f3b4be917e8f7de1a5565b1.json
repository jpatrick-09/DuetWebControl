{"remainingRequest":"C:\\Users\\jpatrick\\Documents\\GitHub\\DuetWebControl_Fork\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\jpatrick\\Documents\\GitHub\\DuetWebControl_Fork\\src\\components\\panels\\SettingsElectronicsPanel.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\jpatrick\\Documents\\GitHub\\DuetWebControl_Fork\\src\\components\\panels\\SettingsElectronicsPanel.vue","mtime":1592248188570},{"path":"C:\\Users\\jpatrick\\Documents\\GitHub\\DuetWebControl_Fork\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\jpatrick\\Documents\\GitHub\\DuetWebControl_Fork\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\jpatrick\\Documents\\GitHub\\DuetWebControl_Fork\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\jpatrick\\Documents\\GitHub\\DuetWebControl_Fork\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1574476662000},{"path":"C:\\Users\\jpatrick\\Documents\\GitHub\\DuetWebControl_Fork\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\jpatrick\\Documents\\GitHub\\DuetWebControl_Fork\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQondXNlIHN0cmljdCcNCg0KaW1wb3J0IHsgbWFwU3RhdGUsIG1hcEdldHRlcnMsIG1hcEFjdGlvbnMgfSBmcm9tICd2dWV4Jw0KDQpleHBvcnQgZGVmYXVsdCB7DQoJY29tcHV0ZWQ6IHsNCgkJLi4ubWFwR2V0dGVycyhbJ2lzQ29ubmVjdGVkJ10pLA0KCQkuLi5tYXBTdGF0ZSgnbWFjaGluZS9tb2RlbCcsIHsNCgkJCWRzZlZlcnNpb246IHN0YXRlID0+IHN0YXRlLnN0YXRlLmRzZlZlcnNpb24sDQoJCQltYWluYm9hcmQ6IHN0YXRlID0+IChzdGF0ZS5ib2FyZHMubGVuZ3RoID4gMCkgPyBzdGF0ZS5ib2FyZHNbMF0gOiB7fSwNCgkJCWZpcnN0SW50ZXJmYWNlOiBzdGF0ZSA9PiAoc3RhdGUubmV0d29yay5pbnRlcmZhY2VzLmxlbmd0aCA+IDApID8gc3RhdGUubmV0d29yay5pbnRlcmZhY2VzWzBdIDoge30NCgkJfSkNCgl9LA0KCW1ldGhvZHM6IHsNCgkJLi4ubWFwQWN0aW9ucygnbWFjaGluZScsIFsnc2VuZENvZGUnXSksDQoJCWFzeW5jIGRpYWdub3N0aWNzKCkgew0KCQkJYXdhaXQgdGhpcy5zZW5kQ29kZSgnTTEyMicpOw0KCQkJdGhpcy4kcm91dGVyLnB1c2goJy9Db25zb2xlJyk7DQoJCX0NCgl9DQp9DQo="},{"version":3,"sources":["SettingsElectronicsPanel.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmCA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"SettingsElectronicsPanel.vue","sourceRoot":"src/components/panels","sourcesContent":["<template>\r\n\t<v-card>\r\n\t\t<v-card-title>\r\n\t\t\t{{ $t('panel.settingsElectronics.caption') }}\r\n\t\t\t<v-spacer></v-spacer>\r\n\t\t\t<a v-show=\"isConnected\" href=\"javascript:void(0)\" @click=\"diagnostics\">\r\n\t\t\t\t<v-icon small>mdi-lifebuoy</v-icon> {{ $t('panel.settingsElectronics.diagnostics') }}\r\n\t\t\t</a>\r\n\t\t</v-card-title>\r\n\r\n\t\t<v-card-text class=\"pt-0\">\r\n\t\t\t<template v-if=\"isConnected\">\r\n\t\t\t\t<template v-if=\"mainboard.name\">\r\n\t\t\t\t\t{{ $t('panel.settingsElectronics.board', [mainboard.name + (mainboard.shortName ? ` (${mainboard.shortName})` : '')]) }} <br>\r\n\t\t\t\t</template>\r\n\t\t\t\t<template v-if=\"dsfVersion\">\r\n\t\t\t\t\t{{ `DSF Version: ${dsfVersion}` }} <br>\r\n\t\t\t\t</template>\r\n\t\t\t\t<template v-if=\"mainboard.firmwareName\">\r\n\t\t\t\t\t{{ $t('panel.settingsElectronics.firmware', [mainboard.firmwareName + ' ' + $display(mainboard.firmwareVersion), $display(mainboard.firmwareDate)]) }} <br>\r\n\t\t\t\t</template>\r\n\t\t\t\t<template v-if=\"firstInterface.firmwareVersion && firstInterface.type === 'wifi'\">\r\n\t\t\t\t\t{{ $t('panel.settingsElectronics.dwsFirmware', [$display(firstInterface.firmwareVersion)]) }} <br>\r\n\t\t\t\t</template>\r\n\t\t\t\t<br>\r\n\t\t\t\t{{ $t('panel.settingsElectronics.updateNote') }}\r\n\t\t\t</template>\r\n\t\t\t<template v-else>\r\n\t\t\t\t(not connected)\r\n\t\t\t</template>\r\n\t\t</v-card-text>\r\n\t</v-card>\r\n</template>\r\n\r\n<script>\r\n'use strict'\r\n\r\nimport { mapState, mapGetters, mapActions } from 'vuex'\r\n\r\nexport default {\r\n\tcomputed: {\r\n\t\t...mapGetters(['isConnected']),\r\n\t\t...mapState('machine/model', {\r\n\t\t\tdsfVersion: state => state.state.dsfVersion,\r\n\t\t\tmainboard: state => (state.boards.length > 0) ? state.boards[0] : {},\r\n\t\t\tfirstInterface: state => (state.network.interfaces.length > 0) ? state.network.interfaces[0] : {}\r\n\t\t})\r\n\t},\r\n\tmethods: {\r\n\t\t...mapActions('machine', ['sendCode']),\r\n\t\tasync diagnostics() {\r\n\t\t\tawait this.sendCode('M122');\r\n\t\t\tthis.$router.push('/Console');\r\n\t\t}\r\n\t}\r\n}\r\n</script>\r\n"]}]}