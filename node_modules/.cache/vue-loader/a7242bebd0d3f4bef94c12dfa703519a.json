{"remainingRequest":"C:\\Users\\jpatrick\\Documents\\GitHub\\DuetWebControl_Fork\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\jpatrick\\Documents\\GitHub\\DuetWebControl_Fork\\src\\components\\panels\\StatusPanel.vue?vue&type=style&index=0&id=ab115a98&scoped=true&lang=css&","dependencies":[{"path":"C:\\Users\\jpatrick\\Documents\\GitHub\\DuetWebControl_Fork\\src\\components\\panels\\StatusPanel.vue","mtime":1592248188576},{"path":"C:\\Users\\jpatrick\\Documents\\GitHub\\DuetWebControl_Fork\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\jpatrick\\Documents\\GitHub\\DuetWebControl_Fork\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\jpatrick\\Documents\\GitHub\\DuetWebControl_Fork\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\jpatrick\\Documents\\GitHub\\DuetWebControl_Fork\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1574476662000},{"path":"C:\\Users\\jpatrick\\Documents\\GitHub\\DuetWebControl_Fork\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\jpatrick\\Documents\\GitHub\\DuetWebControl_Fork\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQpzdHJvbmcgew0KCWFsaWduLXNlbGY6IGNlbnRlcjsNCgl0ZXh0LWFsaWduOiBjZW50ZXI7DQp9DQoNCi5jYXRlZ29yeS1oZWFkZXIgew0KCWZsZXg6IDAgMCAxMDBweDsNCn0NCg0KYTpub3QoOmhvdmVyKSB7DQoJY29sb3I6IGluaGVyaXQ7DQp9DQoNCi5jb250ZW50IHNwYW4sDQouY29udGVudCBzdHJvbmcgew0KCXBhZGRpbmctbGVmdDogOHB4Ow0KCXBhZGRpbmctcmlnaHQ6IDhweDsNCn0NCg0KLnByb2JlLXNwYW4gew0KCWJvcmRlci1yYWRpdXM6IDVweDsNCn0NCi5wcm9iZS1zcGFuOm5vdCg6bGFzdC1jaGlsZCkgew0KCW1hcmdpbi1yaWdodDogOHB4Ow0KfQ0K"},{"version":3,"sources":["StatusPanel.vue"],"names":[],"mappings":";AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"StatusPanel.vue","sourceRoot":"src/components/panels","sourcesContent":["<style scoped>\r\nstrong {\r\n\talign-self: center;\r\n\ttext-align: center;\r\n}\r\n\r\n.category-header {\r\n\tflex: 0 0 100px;\r\n}\r\n\r\na:not(:hover) {\r\n\tcolor: inherit;\r\n}\r\n\r\n.content span,\r\n.content strong {\r\n\tpadding-left: 8px;\r\n\tpadding-right: 8px;\r\n}\r\n\r\n.probe-span {\r\n\tborder-radius: 5px;\r\n}\r\n.probe-span:not(:last-child) {\r\n\tmargin-right: 8px;\r\n}\r\n</style>\r\n\r\n<template>\r\n\t<v-card>\r\n\t\t<v-card-title class=\"py-2\">\r\n\t\t\t<v-icon small class=\"mr-1\">mdi-information</v-icon> {{ $t('panel.status.caption') }}\r\n\r\n\t\t\t<v-spacer></v-spacer>\r\n\r\n\t\t\t<status-label v-if=\"status\"></status-label>\r\n\r\n\t\t\t<v-spacer></v-spacer>\r\n\r\n\t\t\t<span v-if=\"machineMode\">{{ $t('panel.status.mode', [machineMode.toUpperCase()]) }}</span>\r\n\t\t</v-card-title>\r\n\r\n\t\t<v-card-text class=\"px-0 pt-0 pb-2 content text-xs-center\" v-show=\"sensorsPresent || (visibleAxes.length + move.extruders.length)\">\r\n\t\t\t<!-- Axis Positions -->\r\n\t\t\t<template v-if=\"visibleAxes.length\">\r\n\t\t\t\t<v-row no-gutters class=\"flex-nowrap\">\r\n\t\t\t\t\t<v-col tag=\"strong\" class=\"category-header\">\r\n\t\t\t\t\t\t<a href=\"javascript:void(0)\" @click=\"displayToolPosition = !displayToolPosition\">\r\n\t\t\t\t\t\t\t{{ $t(displayToolPosition ? 'panel.status.toolPosition' : 'panel.status.machinePosition') }}\r\n\t\t\t\t\t\t</a>\r\n\t\t\t\t\t</v-col>\r\n\r\n\t\t\t\t\t<v-col>\r\n\t\t\t\t\t\t<v-row align-content=\"center\" no-gutters>\r\n\t\t\t\t\t\t\t<v-col v-for=\"(axis, index) in visibleAxes\" :key=\"index\" class=\"d-flex flex-column align-center\">\r\n\t\t\t\t\t\t\t\t<strong>\r\n\t\t\t\t\t\t\t\t\t{{ axis.letter }}\r\n\t\t\t\t\t\t\t\t</strong>\r\n\t\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t\t{{ displayAxisPosition(axis, index) }}\r\n\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t</v-col>\r\n\t\t\t\t\t\t</v-row>\r\n\t\t\t\t\t</v-col>\r\n\t\t\t\t</v-row>\r\n\t\t\t</template>\r\n\r\n\t\t\t<!-- Extruders -->\r\n\t\t\t<template v-if=\"move.extruders.length\">\r\n\t\t\t\t<v-divider v-show=\"move.axes.length\" class=\"my-2\"></v-divider>\r\n\r\n\t\t\t\t<v-row align-content=\"center\" no-gutters class=\"flex-nowrap\">\r\n\t\t\t\t\t<v-col tag=\"strong\" class=\"category-header\">\r\n\t\t\t\t\t\t{{ $t('panel.status.extruders') }}\r\n\t\t\t\t\t</v-col>\r\n\r\n\t\t\t\t\t<v-col>\r\n\t\t\t\t\t\t<v-row align-content=\"center\" no-gutters>\r\n\t\t\t\t\t<v-col v-for=\"(extruder, index) in move.extruders\" :key=\"index\" class=\"d-flex flex-column align-center\">\r\n\t\t\t\t\t\t<strong>\r\n\t\t\t\t\t\t\t{{ $t('panel.status.extruderDrive', [index]) }}\r\n\t\t\t\t\t\t</strong>\r\n\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t{{ $display(extruder.position, 1) }}\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t</v-col>\r\n\t\t\t\t\t\t</v-row>\r\n\t\t\t\t\t</v-col>\r\n\t\t\t\t</v-row>\r\n\t\t\t</template>\r\n\r\n\t\t\t<!-- Speeds -->\r\n\t\t\t<template v-show=\"isNumber(move.currentMove.requestedSpeed) || isNumber(move.currentMove.topSpeed)\">\r\n\t\t\t\t<v-divider v-show=\"move.axes.length + move.extruders.length\" class=\"my-2\"></v-divider>\r\n\r\n\t\t\t\t<v-row align-content=\"center\" no-gutters class=\"flex-nowrap\">\r\n\t\t\t\t\t<v-col tag=\"strong\" class=\"category-header\">\r\n\t\t\t\t\t\t{{ $t('panel.status.speeds') }}\r\n\t\t\t\t\t</v-col>\r\n\r\n\t\t\t\t\t<v-col>\r\n\t\t\t\t\t\t<v-row align-content=\"center\" no-gutters>\r\n\t\t\t\t\t<v-col v-if=\"isNumber(move.currentMove.requestedSpeed)\" class=\"d-flex flex-column align-center\">\r\n\t\t\t\t\t\t<strong>\r\n\t\t\t\t\t\t\t{{ $t('panel.status.requestedSpeed') }}\r\n\t\t\t\t\t\t</strong>\r\n\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t{{ $display(move.currentMove.requestedSpeed, 0, 'mm/s') }}\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t</v-col>\r\n\r\n\t\t\t\t\t<v-col v-if=\"isNumber(move.currentMove.topSpeed)\" class=\"d-flex flex-column align-center\">\r\n\t\t\t\t\t\t<strong>\r\n\t\t\t\t\t\t\t{{ $t('panel.status.topSpeed') }}\r\n\t\t\t\t\t\t</strong>\r\n\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t{{ $display(move.currentMove.topSpeed, 0, 'mm/s') }}\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t</v-col>\r\n\t\t\t\t\t\t</v-row>\r\n\t\t\t\t\t</v-col>\r\n\t\t\t\t</v-row>\r\n\t\t\t</template>\r\n\r\n\t\t\t<!-- Sensors -->\r\n\t\t\t<template v-if=\"sensorsPresent\">\r\n\t\t\t\t<v-divider v-show=\"move.axes.length || move.extruders.length || isNumber(move.currentMove.requestedSpeed) || isNumber(move.currentMove.topSpeed)\" class=\"my-2\"></v-divider>\r\n\r\n\t\t\t\t<v-row align-content=\"center\" no-gutters class=\"flex-nowrap\">\r\n\t\t\t\t\t<v-col tag=\"strong\" class=\"category-header\">\r\n\t\t\t\t\t\t{{ $t('panel.status.sensors') }}\r\n\t\t\t\t\t</v-col>\r\n\r\n\t\t\t\t\t<v-col>\r\n\t\t\t\t\t\t<v-row align-content=\"center\" justify=\"center\" no-gutters>\r\n\t\t\t\t\t\t\t<v-col v-if=\"boards.length && boards[0].vIn.current > 0\" class=\"d-flex flex-column align-center\">\r\n\t\t\t\t\t\t\t\t<strong>\r\n\t\t\t\t\t\t\t\t\t{{ $t('panel.status.vIn') }}\r\n\t\t\t\t\t\t\t\t</strong>\r\n\t\t\t\t\t\t\t\t<v-tooltip bottom>\r\n\t\t\t\t\t\t\t\t\t<template #activator=\"{ on }\">\r\n\t\t\t\t\t\t\t\t\t\t<span v-on=\"on\" class=\"text-no-wrap\">\r\n\t\t\t\t\t\t\t\t\t\t\t{{ $display(boards[0].vIn.current, 1, 'V') }}\r\n\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t</template>\r\n\r\n\t\t\t\t\t\t\t\t\t{{ $t('panel.status.minMax', [$display(boards[0].vIn.min, 1, 'V'), $display(boards[0].vIn.max, 1, 'V')]) }}\r\n\t\t\t\t\t\t\t\t</v-tooltip>\r\n\t\t\t\t\t\t\t</v-col>\r\n\r\n\t\t\t\t\t\t\t<v-col v-if=\"boards.length && boards[0].v12.current > 0\" class=\"d-flex flex-column align-center\">\r\n\t\t\t\t\t\t\t\t<strong>\r\n\t\t\t\t\t\t\t\t\t{{ $t('panel.status.v12') }}\r\n\t\t\t\t\t\t\t\t</strong>\r\n\t\t\t\t\t\t\t\t<v-tooltip bottom>\r\n\t\t\t\t\t\t\t\t\t<template #activator=\"{ on }\">\r\n\t\t\t\t\t\t\t\t\t\t<span v-on=\"on\" class=\"text-no-wrap\">\r\n\t\t\t\t\t\t\t\t\t\t\t{{ $display(boards[0].v12.current, 1, 'V') }}\r\n\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t</template>\r\n\r\n\t\t\t\t\t\t\t\t\t{{ $t('panel.status.minMax', [$display(boards[0].v12.min, 1, 'V'), $display(boards[0].v12.max, 1, 'V')]) }}\r\n\t\t\t\t\t\t\t\t</v-tooltip>\r\n\t\t\t\t\t\t\t</v-col>\r\n\r\n\t\t\t\t\t\t\t<v-col v-if=\"boards.length && boards[0].mcuTemp.current > -273\" class=\"d-flex flex-column align-center\">\r\n\t\t\t\t\t\t\t\t<strong class=\"text-no-wrap\">\r\n\t\t\t\t\t\t\t\t\t{{ $t('panel.status.mcuTemp') }}\r\n\t\t\t\t\t\t\t\t</strong>\r\n\t\t\t\t\t\t\t\t<v-tooltip bottom>\r\n\t\t\t\t\t\t\t\t\t<template #activator=\"{ on }\">\r\n\t\t\t\t\t\t\t\t\t\t<span v-on=\"on\" class=\"text-no-wrap\">\r\n\t\t\t\t\t\t\t\t\t\t\t{{ $display(boards[0].mcuTemp.current, 1, 'C') }}\r\n\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t</template>\r\n\r\n\t\t\t\t\t\t\t\t\t{{ $t('panel.status.minMax', [$display(boards[0].mcuTemp.min, 1, 'C'), $display(boards[0].mcuTemp.max, 1, 'C')]) }}\r\n\t\t\t\t\t\t\t\t</v-tooltip>\r\n\t\t\t\t\t\t\t</v-col>\r\n\r\n\t\t\t\t\t\t\t<v-col v-if=\"fanRPM.length\" class=\"d-flex flex-column align-center\">\r\n\t\t\t\t\t\t\t\t<strong>\r\n\t\t\t\t\t\t\t\t\t{{ $t('panel.status.fanRPM') }}\r\n\t\t\t\t\t\t\t\t</strong>\r\n\r\n\t\t\t\t\t\t\t\t<div class=\"d-flex flex-row\">\r\n\t\t\t\t\t\t\t\t\t<template v-for=\"(item, index) in fanRPM\">\r\n\t\t\t\t\t\t\t\t\t\t<template v-if=\"index !== 0\">\r\n\t\t\t\t\t\t\t\t\t\t\t, \r\n\t\t\t\t\t\t\t\t\t\t</template>\r\n\t\t\t\t\t\t\t\t\t\t<span :key=\"index\" :title=\"item.name\" class=\"mx-0\">\r\n\t\t\t\t\t\t\t\t\t\t\t{{ item.rpm }}\r\n\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t</template>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</v-col>\r\n\r\n\t\t\t\t\t\t\t<v-col v-if=\"probesPresent\" class=\"d-flex flex-column align-center\">\r\n\t\t\t\t\t\t\t\t<strong>\r\n\t\t\t\t\t\t\t\t\t{{ $tc('panel.status.probe', sensors.probes.length) }}\r\n\t\t\t\t\t\t\t\t</strong>\r\n\t\t\t\t\t\t\t\t<div class=\"d-flex-inline\">\r\n\t\t\t\t\t\t\t\t\t<span v-for=\"(probe, index) in sensors.probes\" :key=\"index\" class=\"pa-1 probe-span\" :class=\"probeSpanClasses(probe, index)\">\r\n\t\t\t\t\t\t\t\t\t\t{{ formatProbeValue(probe.value) }}\r\n\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</v-col>\r\n\t\t\t\t\t\t</v-row>\r\n\t\t\t\t\t</v-col>\r\n\t\t\t\t</v-row>\r\n\t\t\t</template>\r\n\t\t</v-card-text>\r\n\r\n\t\t<v-card-text class=\"pa-0\" v-show=\"!sensorsPresent && !(move.axes.length + move.extruders.length)\">\r\n\t\t\t<v-alert :value=\"true\" type=\"info\">\r\n\t\t\t\t{{ $t('panel.status.noStatus') }}\r\n\t\t\t</v-alert>\r\n\t\t</v-card-text>\r\n\t</v-card>\r\n</template>\r\n\r\n<script>\r\n'use strict'\r\n\r\nimport { mapState, mapGetters } from 'vuex'\r\n\r\nimport { ProbeType, isPrinting } from '../../store/machine/modelEnums.js'\r\n\r\nexport default {\r\n\tcomputed: {\r\n\t\t...mapState('settings', ['darkTheme']),\r\n\t\t...mapState('machine/model', {\r\n\t\t\tboards: state => state.boards,\r\n\t\t\tfans: state => state.fans,\r\n\t\t\tmove: state => state.move,\r\n\t\t\tmachineMode: state => state.state.machineMode,\r\n\t\t\tsensors: state => state.sensors,\r\n\t\t\tstatus: state => state.state.status\r\n\t\t}),\r\n\t\t...mapGetters(['isConnected']),\r\n\t\tfanRPM() {\r\n\t\t\treturn this.fans\r\n\t\t\t\t.filter(fan => fan && fan.rpm >= 0)\r\n\t\t\t\t.map((fan, index) => ({\r\n\t\t\t\t\tname: fan.name || this.$t('panel.fan.fan', [index]),\r\n\t\t\t\t\trpm: fan.rpm\r\n\t\t\t\t}), this);\r\n\t\t},\r\n\t\tprobesPresent() {\r\n\t\t\treturn this.sensors.probes.some(probe => probe && probe.type !== ProbeType.none);\r\n\t\t},\r\n\t\tsensorsPresent() {\r\n\t\t\treturn ((this.boards.length && this.boards[0].vIn.current > 0) ||\r\n\t\t\t\t\t(this.boards.length && this.boards[0].v12.current > 0) ||\r\n\t\t\t\t\t(this.boards.length && this.boards[0].mcuTemp.current > -273) ||\r\n\t\t\t\t\t(this.fanRPM.length !== 0) ||\r\n\t\t\t\t\t(this.probesPresent));\r\n\t\t},\r\n\t\tvisibleAxes() {\r\n\t\t\treturn this.move.axes.filter(axis => axis.visible);\r\n\t\t}\r\n\t},\r\n\tdata() {\r\n\t\treturn {\r\n\t\t\tdisplayToolPosition: true\r\n\t\t}\r\n\t},\r\n\tmethods: {\r\n\t\tdisplayAxisPosition(axis) {\r\n\t\t\tconst position = this.displayToolPosition ? axis.userPosition : axis.machinePosition;\r\n\t\t\treturn (axis.letter === 'Z') ? this.$displayZ(position, false) : this.$display(position, 1);\r\n\t\t},\r\n\t\tformatProbeValue(values) {\r\n\t\t\tif (values.length === 1) {\r\n\t\t\t\treturn values[0];\r\n\t\t\t}\r\n\t\t\treturn `${values[0]} (${values.slice(1).join(', ')})`;\r\n\t\t},\r\n\t\tprobeSpanClasses(probe, index) {\r\n\t\t\tlet result = [];\r\n\t\t\tif (index && this.sensors.probes.length > 1) {\r\n\t\t\t\tresult.push('ml-2');\r\n\t\t\t}\r\n\t\t\tif (!isPrinting(this.stats) && probe.value !== null) {\r\n\t\t\t\tif (probe.value >= probe.threshold) {\r\n\t\t\t\t\tresult.push('red');\r\n\t\t\t\t\tresult.push(this.darkTheme ? 'darken-3' : 'lighten-4');\r\n\t\t\t\t} else if (probe.value > probe.threshold * 0.9) {\r\n\t\t\t\t\tresult.push('orange');\r\n\t\t\t\t\tresult.push(this.darkTheme ? 'darken-2' : 'lighten-4');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn result;\r\n\t\t}\r\n\t}\r\n}\r\n</script>\r\n"]}]}