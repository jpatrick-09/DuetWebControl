{"remainingRequest":"C:\\Users\\jpatrick\\Documents\\GitHub\\DuetWebControl_Fork\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\jpatrick\\Documents\\GitHub\\DuetWebControl_Fork\\src\\components\\lists\\SystemFileList.vue?vue&type=style&index=0&id=7c40b388&scoped=true&lang=css&","dependencies":[{"path":"C:\\Users\\jpatrick\\Documents\\GitHub\\DuetWebControl_Fork\\src\\components\\lists\\SystemFileList.vue","mtime":1592248188545},{"path":"C:\\Users\\jpatrick\\Documents\\GitHub\\DuetWebControl_Fork\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\jpatrick\\Documents\\GitHub\\DuetWebControl_Fork\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\jpatrick\\Documents\\GitHub\\DuetWebControl_Fork\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\jpatrick\\Documents\\GitHub\\DuetWebControl_Fork\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1574476662000},{"path":"C:\\Users\\jpatrick\\Documents\\GitHub\\DuetWebControl_Fork\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\jpatrick\\Documents\\GitHub\\DuetWebControl_Fork\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQoucG9pbnRlci1jdXJzb3Igew0KCWN1cnNvcjogcG9pbnRlcjsNCn0NCg=="},{"version":3,"sources":["SystemFileList.vue"],"names":[],"mappings":";AACA;AACA;AACA","file":"SystemFileList.vue","sourceRoot":"src/components/lists","sourcesContent":["<style scoped>\r\n.pointer-cursor {\r\n\tcursor: pointer;\r\n}\r\n</style>\r\n\r\n<template>\r\n\t<div class=\"component\">\r\n\t\t<v-toolbar>\r\n\t\t\t<directory-breadcrumbs v-model=\"directory\"></directory-breadcrumbs>\r\n\r\n\t\t\t<v-spacer></v-spacer>\r\n\r\n\t\t\t<v-btn class=\"hidden-sm-and-down mr-3\" :disabled=\"uiFrozen\" @click=\"showNewFile = true\">\r\n\t\t\t\t<v-icon class=\"mr-1\">mdi-file-plus</v-icon> {{ $t('button.newFile.caption') }}\r\n\t\t\t</v-btn>\r\n\t\t\t<v-btn class=\"hidden-sm-and-down mr-3\" :disabled=\"uiFrozen\" @click=\"showNewDirectory = true\">\r\n\t\t\t\t<v-icon class=\"mr-1\">mdi-folder-plus</v-icon> {{ $t('button.newDirectory.caption') }}\r\n\t\t\t</v-btn>\r\n\t\t\t<v-btn class=\"hidden-sm-and-down mr-3\" color=\"info\" :loading=\"loading\" :disabled=\"uiFrozen\" @click=\"refresh\">\r\n\t\t\t\t<v-icon class=\"mr-1\">mdi-refresh</v-icon> {{ $t('button.refresh.caption') }}\r\n\t\t\t</v-btn>\r\n\t\t\t<upload-btn class=\"hidden-sm-and-down\" :directory=\"directory\" target=\"system\" color=\"success\" @uploadComplete=\"uploadComplete\"></upload-btn>\r\n\t\t</v-toolbar>\r\n\t\t\r\n\t\t<base-file-list ref=\"filelist\" v-model=\"selection\" :directory.sync=\"directory\" :loading.sync=\"loading\" sort-table=\"sys\" @fileClicked=\"fileClicked\" @fileEdited=\"fileEdited\" no-files-text=\"list.system.noFiles\">\r\n\t\t\t<template #file.config.json v-if=\"isRootDirectory\">\r\n\t\t\t\t<v-icon class=\"mr-1\">mdi-wrench</v-icon> config.json\r\n\t\t\t\t<v-chip @click.stop=\"editConfigTemplate\" class=\"pointer-cursor ml-2\"><v-icon xs class=\"mr-1\">mdi-open-in-new</v-icon> {{ $t('list.system.configToolNote') }}</v-chip>\r\n\t\t\t</template>\r\n\t\t</base-file-list>\r\n\t\t\r\n\t\t<v-speed-dial v-model=\"fab\" bottom right fixed direction=\"top\" transition=\"scale-transition\" class=\"hidden-md-and-up\">\r\n\t\t\t<template #activator>\r\n\t\t\t\t<v-btn v-model=\"fab\" dark color=\"primary\" fab>\r\n\t\t\t\t\t<v-icon v-if=\"fab\">mdi-close</v-icon>\r\n\t\t\t\t\t<v-icon v-else>mdi-dots-vertical</v-icon>\r\n\t\t\t\t</v-btn>\r\n\t\t\t</template>\r\n\r\n\t\t\t<v-btn fab :disabled=\"uiFrozen\" @click=\"showNewFile = true\">\r\n\t\t\t\t<v-icon class=\"mr-1\">mdi-file-plus</v-icon>\r\n\t\t\t</v-btn>\r\n\r\n\t\t\t<v-btn fab :disabled=\"uiFrozen\" @click=\"showNewDirectory = true\">\r\n\t\t\t\t<v-icon>mdi-folder-plus</v-icon>\r\n\t\t\t</v-btn>\r\n\r\n\t\t\t<v-btn fab color=\"info\" :loading=\"loading\" :disabled=\"uiFrozen\" @click=\"refresh\">\r\n\t\t\t\t<v-icon>mdi-refresh</v-icon>\r\n\t\t\t</v-btn>\r\n\r\n\t\t\t<upload-btn fab dark :directory=\"directory\" target=\"system\" color=\"success\" @uploadComplete=\"uploadComplete\">\r\n\t\t\t\t<v-icon>mdi-cloud-upload</v-icon>\r\n\t\t\t</upload-btn>\r\n\t\t</v-speed-dial>\r\n\r\n\t\t<new-directory-dialog :shown.sync=\"showNewDirectory\" :directory=\"directory\"></new-directory-dialog>\r\n\t\t<new-file-dialog :shown.sync=\"showNewFile\" :directory=\"directory\"></new-file-dialog>\r\n\t\t<confirm-dialog :shown.sync=\"showResetPrompt\" :title=\"$t('dialog.configUpdated.title')\" :prompt=\"$t('dialog.configUpdated.prompt')\" @confirmed=\"resetBoard\"></confirm-dialog>\r\n\t</div>\r\n</template>\r\n\r\n<script>\r\n'use strict'\r\n\r\nimport { mapState, mapGetters, mapActions } from 'vuex'\r\n\r\nimport { isPrinting } from '../../store/machine/modelEnums.js'\r\nimport Path from '../../utils/path.js'\r\n\r\nexport default {\r\n\tcomputed: {\r\n\t\t...mapState('machine/model', {\r\n\t\t\tsystemDirectory: state => state.directories.system,\r\n\t\t\tstatus: state => state.state.status\r\n\t\t}),\r\n\t\t...mapGetters(['uiFrozen']),\r\n\t\tisRootDirectory() { return Path.equals(this.directory, this.systemDirectory); }\r\n\t},\r\n\tdata() {\r\n\t\treturn {\r\n\t\t\tdirectory: Path.system,\r\n\t\t\tloading: false,\r\n\t\t\tselection: [],\r\n\t\t\tshowNewDirectory: false,\r\n\t\t\tshowNewFile: false,\r\n\t\t\tshowResetPrompt: false,\r\n\t\t\tfab: false\r\n\t\t}\r\n\t},\r\n\tmethods: {\r\n\t\t...mapActions('machine', ['download', 'sendCode']),\r\n\t\trefresh() {\r\n\t\t\tthis.$refs.filelist.refresh();\r\n\t\t},\r\n\t\tfileClicked(item) {\r\n\t\t\tif (item.name.toLowerCase().endsWith('.bin')) {\r\n\t\t\t\tthis.$refs.filelist.download(item);\r\n\t\t\t} else {\r\n\t\t\t\tthis.$refs.filelist.edit(item);\r\n\t\t\t}\r\n\t\t},\r\n\t\tfileEdited(filename) {\r\n\t\t\tif (!isPrinting(this.status) &&\r\n\t\t\t\t(Path.equals(filename, Path.combine(this.systemDirectory, Path.configFile)) || Path.equals(filename, '0:/sys/board.txt'))) {\r\n\t\t\t\t// Ask for firmware reset when config.g or 0:/sys/board.txt (RRF on LPC) has been edited\r\n\t\t\t\tthis.showResetPrompt = true;\r\n\t\t\t}\r\n\t\t},\r\n\t\tasync resetBoard() {\r\n\t\t\ttry {\r\n\t\t\t\tawait this.sendCode({ code: 'M999', log: false });\r\n\t\t\t} catch (e) {\r\n\t\t\t\t// this is expected\r\n\t\t\t}\r\n\t\t},\r\n\t\tasync editConfigTemplate() {\r\n\t\t\tconst jsonTemplate = await this.download({ filename: Path.combine(this.systemDirectory, 'config.json'), type: 'text' });\r\n\r\n\t\t\tconst form = document.createElement('form');\r\n\t\t\tform.method = 'POST';\r\n\t\t\tform.action = 'https://configtool.reprapfirmware.org/load.php';\r\n\t\t\tform.target = '_blank';\r\n\t\t\t{\r\n\t\t\t\tconst jsonTemplateInput = document.createElement('textarea');\r\n\t\t\t\tjsonTemplateInput.name = 'json';\r\n\t\t\t\tjsonTemplateInput.value = jsonTemplate;\r\n\t\t\t\tform.appendChild(jsonTemplateInput);\r\n\t\t\t}\r\n\t\t\tdocument.body.appendChild(form);\r\n\t\t\tform.submit();\r\n\t\t\tdocument.body.removeChild(form);\r\n\t\t},\r\n\t\tuploadComplete(files) {\r\n\t\t\tfor (let i = 0; i < files.length; i++) {\r\n\t\t\t\tif (files[i].name === Path.configFile) {\r\n\t\t\t\t\tthis.showResetPrompt = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tmounted() {\r\n\t\tthis.directory = this.systemDirectory;\r\n\t},\r\n\twatch: {\r\n\t\tsystemDirectory(to, from) {\r\n\t\t\tif (Path.equals(this.directory, from) || Path.getVolume(from) !== Path.getVolume(to)) {\r\n\t\t\t\tthis.directory = to;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n</script>\r\n"]}]}