{"remainingRequest":"C:\\Users\\jpatrick\\Documents\\GitHub\\DuetWebControl_Fork\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\jpatrick\\Documents\\GitHub\\DuetWebControl_Fork\\src\\components\\panels\\ToolsPanel.vue?vue&type=style&index=0&id=45246723&scoped=true&lang=css&","dependencies":[{"path":"C:\\Users\\jpatrick\\Documents\\GitHub\\DuetWebControl_Fork\\src\\components\\panels\\ToolsPanel.vue","mtime":1592248188577},{"path":"C:\\Users\\jpatrick\\Documents\\GitHub\\DuetWebControl_Fork\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\jpatrick\\Documents\\GitHub\\DuetWebControl_Fork\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\jpatrick\\Documents\\GitHub\\DuetWebControl_Fork\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\jpatrick\\Documents\\GitHub\\DuetWebControl_Fork\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1574476662000},{"path":"C:\\Users\\jpatrick\\Documents\\GitHub\\DuetWebControl_Fork\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\jpatrick\\Documents\\GitHub\\DuetWebControl_Fork\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQp0YWJsZSB7DQoJd2lkdGg6IDEwMCU7DQoJYm9yZGVyLXNwYWNpbmc6IDA7DQp9DQoNCnRhYmxlIHRkLA0KdGFibGUgdGggew0KCXRleHQtYWxpZ246IGNlbnRlcjsNCn0NCg0KdGFibGUudG9vbHMgdGgsDQp0YWJsZS50b29scyB0ZCB7DQoJd2lkdGg6IDIwJTsNCn0NCg0KdGFibGUuZXh0cmEgdGgsDQp0YWJsZS5leHRyYSB0ZCB7DQoJd2lkdGg6IDI1JTsNCn0NCg0KdGFibGUuZXh0cmEgdHIgPiB0aDpmaXJzdC1jaGlsZCwNCnRhYmxlLmV4dHJhIHRyID4gdGQ6Zmlyc3QtY2hpbGQgew0KCXdpZHRoOiA1MCU7DQp9DQo="},{"version":3,"sources":["ToolsPanel.vue"],"names":[],"mappings":";AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"ToolsPanel.vue","sourceRoot":"src/components/panels","sourcesContent":["<style scoped>\r\ntable {\r\n\twidth: 100%;\r\n\tborder-spacing: 0;\r\n}\r\n\r\ntable td,\r\ntable th {\r\n\ttext-align: center;\r\n}\r\n\r\ntable.tools th,\r\ntable.tools td {\r\n\twidth: 20%;\r\n}\r\n\r\ntable.extra th,\r\ntable.extra td {\r\n\twidth: 25%;\r\n}\r\n\r\ntable.extra tr > th:first-child,\r\ntable.extra tr > td:first-child {\r\n\twidth: 50%;\r\n}\r\n</style>\r\n\r\n<template>\r\n\t<v-card>\r\n\t\t<v-card-title class=\"py-2\">\r\n\t\t\t<panel-link :active=\"currentPage !== 'tools'\" @click=\"currentPage = 'tools'\" class=\"mr-2\">\r\n\t\t\t\t<v-icon small>mdi-wrench</v-icon> {{ $t('panel.tools.caption') }}\r\n\t\t\t</panel-link>\r\n\t\t\t<panel-link :active=\"currentPage !== 'extra'\" @click=\"currentPage = 'extra'\">\r\n\t\t\t\t<v-icon small>mdi-plus</v-icon> {{ $t('panel.tools.extra.caption') }}\r\n\t\t\t</panel-link>\r\n\r\n\t\t\t<v-spacer></v-spacer>\r\n\r\n\t\t\t<v-menu v-model=\"dropdownShown\" left offset-y :close-on-content-click=\"false\">\r\n\t\t\t\t<template #activator=\"{ on }\">\r\n\t\t\t\t\t<a v-on=\"on\" href=\"javascript:void(0)\">\r\n\t\t\t\t\t\t<v-icon small>mdi-menu-down</v-icon> {{ $t('panel.tools.controlAll') }}\r\n\t\t\t\t\t</a>\r\n\t\t\t\t</template>\r\n\r\n\t\t\t\t<v-card>\r\n\t\t\t\t\t<v-layout justify-center column class=\"pt-2 px-2\">\r\n\t\t\t\t\t\t<v-btn block color=\"info\" class=\"mb-3 pa-2\" :disabled=\"!canTurnEverythingOff\" @click=\"turnEverythingOff\">\r\n\t\t\t\t\t\t\t<v-icon class=\"mr-1\">mdi-power-standby</v-icon> {{ $t('panel.tools.turnEverythingOff') }}\r\n\t\t\t\t\t\t</v-btn>\r\n\r\n\t\t\t\t\t\t<tool-input ref=\"allActive\" :label=\"$t('panel.tools.allActiveTemperatures')\" all active></tool-input>\r\n\t\t\t\t\t\t<tool-input :label=\"$t('panel.tools.allStandbyTemperatures')\" all standby></tool-input>\r\n\t\t\t\t\t</v-layout>\r\n\t\t\t\t</v-card>\r\n\t\t\t</v-menu>\r\n\t\t</v-card-title>\r\n\r\n\t\t<v-card-text class=\"pa-0\">\r\n\t\t\t<template v-if=\"currentPage === 'tools'\">\r\n\t\t\t\t<table class=\"tools\" v-show=\"canShowTools\">\r\n\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t<th class=\"pl-2\">{{ $t('panel.tools.tool', ['']) }}</th>\r\n\t\t\t\t\t\t<th class=\"px-1\">{{ $t('panel.tools.heater', ['']) }}</th>\r\n\t\t\t\t\t\t<th class=\"px-1\">{{ $t('panel.tools.current', ['']) }}</th>\r\n\t\t\t\t\t\t<th class=\"px-1\">{{ $t('panel.tools.active') }}</th>\r\n\t\t\t\t\t\t<th class=\"pr-2\">{{ $t('panel.tools.standby') }}</th>\r\n\t\t\t\t\t</thead>\r\n\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t<!-- Tools -->\r\n\t\t\t\t\t\t<template v-for=\"(tool, toolIndex) in visibleTools\">\r\n\t\t\t\t\t\t\t<!-- Tool -->\r\n\t\t\t\t\t\t\t<tr v-for=\"(toolHeater, toolHeaterIndex) in getToolHeaters(tool)\" :key=\"`tool-${toolIndex}-${toolHeaterIndex}`\" :class=\"{ [selectedToolClass] : (tool.number === state.currentTool) }\">\r\n\t\t\t\t\t\t\t\t<!-- Tool Name -->\r\n\t\t\t\t\t\t\t\t<th v-if=\"toolHeaterIndex === 0\" :rowspan=\"Math.max(1, tool.heaters.length)\" class=\"pl-2\" :class=\"{ 'pt-2 pb-2' : !tool.heaters.length && !toolHeater }\">\r\n\t\t\t\t\t\t\t\t\t<a href=\"javascript:void(0)\" @click=\"toolClick(tool)\">\r\n\t\t\t\t\t\t\t\t\t\t{{ tool.name || $t('panel.tools.tool', [tool.number]) }}\r\n\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t\t<br>\r\n\t\t\t\t\t\t\t\t\t<span class=\"font-weight-regular caption\">\r\n\t\t\t\t\t\t\t\t\t\tT{{ tool.number }}\r\n\r\n\t\t\t\t\t\t\t\t\t\t<template v-if=\"isConnected && canLoadFilament(tool)\">\r\n\t\t\t\t\t\t\t\t\t\t\t-\r\n\t\t\t\t\t\t\t\t\t\t\t<v-menu v-if=\"getFilament(tool)\" offset-y auto>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<template #activator=\"{ on }\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<a v-on=\"on\" @click=\"filamentMenu.tool = tool\" href=\"javascript:void(0)\" class=\"font-weight-regular\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{{ getFilament(tool) }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</template>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<v-list>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<v-list-item @click=\"filamentMenu.dialogShown = true\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<v-icon class=\"mr-1\">mdi-swap-vertical</v-icon> {{ $t('panel.tools.changeFilament') }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</v-list-item>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<v-list-item @click=\"unloadFilament\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<v-icon class=\"mr-1\">mdi-arrow-up</v-icon> {{ $t('panel.tools.unloadFilament') }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</v-list-item>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</v-list>\r\n\t\t\t\t\t\t\t\t\t\t\t</v-menu>\r\n\t\t\t\t\t\t\t\t\t\t\t<a v-else href=\"javascript:void(0)\" @click=\"filamentMenu.tool = tool; filamentMenu.dialogShown = true\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t{{ $t('panel.tools.loadFilament') }}\r\n\t\t\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t\t\t</template>\r\n\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t</th>\r\n\r\n\t\t\t\t\t\t\t\t<template v-if=\"!toolHeater && getSpindle(tool)\">\r\n\t\t\t\t\t\t\t\t\t<!-- Spindle Name -->\r\n\t\t\t\t\t\t\t\t\t<th>\r\n\t\t\t\t\t\t\t\t\t\t<!-- unused -->\r\n\t\t\t\t\t\t\t\t\t</th>\r\n\r\n\t\t\t\t\t\t\t\t\t<!-- Current RPM -->\r\n\t\t\t\t\t\t\t\t\t<td class=\"text-center\">\r\n\t\t\t\t\t\t\t\t\t\t{{ $display(getSpindle(tool).current, 0, $t('generic.rpm')) }}\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\r\n\t\t\t\t\t\t\t\t\t<!-- Active RPM -->\r\n\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t<tool-input :spindle=\"getSpindle(tool)\" :spindle-index=\"getSpindleIndex(tool)\" active></tool-input>\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\r\n\t\t\t\t\t\t\t\t\t<!-- Standby RPM -->\r\n\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t<!-- unused -->\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t</template>\r\n\t\t\t\t\t\t\t\t<template v-else>\r\n\t\t\t\t\t\t\t\t\t<!-- Heater Name -->\r\n\t\t\t\t\t\t\t\t\t<th>\r\n\t\t\t\t\t\t\t\t\t\t<template v-if=\"toolHeater\">\r\n\t\t\t\t\t\t\t\t\t\t\t<a href=\"javascript:void(0)\" @click=\"toolHeaterClick(tool, toolHeater)\" :class=\"getHeaterColor(tool.heaters[toolHeaterIndex])\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t{{ getHeaterName(toolHeater, tool.heaters[toolHeaterIndex]) }}\r\n\t\t\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t\t\t\t<template v-if=\"toolHeater.state !== null\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<br>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"font-weight-regular caption\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{{ $t(`generic.heaterStates.${toolHeater.state}`) }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</template>\r\n\t\t\t\t\t\t\t\t\t\t</template>\r\n\t\t\t\t\t\t\t\t\t\t<span v-else>\r\n\t\t\t\t\t\t\t\t\t\t\t{{ $t('generic.noValue') }}\r\n\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t</th>\r\n\r\n\t\t\t\t\t\t\t\t\t<!-- Heater value -->\r\n\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t{{ getHeaterValue(toolHeater) }}\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\r\n\t\t\t\t\t\t\t\t\t<!-- Heater active -->\r\n\t\t\t\t\t\t\t\t\t<td class=\"pl-2 pr-1\">\r\n\t\t\t\t\t\t\t\t\t\t<tool-input :tool=\"tool\" :tool-heater-index=\"toolHeaterIndex\" active></tool-input>\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\r\n\t\t\t\t\t\t\t\t\t<!-- Heater standby -->\r\n\t\t\t\t\t\t\t\t\t<td class=\"pl-1 pr-2\">\r\n\t\t\t\t\t\t\t\t\t\t<tool-input :tool=\"tool\" :tool-heater-index=\"toolHeaterIndex\" standby></tool-input>\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t</template>\r\n\t\t\t\t\t\t\t</tr>\r\n\r\n\t\t\t\t\t\t\t<!-- Divider -->\r\n\t\t\t\t\t\t\t<tr v-if=\"toolIndex < visibleTools.length - 1\" :key=\"`div-tool-${toolIndex}`\">\r\n\t\t\t\t\t\t\t\t<td colspan=\"5\">\r\n\t\t\t\t\t\t\t\t\t<v-divider></v-divider>\r\n\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t</template>\r\n\r\n\t\t\t\t\t\t<!-- Beds -->\r\n\t\t\t\t\t\t<template v-for=\"(bedHeater, bedIndex) in bedHeaters\">\r\n\t\t\t\t\t\t\t<template v-if=\"bedHeater\">\r\n\t\t\t\t\t\t\t\t<!-- Divider -->\r\n\t\t\t\t\t\t\t\t<tr v-if=\"visibleTools.length\" :key=\"`div-bed-${bedIndex}`\">\r\n\t\t\t\t\t\t\t\t\t<td colspan=\"5\">\r\n\t\t\t\t\t\t\t\t\t\t<v-divider></v-divider>\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\r\n\t\t\t\t\t\t\t\t<!-- Bed -->\r\n\t\t\t\t\t\t\t\t<tr :key=\"`bed-${bedIndex}-0`\">\r\n\t\t\t\t\t\t\t\t\t<!-- Bed name -->\r\n\t\t\t\t\t\t\t\t\t<th class=\"pl-2\">\r\n\t\t\t\t\t\t\t\t\t\t<a href=\"javascript:void(0)\" @click=\"bedHeaterClick(bedHeater, bedIndex)\">\r\n\t\t\t\t\t\t\t\t\t\t\t{{ $t('panel.tools.bed', [hasOneBed ? '' : bedIndex]) }}\r\n\t\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t\t</th>\r\n\r\n\t\t\t\t\t\t\t\t\t<!-- Heater name -->\r\n\t\t\t\t\t\t\t\t\t<th>\r\n\t\t\t\t\t\t\t\t\t\t<a href=\"javascript:void(0)\" @click=\"bedHeaterClick(bedHeater, bedIndex)\" :class=\"getHeaterColor(heat.bedHeaters[bedIndex])\">\r\n\t\t\t\t\t\t\t\t\t\t\t{{ getHeaterName(bedHeater, heat.bedHeaters[bedIndex]) }}\r\n\t\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t\t\t<template v-if=\"bedHeater.state !== null\">\r\n\t\t\t\t\t\t\t\t\t\t\t<br>\r\n\t\t\t\t\t\t\t\t\t\t\t<span class=\"font-weight-regular caption\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t{{ $t(`generic.heaterStates.${bedHeater.state}`) }}\r\n\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t</template>\r\n\t\t\t\t\t\t\t\t\t</th>\r\n\r\n\t\t\t\t\t\t\t\t\t<!-- Heater value -->\r\n\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t{{ getHeaterValue(bedHeater) }}\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\r\n\t\t\t\t\t\t\t\t\t<!-- Heater active -->\r\n\t\t\t\t\t\t\t\t\t<td class=\"pl-2 pr-1\">\r\n\t\t\t\t\t\t\t\t\t\t<tool-input :bed=\"bedHeater\" :bed-index=\"bedIndex\" active></tool-input>\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\r\n\t\t\t\t\t\t\t\t\t<!-- Heater standby -->\r\n\t\t\t\t\t\t\t\t\t<td class=\"pl-1 pr-2\">\r\n\t\t\t\t\t\t\t\t\t\t<tool-input :bed=\"bedHeater\" :bed-index=\"bedIndex\" standby></tool-input>\r\n\t\t\t\t\t\t\t\t\t</td>\t\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t</template>\r\n\t\t\t\t\t\t</template>\r\n\r\n\t\t\t\t\t\t<!-- Chambers -->\r\n\t\t\t\t\t\t<template v-for=\"(chamberHeater, chamberIndex) in chamberHeaters\">\r\n\t\t\t\t\t\t\t<template v-if=\"chamberHeater\">\r\n\t\t\t\t\t\t\t\t<!-- Divider -->\r\n\t\t\t\t\t\t\t\t<tr :key=\"`div-chamber-${chamberIndex}`\">\r\n\t\t\t\t\t\t\t\t\t<td colspan=\"5\">\r\n\t\t\t\t\t\t\t\t\t\t<v-divider></v-divider>\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\r\n\t\t\t\t\t\t\t\t<!-- Chamber -->\r\n\t\t\t\t\t\t\t\t<tr :key=\"`chamber-${chamberIndex}-0`\">\r\n\t\t\t\t\t\t\t\t\t<!-- Chamber name -->\r\n\t\t\t\t\t\t\t\t\t<th class=\"pl-2\">\r\n\t\t\t\t\t\t\t\t\t\t<a href=\"javascript:void(0)\" @click=\"chamberHeaterClick(chamberHeater, chamberIndex)\">\r\n\t\t\t\t\t\t\t\t\t\t\t{{ $t('panel.tools.chamber', [hasOneChamber ? '' : chamberIndex]) }}\r\n\t\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t\t</th>\r\n\r\n\t\t\t\t\t\t\t\t\t<!-- Heater name -->\r\n\t\t\t\t\t\t\t\t\t<th>\r\n\t\t\t\t\t\t\t\t\t\t<a href=\"javascript:void(0)\" @click=\"chamberHeaterClick(chamberHeater, chamberIndex)\" :class=\"getHeaterColor(heat.chamberHeaters[chamberIndex])\">\r\n\t\t\t\t\t\t\t\t\t\t\t{{ getHeaterName(chamberHeater, heat.chamberHeaters[chamberIndex]) }}\r\n\t\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t\t\t<template v-if=\"chamberHeater.state !== null\">\r\n\t\t\t\t\t\t\t\t\t\t\t<br>\r\n\t\t\t\t\t\t\t\t\t\t\t<span class=\"font-weight-regular caption\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t{{ $t(`generic.heaterStates.${chamberHeater.state}`) }}\r\n\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t</template>\r\n\t\t\t\t\t\t\t\t\t</th>\r\n\r\n\t\t\t\t\t\t\t\t\t<!-- Heater value -->\r\n\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t{{ getHeaterValue(chamberHeater) }}\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\r\n\t\t\t\t\t\t\t\t\t<!-- Heater active -->\r\n\t\t\t\t\t\t\t\t\t<td class=\"pl-2 pr-1\">\r\n\t\t\t\t\t\t\t\t\t\t<tool-input :chamber=\"chamberHeater\" :chamber-index=\"chamberIndex\" active></tool-input>\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\r\n\t\t\t\t\t\t\t\t\t<!-- Heater standby -->\r\n\t\t\t\t\t\t\t\t\t<td class=\"pl-1 pr-2\">\r\n\t\t\t\t\t\t\t\t\t\t<tool-input :chamber=\"chamberHeater\" :chamber-index=\"chamberIndex\" standby></tool-input>\r\n\t\t\t\t\t\t\t\t\t</td>\t\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t</template>\r\n\t\t\t\t\t\t</template>\r\n\t\t\t\t\t</tbody>\r\n\t\t\t\t</table>\r\n\r\n\t\t\t\t<v-alert :value=\"!canShowTools\" type=\"info\" class=\"mb-0\">\r\n\t\t\t\t\t{{ $t('panel.tools.noTools') }}\r\n\t\t\t\t</v-alert>\r\n\r\n\t\t\t\t<reset-heater-fault-dialog :shown.sync=\"resetHeaterFault\" :heater=\"faultyHeater\"></reset-heater-fault-dialog>\r\n\t\t\t\t<filament-dialog :shown.sync=\"filamentMenu.dialogShown\" :tool=\"filamentMenu.tool\"></filament-dialog>\r\n\t\t\t</template>\r\n\r\n\t\t\t<template v-else-if=\"currentPage === 'extra'\">\r\n\t\t\t\t<table class=\"extra ml-2 mr-2\" v-show=\"extraSensors.length\">\r\n\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t<th class=\"hidden-sm-and-down\"></th>\r\n\t\t\t\t\t\t<th>{{ $t('panel.tools.extra.sensor') }}</th>\r\n\t\t\t\t\t\t<th>{{ $t('panel.tools.extra.value') }}</th>\r\n\t\t\t\t\t</thead>\r\n\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t<tr v-for=\"extraItem in extraSensors\" :key=\"`extra-${extraItem.index}`\">\r\n\t\t\t\t\t\t\t<td class=\"hidden-sm-and-down\">\r\n\t\t\t\t\t\t\t\t<v-switch class=\"ml-3\" :input-value=\"displayedExtraTemperatures.indexOf(extraItem.index) !== -1\" @change=\"toggleExtraVisibility(extraItem.index)\" :label=\"$t('panel.tools.extra.showInChart')\" :disabled=\"uiFrozen\"></v-switch>\r\n\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t<th class=\"py-2\" :class=\"getExtraColor(extraItem.index)\">\r\n\t\t\t\t\t\t\t\t{{ formatExtraName(extraItem) }}\r\n\t\t\t\t\t\t\t</th>\r\n\t\t\t\t\t\t\t<td class=\"py-2\">\r\n\t\t\t\t\t\t\t\t{{ formatSensorValue(extraItem.sensor) }}\r\n\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t</tbody>\r\n\t\t\t\t</table>\r\n\t\t\t\t<v-alert :value=\"!extraSensors.length\" type=\"info\">\r\n\t\t\t\t\t{{ $t('panel.tools.extra.noItems') }}\r\n\t\t\t\t</v-alert>\r\n\t\t\t</template>\r\n\t\t</v-card-text>\r\n\t</v-card>\r\n</template>\r\n\r\n<script>\r\n'use strict'\r\n\r\nimport { mapState, mapGetters, mapActions, mapMutations } from 'vuex'\r\n\r\nimport { AnalogSensorType, HeaterState } from '../../store/machine/modelEnums.js'\r\nimport { getHeaterColor, getExtraColor } from '../../utils/colors.js'\r\nimport { DisconnectedError } from '../../utils/errors.js'\r\n\r\nexport default {\r\n\tcomputed: {\r\n\t\t...mapGetters(['isConnected', 'uiFrozen']),\r\n\t\t...mapState('machine/model', ['heat', 'move', 'sensors', 'state', 'spindles', 'tools']),\r\n\t\t...mapState('machine/settings', ['displayedExtraTemperatures']),\r\n\t\t...mapState('settings', ['darkTheme']),\r\n\t\tcanTurnEverythingOff() {\r\n\t\t\treturn (!this.uiFrozen &&\r\n\t\t\t\t\t(this.tools.some(tool => tool && tool.heaters.some(toolHeater => toolHeater >= 0 && toolHeater < this.heat.heaters.length &&\r\n\t\t\t\t\t\tthis.heat.heaters[toolHeater] && this.heat.heaters[toolHeater].state !== HeaterState.off, this), this) ||\r\n\t\t\t\t\tthis.heat.bedHeaters.some(bedHeater => bedHeater >= 0 && bedHeater < this.heat.heaters.length &&\r\n\t\t\t\t\t\tthis.heat.heaters[bedHeater] && this.heat.heaters[bedHeater].state !== HeaterState.off, this) ||\r\n\t\t\t\t\tthis.heat.chamberHeaters.some(chamberHeater => chamberHeater >= 0 && chamberHeater < this.heat.heaters.length &&\r\n\t\t\t\t\t\tthis.heat.heaters[chamberHeater] && this.heat.heaters[chamberHeater].state !== HeaterState.off, this)));\r\n\t\t},\r\n\t\tvisibleTools() {\r\n\t\t\treturn this.tools.filter(tool => tool !== null);\r\n\t\t},\r\n\t\tcanShowTools() {\r\n\t\t\treturn (this.visibleTools.length > 0 ||\r\n\t\t\t\t\tthis.bedHeaters.some(bed => bed !== null) ||\r\n\t\t\t\t\tthis.chamberHeaters.some(chamber => chamber !== null));\r\n\t\t},\r\n\t\tselectedToolClass() {\r\n\t\t\treturn this.darkTheme ? 'grey darken-3' : 'blue lighten-5';\r\n\t\t},\r\n\t\textraSensors() {\r\n\t\t\treturn this.sensors.analog\r\n\t\t\t\t.map((sensor, index) => ({ sensor, index }))\r\n\t\t\t\t.filter(item => item.sensor && !this.heat.heaters.some(heater => heater && heater.sensor === item.index));\r\n\t\t},\r\n\t\tbedHeaters() {\r\n\t\t\treturn this.heat.bedHeaters\r\n\t\t\t\t.map(heaterIndex => {\r\n\t\t\t\t\tif (heaterIndex >= 0 && heaterIndex < this.heat.heaters.length && this.heat.heaters[heaterIndex]) {\r\n\t\t\t\t\t\treturn this.heat.heaters[heaterIndex];\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn null;\r\n\t\t\t\t});\r\n\t\t},\r\n\t\thasOneBed() {\r\n\t\t\treturn this.bedHeaters.filter(bed => bed).length === 1;\r\n\t\t},\r\n\t\tchamberHeaters() {\r\n\t\t\treturn this.heat.chamberHeaters\r\n\t\t\t\t.map(heaterIndex => {\r\n\t\t\t\t\tif (heaterIndex >= 0 && heaterIndex < this.heat.heaters.length && this.heat.heaters[heaterIndex]) {\r\n\t\t\t\t\t\treturn this.heat.heaters[heaterIndex];\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn null;\r\n\t\t\t\t});\r\n\t\t},\r\n\t\thasOneChamber() {\r\n\t\t\treturn this.chamberHeaters.filter(chamber => chamber).length === 1;\r\n\t\t}\r\n\t},\r\n\tdata() {\r\n\t\treturn {\r\n\t\t\tdropdownShown: false,\r\n\t\t\tturningEverythingOff: false,\r\n\r\n\t\t\tcurrentPage: 'tools',\r\n\t\t\twaitingForCode: false,\r\n\r\n\t\t\tloadingFilament: false,\r\n\t\t\tfilamentMenu: {\r\n\t\t\t\ttool: undefined,\r\n\t\t\t\tdialogShown: false\r\n\t\t\t},\r\n\r\n\t\t\tresetHeaterFault: false,\r\n\t\t\tfaultyHeater: -1\r\n\t\t}\r\n\t},\r\n\tmethods: {\r\n\t\t...mapActions('machine', ['sendCode']),\r\n\t\t...mapMutations('machine/settings', ['toggleExtraVisibility']),\r\n\r\n\t\t// Control All Drop-Down\r\n\t\tshowDropdown() {\r\n\t\t\tthis.dropdownShown = !this.dropdownShown;\r\n\t\t\tif (this.dropdownShown) {\r\n\t\t\t\tconst input = this.$refs.allActive;\r\n\t\t\t\tsetTimeout(() => input.focus(), 300);\r\n\t\t\t}\r\n\t\t},\r\n\t\tasync turnEverythingOff() {\r\n\t\t\tlet code = '';\r\n\t\t\tthis.tools.forEach(function(tool) {\r\n\t\t\t\tif (tool && tool.heaters.length) {\r\n\t\t\t\t\tconst temps = tool.heaters.map(() => '-273.15').join(':');\r\n\t\t\t\t\tcode += `G10 P${tool.number} R${temps} S${temps}\\n`;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tthis.heat.bedHeaters.forEach(function(bedHeater, index) {\r\n\t\t\t\tif (bedHeater >= -1 && bedHeater < this.heat.heaters.length) {\r\n\t\t\t\t\tcode += `M140 P${index} S-273.15\\n`;\r\n\t\t\t\t}\r\n\t\t\t}, this);\r\n\t\t\tthis.heat.chamberHeaters.forEach(function(chamberHeater, index) {\r\n\t\t\t\tif (chamberHeater >= -1 && chamberHeater < this.heat.heaters.length) {\r\n\t\t\t\t\tcode += `M141 P${index} S-273.15\\n`;\r\n\t\t\t\t}\r\n\t\t\t}, this);\r\n\r\n\t\t\tthis.turningEverythingOff = true;\r\n\t\t\ttry {\r\n\t\t\t\tawait this.sendCode(code);\r\n\t\t\t} catch (e) {\r\n\t\t\t\tif (!(e instanceof DisconnectedError)) {\r\n\t\t\t\t\tthis.$log('error', this.$t('error.turnOffEverythingFailed'), e.message);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.turningEverythingOff = false;\r\n\t\t},\r\n\r\n\t\t// Heaters\r\n\t\tgetHeaterColor: heater => getHeaterColor(heater),\r\n\t\tgetHeaterName(heater, heaterIndex) {\r\n\t\t\tif (heater && heater.sensor >= 0 && heater.sensor < this.sensors.analog.length) {\r\n\t\t\t\tconst sensor = this.sensors.analog[heater.sensor];\r\n\t\t\t\tif (sensor && sensor.name) {\r\n\t\t\t\t\tconst matches = /(.*)\\[(.*)\\]$/.exec(sensor.name);\r\n\t\t\t\t\tif (matches) {\r\n\t\t\t\t\t\treturn matches[1];\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn sensor.name;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn this.$t('panel.tools.heater', [heaterIndex]);\r\n\t\t},\r\n\t\tgetHeaterValue(heater) {\r\n\t\t\tif (heater && heater.sensor >= 0 && heater.sensor < this.sensors.analog.length) {\r\n\t\t\t\tconst sensor = this.sensors.analog[heater.sensor];\r\n\t\t\t\tif (sensor) {\r\n\t\t\t\t\treturn this.formatSensorValue(sensor);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn this.$t('generic.noValue');\r\n\t\t},\r\n\t\tformatSensorValue(sensor) {\r\n\t\t\tif (sensor.name) {\r\n\t\t\t\tconst matches = /(.*)\\[(.*)\\]$/.exec(sensor.name);\r\n\t\t\t\tif (matches) {\r\n\t\t\t\t\treturn this.$display(sensor.lastReading, 1, matches[2]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tconst unit = (sensor.type === AnalogSensorType.dhtHumidity) ? '%RH' : 'C';\r\n\t\t\treturn this.$display(sensor.lastReading, 1, unit);\r\n\t\t},\r\n\r\n\t\t// Tools\r\n\t\ttoolClick(tool) {\r\n\t\t\tif (!this.isConnected) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tthis.waitingForCode = true;\r\n\t\t\ttry {\r\n\t\t\t\tif (this.state.currentTool === tool.number) {\r\n\t\t\t\t\t// Deselect current tool\r\n\t\t\t\t\tthis.sendCode('T-1');\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// Select new tool\r\n\t\t\t\t\tthis.sendCode(`T${tool.number}`);\r\n\t\t\t\t}\r\n\t\t\t} catch (e) {\r\n\t\t\t\tif (!(e instanceof DisconnectedError)) {\r\n\t\t\t\t\tthis.$log('error', e.message);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.waitingForCode = false;\r\n\t\t},\r\n\t\tgetFilament(tool) {\r\n\t\t\tif (this.isNumber(tool.filamentExtruder) && tool.filamentExtruder >= 0 && tool.filamentExtruder < this.move.extruders.length) {\r\n\t\t\t\treturn this.move.extruders[tool.filamentExtruder].filament;\r\n\t\t\t}\r\n\t\t\treturn null;\r\n\t\t},\r\n\t\tcanLoadFilament(tool) {\r\n\t\t\treturn !this.uiFrozen && tool.filamentExtruder >= 0 && tool.filamentExtruder < this.move.extruders.length;\r\n\t\t},\r\n\t\tunloadFilament() {\r\n\t\t\tif (!this.isConnected) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tlet code = '';\r\n\t\t\tif (this.state.currentTool !== this.filamentMenu.tool.number) {\r\n\t\t\t\tcode = `T${this.filamentMenu.tool.number}\\n`;\r\n\t\t\t}\r\n\t\t\tcode += 'M702';\r\n\t\t\tthis.sendCode(code);\r\n\t\t},\r\n\t\t\r\n\t\tgetToolHeaters(tool) {\r\n\t\t\tconst toolHeaters = tool.heaters\r\n\t\t\t\t.filter(heaterIndex => heaterIndex >= 0 && heaterIndex < this.heat.heaters.length && this.heat.heaters[heaterIndex], this)\r\n\t\t\t\t.map(heaterIndex => this.heat.heaters[heaterIndex], this);\r\n\t\t\treturn toolHeaters.length ? toolHeaters : [null];\r\n\t\t},\r\n\t\ttoolHeaterClick(tool, heater) {\r\n\t\t\tif (!this.isConnected) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tlet offTemps;\r\n\t\t\tswitch (heater.state) {\r\n\t\t\t\tcase HeaterState.off:\t\t// Off -> Active\r\n\t\t\t\t\tthis.sendCode(`T${tool.number}`);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase HeaterState.standby:\t// Standby -> Off\r\n\t\t\t\t\toffTemps = tool.active.map(() => '-273.15').join(':');\r\n\t\t\t\t\tthis.sendCode(`G10 P${tool.number} S${offTemps} R${offTemps}`);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase HeaterState.active:\t// Active -> Standby\r\n\t\t\t\t\tthis.sendCode('T-1');\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase HeaterState.fault:\t\t// Fault -> Ask for reset\r\n\t\t\t\t\tthis.faultyHeater = this.heat.heaters.indexOf(heater);\r\n\t\t\t\t\tthis.resetHeaterFault = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tgetSpindle(tool) {\r\n\t\t\treturn this.spindles.find(spindle => spindle.tool === tool.number);\r\n\t\t},\r\n\t\tgetSpindleIndex(tool) {\r\n\t\t\treturn this.spindles.findIndex(spindle => spindle.tool === tool.number);\r\n\t\t},\r\n\r\n\t\t// Beds\r\n\t\tbedHeaterClick(bedHeater, bedIndex) {\r\n\t\t\tif (!this.isConnected) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tswitch (bedHeater.state) {\r\n\t\t\t\tcase HeaterState.off:\t\t// Off -> Active\r\n\t\t\t\t\tthis.sendCode(`M140 P${bedIndex} S${bedHeater.active}`);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase HeaterState.standby:\t// Standby -> Off\r\n\t\t\t\t\tthis.sendCode(`M140 P${bedIndex} S-273.15`);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase HeaterState.active:\t// Active -> Standby\r\n\t\t\t\t\tthis.sendCode(`M144 P${bedIndex}`);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase HeaterState.fault:\t\t// Fault -> Ask for reset\r\n\t\t\t\t\tthis.faultyHeater = this.heat.heaters.indexOf(bedHeater);\r\n\t\t\t\t\tthis.resetHeaterFault = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t// Chambers\r\n\t\tchamberHeaterClick(chamberHeater, chamberIndex) {\r\n\t\t\tif (!this.isConnected) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tswitch (chamberHeater.state) {\r\n\t\t\t\tcase HeaterState.off:\t\t// Off -> Active\r\n\t\t\t\t\tthis.sendCode(`M141 P${chamberIndex} S${chamberHeater.active}`);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t// Standby mode for chambers is not officially supported yet (there's no code for standby control)\r\n\r\n\t\t\t\tcase HeaterState.fault:\t\t// Fault -> Ask for reset\r\n\t\t\t\t\tthis.faultyHeater = this.heat.heaters.indexOf(chamberHeater);\r\n\t\t\t\t\tthis.resetHeaterFault = true;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\t// Active -> Off\r\n\t\t\t\t\tthis.sendCode(`M141 P${chamberIndex} S-273.15`);\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t// Extra\r\n\t\tgetExtraColor: item => getExtraColor(item),\r\n\t\tformatExtraName(item) {\r\n\t\t\tif (item.sensor.name) {\r\n\t\t\t\tconst matches = /(.*)\\[(.*)\\]$/.exec(item.sensor.name);\r\n\t\t\t\tif (matches) {\r\n\t\t\t\t\treturn matches[1];\r\n\t\t\t\t}\r\n\t\t\t\treturn item.sensor.name;\r\n\t\t\t}\r\n\t\t\treturn this.$t('panel.tools.extra.sensorIndex', [item.index]);\r\n\t\t}\r\n\t}\r\n}\r\n</script>\r\n"]}]}