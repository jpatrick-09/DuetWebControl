{"remainingRequest":"C:\\Users\\jpatrick\\Documents\\GitHub\\DuetWebControl_Fork\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\jpatrick\\Documents\\GitHub\\DuetWebControl_Fork\\src\\components\\panels\\ExtrudePanel.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\jpatrick\\Documents\\GitHub\\DuetWebControl_Fork\\src\\components\\panels\\ExtrudePanel.vue","mtime":1592248188558},{"path":"C:\\Users\\jpatrick\\Documents\\GitHub\\DuetWebControl_Fork\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\jpatrick\\Documents\\GitHub\\DuetWebControl_Fork\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\jpatrick\\Documents\\GitHub\\DuetWebControl_Fork\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\jpatrick\\Documents\\GitHub\\DuetWebControl_Fork\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1574476662000},{"path":"C:\\Users\\jpatrick\\Documents\\GitHub\\DuetWebControl_Fork\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\jpatrick\\Documents\\GitHub\\DuetWebControl_Fork\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQondXNlIHN0cmljdCcNCg0KaW1wb3J0IHsgbWFwU3RhdGUsIG1hcEdldHRlcnMsIG1hcEFjdGlvbnMsIG1hcE11dGF0aW9ucyB9IGZyb20gJ3Z1ZXgnDQoNCmV4cG9ydCBkZWZhdWx0IHsNCgljb21wdXRlZDogew0KCQkuLi5tYXBHZXR0ZXJzKFsndWlGcm96ZW4nXSksDQoJCS4uLm1hcFN0YXRlKCdtYWNoaW5lL21vZGVsJywgWydoZWF0JywgJ3NlbnNvcnMnXSksDQoJCS4uLm1hcEdldHRlcnMoJ21hY2hpbmUvbW9kZWwnLCBbJ2N1cnJlbnRUb29sJ10pLA0KCQkuLi5tYXBTdGF0ZSgnbWFjaGluZS9zZXR0aW5ncycsIFsnZXh0cnVkZXJBbW91bnRzJywgJ2V4dHJ1ZGVyRmVlZHJhdGVzJ10pLA0KCQljYW5FeHRydWRlKCkgew0KCQkJaWYgKHRoaXMuY3VycmVudFRvb2wgJiYgdGhpcy5jdXJyZW50VG9vbC5leHRydWRlcnMubGVuZ3RoID4gMCkgew0KCQkJCXJldHVybiAhdGhpcy5jdXJyZW50VG9vbC5oZWF0ZXJzLnNvbWUoaGVhdGVyTnVtYmVyID0+IHsNCgkJCQkJaWYgKGhlYXRlck51bWJlciA+PSAwICYmIGhlYXRlck51bWJlciA8IHRoaXMuaGVhdC5oZWF0ZXJzLmxlbmd0aCkgew0KCQkJCQkJY29uc3QgaGVhdGVyU2Vuc29yID0gdGhpcy5oZWF0LmhlYXRlcnNbaGVhdGVyTnVtYmVyXS5zZW5zb3I7DQoJCQkJCQlpZiAoaGVhdGVyU2Vuc29yID49IDAgJiYgaGVhdGVyU2Vuc29yIDwgdGhpcy5zZW5zb3JzLmFuYWxvZy5sZW5ndGgpIHsNCgkJCQkJCQljb25zdCBzZW5zb3IgPSB0aGlzLnNlbnNvcnMuYW5hbG9nW2hlYXRlclNlbnNvcl07DQoJCQkJCQkJcmV0dXJuICFzZW5zb3IgfHwgc2Vuc29yLmxhc3RSZWFkaW5nIDwgdGhpcy5oZWF0LmNvbGRFeHRydWRlVGVtcGVyYXR1cmU7DQoJCQkJCQl9DQoJCQkJCX0NCgkJCQkJcmV0dXJuIHRydWU7DQoJCQkJfSwgdGhpcyk7DQoJCQl9DQoJCQlyZXR1cm4gZmFsc2U7DQoJCX0sDQoJCWNhblJldHJhY3QoKSB7DQoJCQlpZiAodGhpcy5jdXJyZW50VG9vbCAmJiB0aGlzLmN1cnJlbnRUb29sLmV4dHJ1ZGVycy5sZW5ndGggPiAwKSB7DQoJCQkJcmV0dXJuICF0aGlzLmN1cnJlbnRUb29sLmhlYXRlcnMuc29tZShoZWF0ZXJOdW1iZXIgPT4gew0KCQkJCQlpZiAoaGVhdGVyTnVtYmVyID49IDAgJiYgaGVhdGVyTnVtYmVyIDwgdGhpcy5oZWF0LmhlYXRlcnMubGVuZ3RoKSB7DQoJCQkJCQljb25zdCBoZWF0ZXJTZW5zb3IgPSB0aGlzLmhlYXQuaGVhdGVyc1toZWF0ZXJOdW1iZXJdLnNlbnNvcjsNCgkJCQkJCWlmIChoZWF0ZXJTZW5zb3IgPj0gMCAmJiBoZWF0ZXJTZW5zb3IgPCB0aGlzLnNlbnNvcnMuYW5hbG9nLmxlbmd0aCkgew0KCQkJCQkJCWNvbnN0IHNlbnNvciA9IHRoaXMuc2Vuc29ycy5hbmFsb2dbaGVhdGVyU2Vuc29yXTsNCgkJCQkJCQlyZXR1cm4gIXNlbnNvciB8fCBzZW5zb3IubGFzdFJlYWRpbmcgPCB0aGlzLmhlYXQuY29sZFJldHJhY3RUZW1wZXJhdHVyZTsNCgkJCQkJCX0NCgkJCQkJfQ0KCQkJCQlyZXR1cm4gdHJ1ZTsNCgkJCQl9LCB0aGlzKTsNCgkJCX0NCgkJCXJldHVybiBmYWxzZTsNCgkJfSwNCgkJbWl4OiB7DQoJCQlnZXQoKSB7IHJldHVybiB0aGlzLm1peFZhbHVlOyB9LA0KCQkJc2V0KHZhbHVlKSB7DQoJCQkJaWYgKHZhbHVlLmxlbmd0aCA+IDEpIHsNCgkJCQkJaWYgKHRoaXMubWl4VmFsdWUuaW5kZXhPZignbWl4JykgIT09IHZhbHVlLmluZGV4T2YoJ21peCcpKSB7DQoJCQkJCQkvLyBNaXggaXMgYmVpbmcgdG9nZ2xlZA0KCQkJCQkJaWYgKHZhbHVlLmluZGV4T2YoJ21peCcpICE9PSAtMSkgew0KCQkJCQkJCXRoaXMubWl4VmFsdWUgPSBbJ21peCddOw0KCQkJCQkJfSBlbHNlIHsNCgkJCQkJCQl0aGlzLm1peFZhbHVlID0gdmFsdWUuZmlsdGVyKGl0ZW0gPT4gaXRlbSAhPT0gJ21peCcpOw0KCQkJCQkJfQ0KCQkJCQl9IGVsc2Ugew0KCQkJCQkJLy8gU2VsZWN0aW5nIGFub3RoZXIgRSBkcml2ZQ0KCQkJCQkJdGhpcy5taXhWYWx1ZSA9IHZhbHVlLmZpbHRlcihpdGVtID0+IGl0ZW0gIT09ICdtaXgnKTsNCgkJCQkJfQ0KCQkJCX0gZWxzZSB7DQoJCQkJCS8vIE9uZSB2YWx1ZSAtIE9LDQoJCQkJCXRoaXMubWl4VmFsdWUgPSB2YWx1ZTsNCgkJCQl9DQoJCQl9DQoJCX0NCgl9LA0KCWRhdGEoKSB7DQoJCXJldHVybiB7DQoJCQlidXN5OiBmYWxzZSwNCgkJCW1peFZhbHVlOiBbJ21peCddLA0KCQkJYW1vdW50OiAxMCwNCgkJCWZlZWRyYXRlOiA1LA0KCQkJZWRpdEFtb3VudERpYWxvZzogew0KCQkJCXNob3duOiBmYWxzZSwNCgkJCQlpbmRleDogMCwNCgkJCQlwcmVzZXQ6IDANCgkJCX0sDQoJCQllZGl0RmVlZHJhdGVEaWFsb2c6IHsNCgkJCQlzaG93bjogZmFsc2UsDQoJCQkJaW5kZXg6IDAsDQoJCQkJcHJlc2V0OiAwDQoJCQl9DQoJCX0NCgl9LA0KCW1ldGhvZHM6IHsNCgkJLi4ubWFwQWN0aW9ucygnbWFjaGluZScsIFsnc2VuZENvZGUnXSksDQoJCS4uLm1hcE11dGF0aW9ucygnbWFjaGluZS9zZXR0aW5ncycsIFsnc2V0RXh0cnVzaW9uQW1vdW50JywgJ3NldEV4dHJ1c2lvbkZlZWRyYXRlJ10pLA0KCQlhc3luYyBidXR0b25DbGlja2VkKGV4dHJ1ZGUpIHsNCgkJCWlmICghdGhpcy5jdXJyZW50VG9vbC5leHRydWRlcnMubGVuZ3RoKSB7DQoJCQkJcmV0dXJuOw0KCQkJfQ0KDQoJCQlsZXQgYW1vdW50czsNCgkJCWlmICh0aGlzLm1peFZhbHVlWzBdID09PSAnbWl4Jykgew0KCQkJCS8vIFNwbGl0IHRvdGFsIGFtb3VudCB0byBleHRydWRlIGV2ZW5seQ0KCQkJCWFtb3VudHMgPSBbdGhpcy5hbW91bnRdOw0KCQkJfSBlbHNlIHsNCgkJCQkvLyBFeHRydWRlIGdpdmVuIGFtb3VudCB2aWEgZWFjaCBzZWxlY3RlZCBleHRydWRlciBkcml2ZQ0KCQkJCWFtb3VudHMgPSB0aGlzLmN1cnJlbnRUb29sLmV4dHJ1ZGVycy5tYXAoZXh0cnVkZXIgPT4gKHRoaXMubWl4LmluZGV4T2YoZXh0cnVkZXIpICE9PSAtMSkgPyB0aGlzLmFtb3VudCA6IDApOw0KCQkJfQ0KDQoJCQl0aGlzLmJ1c3kgPSB0cnVlOw0KCQkJdHJ5IHsNCgkJCQljb25zdCBhbW91bnQgPSBhbW91bnRzLm1hcChhbW91bnQgPT4gZXh0cnVkZSA/IGFtb3VudCA6IC1hbW91bnQpLmpvaW4oJzonKTsNCgkJCQlhd2FpdCB0aGlzLnNlbmRDb2RlKGBNMTIwXG5NODNcbkcxIEUke2Ftb3VudH0gRiR7dGhpcy5mZWVkcmF0ZSAqIDYwfVxuTTEyMWApOw0KCQkJfSBjYXRjaCAoZSkgew0KCQkJCS8vIGhhbmRsZWQgYmVmb3JlIHdlIGdldCBoZXJlDQoJCQl9DQoJCQl0aGlzLmJ1c3kgPSBmYWxzZTsNCgkJfSwNCgkJZWRpdEFtb3VudChpbmRleCkgew0KCQkJdGhpcy5lZGl0QW1vdW50RGlhbG9nLmluZGV4ID0gaW5kZXg7DQoJCQl0aGlzLmVkaXRBbW91bnREaWFsb2cucHJlc2V0ID0gdGhpcy5leHRydWRlckFtb3VudHNbaW5kZXhdOw0KCQkJdGhpcy5lZGl0QW1vdW50RGlhbG9nLnNob3duID0gdHJ1ZTsNCgkJfSwNCgkJc2V0QW1vdW50KHZhbHVlKSB7DQoJCQl0aGlzLnNldEV4dHJ1c2lvbkFtb3VudCh7IGluZGV4OiB0aGlzLmVkaXRBbW91bnREaWFsb2cuaW5kZXgsIHZhbHVlIH0pOw0KCQkJdGhpcy5hbW91bnQgPSB2YWx1ZTsNCgkJfSwNCgkJZWRpdEZlZWRyYXRlKGluZGV4KSB7DQoJCQl0aGlzLmVkaXRGZWVkcmF0ZURpYWxvZy5pbmRleCA9IGluZGV4Ow0KCQkJdGhpcy5lZGl0RmVlZHJhdGVEaWFsb2cucHJlc2V0ID0gdGhpcy5leHRydWRlckZlZWRyYXRlc1tpbmRleF07DQoJCQl0aGlzLmVkaXRGZWVkcmF0ZURpYWxvZy5zaG93biA9IHRydWU7DQoJCX0sDQoJCXNldEZlZWRyYXRlKHZhbHVlKSB7DQoJCQl0aGlzLnNldEV4dHJ1c2lvbkZlZWRyYXRlKHsgaW5kZXg6IHRoaXMuZWRpdEZlZWRyYXRlRGlhbG9nLmluZGV4LCB2YWx1ZSB9KTsNCgkJCXRoaXMuZmVlZHJhdGUgPSB2YWx1ZTsNCgkJfQ0KCX0sDQoJbW91bnRlZCgpIHsNCgkJdGhpcy5hbW91bnQgPSB0aGlzLmV4dHJ1ZGVyQW1vdW50c1szXTsNCgkJdGhpcy5mZWVkcmF0ZSA9IHRoaXMuZXh0cnVkZXJGZWVkcmF0ZXNbM107DQoJfSwNCgl3YXRjaDogew0KCQljdXJyZW50VG9vbCh0bykgew0KCQkJaWYgKCF0byB8fCB0by5leHRydWRlcnMubGVuZ3RoIDw9IDEpIHsNCgkJCQkvLyBTd2l0Y2ggYmFjayB0byBtaXhpbmcgbW9kZSBpZiB0aGUgc2VsZWN0aW9uIHBhbmVsIGlzIGhpZGRlbg0KCQkJCXRoaXMubWl4ID0gWydtaXgnXTsNCgkJCX0NCgkJfSwNCgkJZXh0cnVkZXJBbW91bnRzKCkgew0KCQkJdGhpcy5hbW91bnQgPSB0aGlzLmV4dHJ1ZGVyQW1vdW50c1szXTsNCgkJfSwNCgkJZXh0cnVkZXJGZWVkcmF0ZXMoKSB7DQoJCQl0aGlzLmZlZWRyYXRlID0gdGhpcy5leHRydWRlckZlZWRyYXRlc1szXTsNCgkJfQ0KCX0NCn0NCg=="},{"version":3,"sources":["ExtrudePanel.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0DA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ExtrudePanel.vue","sourceRoot":"src/components/panels","sourcesContent":["<template>\r\n\t<v-card>\r\n\t\t<v-card-title class=\"pb-0\">\r\n\t\t\t<v-icon small class=\"mr-1\">mdi-opacity</v-icon> {{ $t('panel.extrude.caption') }}\r\n\t\t</v-card-title>\r\n\r\n\t\t<v-card-text class=\"pb-0\">\r\n\t\t\t<v-row class=\"pb-1\" align=\"center\" justify=\"center\">\r\n\t\t\t\t<v-col v-if=\"currentTool && currentTool.extruders.length > 1\" cols=\"auto\">\r\n\t\t\t\t\t<p class=\"mb-1\">\r\n\t\t\t\t\t{{ $t('panel.extrude.mixRatio') }}\r\n\t\t\t\t\t</p>\r\n\t\t\t\t\t<v-btn-toggle v-model=\"mix\" mandatory multiple>\r\n\t\t\t\t\t\t<v-btn text value=\"mix\" :disabled=\"uiFrozen\" color=\"primary\">\r\n\t\t\t\t\t\t\t{{ $t('panel.extrude.mix') }}\r\n\t\t\t\t\t\t</v-btn>\r\n\t\t\t\t\t\t<v-btn text v-for=\"extruder in currentTool.extruders\" :key=\"extruder\" :value=\"extruder\" :disabled=\"uiFrozen\" color=\"primary\">\r\n\t\t\t\t\t\t\t{{ `E${extruder}` }}\r\n\t\t\t\t\t\t</v-btn>\r\n\t\t\t\t\t</v-btn-toggle>\r\n\t\t\t\t</v-col>\r\n\t\t\t\t<v-col>\r\n\t\t\t\t\t<p class=\"mb-1\">\r\n\t\t\t\t\t{{ $t('panel.extrude.amount', ['mm']) }}\r\n\t\t\t\t\t</p>\r\n\t\t\t\t\t<v-btn-toggle v-model=\"amount\" mandatory class=\"d-flex\">\r\n\t\t\t\t\t\t<v-btn v-for=\"(savedAmount, index) in extruderAmounts\" :key=\"index\" :value=\"savedAmount\" :disabled=\"uiFrozen\" @contextmenu.prevent=\"editAmount(index)\" class=\"flex-grow-1\">\r\n\t\t\t\t\t\t\t{{ savedAmount }}\r\n\t\t\t\t\t\t</v-btn>\r\n\t\t\t\t\t</v-btn-toggle>\r\n\t\t\t\t</v-col>\r\n\t\t\t\t<v-col>\r\n\t\t\t\t\t<p class=\"mb-1\">\r\n\t\t\t\t\t{{ $t('panel.extrude.feedrate', ['mm/s']) }}\r\n\t\t\t\t\t</p>\r\n\t\t\t\t\t<v-btn-toggle v-model=\"feedrate\" mandatory class=\"d-flex\">\r\n\t\t\t\t\t\t<v-btn v-for=\"(savedFeedrate, index) in extruderFeedrates\" :key=\"index\" :value=\"savedFeedrate\" :disabled=\"uiFrozen\" @contextmenu.prevent=\"editFeedrate(index)\" class=\"flex-grow-1\">\r\n\t\t\t\t\t\t\t{{ savedFeedrate }}\r\n\t\t\t\t\t\t</v-btn>\r\n\t\t\t\t\t</v-btn-toggle>\r\n\t\t\t\t</v-col>\r\n\t\t\t\t<v-col cols=\"auto\" class=\"flex-shrink-1\">\r\n\t\t\t\t\t<v-btn block tile :disabled=\"uiFrozen || !canRetract\" :loading=\"busy\" @click=\"buttonClicked(false)\">\r\n\t\t\t\t\t\t<v-icon>mdi-arrow-up-bold</v-icon> {{ $t('panel.extrude.retract') }}\r\n\t\t\t\t\t</v-btn>\r\n\t\t\t\t\t<v-btn block tile :disabled=\"uiFrozen || !canExtrude\" :loading=\"busy\" @click=\"buttonClicked(true)\">\r\n\t\t\t\t\t\t<v-icon>mdi-arrow-down-bold</v-icon> {{ $t('panel.extrude.extrude') }}\r\n\t\t\t\t\t</v-btn>\r\n\t\t\t\t</v-col>\r\n\t\t\t</v-row>\r\n\t\t</v-card-text>\r\n\r\n\t\t<input-dialog :shown.sync=\"editAmountDialog.shown\" :title=\"$t('dialog.editExtrusionAmount.title')\" :prompt=\"$t('dialog.editExtrusionAmount.prompt')\" :preset=\"editAmountDialog.preset\" is-numeric-value @confirmed=\"setAmount\"></input-dialog>\r\n\t\t<input-dialog :shown.sync=\"editFeedrateDialog.shown\" :title=\"$t('dialog.editExtrusionFeedrate.title')\" :prompt=\"$t('dialog.editExtrusionFeedrate.prompt')\" :preset=\"editFeedrateDialog.preset\" is-numeric-value @confirmed=\"setFeedrate\"></input-dialog>\r\n\t</v-card>\r\n</template>\r\n\r\n<script>\r\n'use strict'\r\n\r\nimport { mapState, mapGetters, mapActions, mapMutations } from 'vuex'\r\n\r\nexport default {\r\n\tcomputed: {\r\n\t\t...mapGetters(['uiFrozen']),\r\n\t\t...mapState('machine/model', ['heat', 'sensors']),\r\n\t\t...mapGetters('machine/model', ['currentTool']),\r\n\t\t...mapState('machine/settings', ['extruderAmounts', 'extruderFeedrates']),\r\n\t\tcanExtrude() {\r\n\t\t\tif (this.currentTool && this.currentTool.extruders.length > 0) {\r\n\t\t\t\treturn !this.currentTool.heaters.some(heaterNumber => {\r\n\t\t\t\t\tif (heaterNumber >= 0 && heaterNumber < this.heat.heaters.length) {\r\n\t\t\t\t\t\tconst heaterSensor = this.heat.heaters[heaterNumber].sensor;\r\n\t\t\t\t\t\tif (heaterSensor >= 0 && heaterSensor < this.sensors.analog.length) {\r\n\t\t\t\t\t\t\tconst sensor = this.sensors.analog[heaterSensor];\r\n\t\t\t\t\t\t\treturn !sensor || sensor.lastReading < this.heat.coldExtrudeTemperature;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}, this);\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t},\r\n\t\tcanRetract() {\r\n\t\t\tif (this.currentTool && this.currentTool.extruders.length > 0) {\r\n\t\t\t\treturn !this.currentTool.heaters.some(heaterNumber => {\r\n\t\t\t\t\tif (heaterNumber >= 0 && heaterNumber < this.heat.heaters.length) {\r\n\t\t\t\t\t\tconst heaterSensor = this.heat.heaters[heaterNumber].sensor;\r\n\t\t\t\t\t\tif (heaterSensor >= 0 && heaterSensor < this.sensors.analog.length) {\r\n\t\t\t\t\t\t\tconst sensor = this.sensors.analog[heaterSensor];\r\n\t\t\t\t\t\t\treturn !sensor || sensor.lastReading < this.heat.coldRetractTemperature;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}, this);\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t},\r\n\t\tmix: {\r\n\t\t\tget() { return this.mixValue; },\r\n\t\t\tset(value) {\r\n\t\t\t\tif (value.length > 1) {\r\n\t\t\t\t\tif (this.mixValue.indexOf('mix') !== value.indexOf('mix')) {\r\n\t\t\t\t\t\t// Mix is being toggled\r\n\t\t\t\t\t\tif (value.indexOf('mix') !== -1) {\r\n\t\t\t\t\t\t\tthis.mixValue = ['mix'];\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tthis.mixValue = value.filter(item => item !== 'mix');\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// Selecting another E drive\r\n\t\t\t\t\t\tthis.mixValue = value.filter(item => item !== 'mix');\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// One value - OK\r\n\t\t\t\t\tthis.mixValue = value;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tdata() {\r\n\t\treturn {\r\n\t\t\tbusy: false,\r\n\t\t\tmixValue: ['mix'],\r\n\t\t\tamount: 10,\r\n\t\t\tfeedrate: 5,\r\n\t\t\teditAmountDialog: {\r\n\t\t\t\tshown: false,\r\n\t\t\t\tindex: 0,\r\n\t\t\t\tpreset: 0\r\n\t\t\t},\r\n\t\t\teditFeedrateDialog: {\r\n\t\t\t\tshown: false,\r\n\t\t\t\tindex: 0,\r\n\t\t\t\tpreset: 0\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tmethods: {\r\n\t\t...mapActions('machine', ['sendCode']),\r\n\t\t...mapMutations('machine/settings', ['setExtrusionAmount', 'setExtrusionFeedrate']),\r\n\t\tasync buttonClicked(extrude) {\r\n\t\t\tif (!this.currentTool.extruders.length) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tlet amounts;\r\n\t\t\tif (this.mixValue[0] === 'mix') {\r\n\t\t\t\t// Split total amount to extrude evenly\r\n\t\t\t\tamounts = [this.amount];\r\n\t\t\t} else {\r\n\t\t\t\t// Extrude given amount via each selected extruder drive\r\n\t\t\t\tamounts = this.currentTool.extruders.map(extruder => (this.mix.indexOf(extruder) !== -1) ? this.amount : 0);\r\n\t\t\t}\r\n\r\n\t\t\tthis.busy = true;\r\n\t\t\ttry {\r\n\t\t\t\tconst amount = amounts.map(amount => extrude ? amount : -amount).join(':');\r\n\t\t\t\tawait this.sendCode(`M120\\nM83\\nG1 E${amount} F${this.feedrate * 60}\\nM121`);\r\n\t\t\t} catch (e) {\r\n\t\t\t\t// handled before we get here\r\n\t\t\t}\r\n\t\t\tthis.busy = false;\r\n\t\t},\r\n\t\teditAmount(index) {\r\n\t\t\tthis.editAmountDialog.index = index;\r\n\t\t\tthis.editAmountDialog.preset = this.extruderAmounts[index];\r\n\t\t\tthis.editAmountDialog.shown = true;\r\n\t\t},\r\n\t\tsetAmount(value) {\r\n\t\t\tthis.setExtrusionAmount({ index: this.editAmountDialog.index, value });\r\n\t\t\tthis.amount = value;\r\n\t\t},\r\n\t\teditFeedrate(index) {\r\n\t\t\tthis.editFeedrateDialog.index = index;\r\n\t\t\tthis.editFeedrateDialog.preset = this.extruderFeedrates[index];\r\n\t\t\tthis.editFeedrateDialog.shown = true;\r\n\t\t},\r\n\t\tsetFeedrate(value) {\r\n\t\t\tthis.setExtrusionFeedrate({ index: this.editFeedrateDialog.index, value });\r\n\t\t\tthis.feedrate = value;\r\n\t\t}\r\n\t},\r\n\tmounted() {\r\n\t\tthis.amount = this.extruderAmounts[3];\r\n\t\tthis.feedrate = this.extruderFeedrates[3];\r\n\t},\r\n\twatch: {\r\n\t\tcurrentTool(to) {\r\n\t\t\tif (!to || to.extruders.length <= 1) {\r\n\t\t\t\t// Switch back to mixing mode if the selection panel is hidden\r\n\t\t\t\tthis.mix = ['mix'];\r\n\t\t\t}\r\n\t\t},\r\n\t\textruderAmounts() {\r\n\t\t\tthis.amount = this.extruderAmounts[3];\r\n\t\t},\r\n\t\textruderFeedrates() {\r\n\t\t\tthis.feedrate = this.extruderFeedrates[3];\r\n\t\t}\r\n\t}\r\n}\r\n</script>\r\n"]}]}