{"remainingRequest":"C:\\Users\\jpatrick\\Documents\\GitHub\\DuetWebControl_Fork\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\jpatrick\\Documents\\GitHub\\DuetWebControl_Fork\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\jpatrick\\Documents\\GitHub\\DuetWebControl_Fork\\node_modules\\vuetify-loader\\lib\\loader.js??ref--18-0!C:\\Users\\jpatrick\\Documents\\GitHub\\DuetWebControl_Fork\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\jpatrick\\Documents\\GitHub\\DuetWebControl_Fork\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\jpatrick\\Documents\\GitHub\\DuetWebControl_Fork\\src\\components\\inputs\\CodeInput.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\jpatrick\\Documents\\GitHub\\DuetWebControl_Fork\\src\\components\\inputs\\CodeInput.vue","mtime":1592248188531},{"path":"C:\\Users\\jpatrick\\Documents\\GitHub\\DuetWebControl_Fork\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\jpatrick\\Documents\\GitHub\\DuetWebControl_Fork\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\jpatrick\\Documents\\GitHub\\DuetWebControl_Fork\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\jpatrick\\Documents\\GitHub\\DuetWebControl_Fork\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1574476662000},{"path":"C:\\Users\\jpatrick\\Documents\\GitHub\\DuetWebControl_Fork\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\jpatrick\\Documents\\GitHub\\DuetWebControl_Fork\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["CodeInput.vue"],"names":[],"mappings":"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","sourcesContent":["<style scoped>\r\n.grow {\r\n\tflex-grow: 1;\r\n}\r\n</style>\r\n\r\n<template>\r\n\t<v-row class=\"component flex-shrink-1\" :class=\"{ 'mt-2' : solo, 'grow' : grow }\" no-gutters align=\"center\">\r\n\t\t<v-col>\r\n\t\t\t<v-combobox ref=\"input\" :solo=\"solo\" hide-details :disabled=\"uiFrozen\" :placeholder=\"$t('input.code.placeholder')\"\r\n\t\t\t\t\t\t:search-input.sync=\"code\" @click=\"click\" :loading=\"doingCode\" @keyup.enter=\"send\" @change=\"change\" @blur=\"wasFocused = showItems = false\"\r\n\t\t\t\t\t\t:items=\"displayedCodes\" @update:list-index=\"updateSelection\" @keyup.down=\"showItems = true\" @keyup.tab.exact=\"selectItem\" hide-selected>\r\n\t\t\t\t<template #item=\"{ item }\">\r\n\t\t\t\t\t<code>{{ item.text }}</code>\r\n\t\t\t\t\t<v-spacer></v-spacer>\r\n\t\t\t\t\t<v-btn icon @click.prevent.stop=\"removeCode(item.value)\">\r\n\t\t\t\t\t\t<v-icon>mdi-delete</v-icon>\r\n\t\t\t\t\t</v-btn>\r\n\t\t\t\t</template>\r\n\t\t\t</v-combobox>\r\n\t\t</v-col>\r\n\r\n\t\t<v-col class=\"ml-2 flex-shrink-1\" cols=\"auto\">\r\n\t\t\t<v-btn color=\"info\" :disabled=\"uiFrozen\" :loading=\"doingCode\" @click=\"doSend\">\r\n\t\t\t\t<v-icon class=\"mr-2\">mdi-send</v-icon> {{ $t('input.code.send') }} \r\n\t\t\t</v-btn>\r\n\t\t</v-col>\r\n\t</v-row>\r\n</template>\r\n\r\n<script>\r\n'use strict'\r\n\r\nimport { mapState, mapGetters, mapActions, mapMutations } from 'vuex'\r\n\r\nconst conditionalKeywords = ['abort', 'echo', 'if', 'elif', 'else', 'while', 'break', 'var', 'set'];\r\n\r\nexport default {\r\n\tcomputed: {\r\n\t\t...mapGetters(['uiFrozen']),\r\n\t\t...mapState('machine/settings', ['codes']),\r\n\t\t...mapState('settings', ['disableAutoComplete']),\r\n\t\tdisplayedCodes() {\r\n\t\t\tif (this.showItems && !this.disableAutoComplete) {\r\n\t\t\t\tconst currentCode = this.code ? this.code.toLowerCase() : '';\r\n\t\t\t\treturn this.codes\r\n\t\t\t\t\t.filter(code => (currentCode === '') || (code.toLowerCase().indexOf(currentCode) !== -1))\r\n\t\t\t\t\t.map(code => ({ text: code, value: code }));\r\n\t\t\t}\r\n\t\t\treturn [];\r\n\t\t}\r\n\t},\r\n\tdata() {\r\n\t\treturn {\r\n\t\t\tcode: '',\r\n\t\t\twasFocused: false,\r\n\t\t\tshowItems: false,\r\n\t\t\tselectedItem: '',\r\n\t\t\tsendPending: false,\r\n\t\t\tdoingCode: false\r\n\t\t}\r\n\t},\r\n\tprops: {\r\n\t\tgrow: Boolean,\r\n\t\tsolo: Boolean\r\n\t},\r\n\tmethods: {\r\n\t\t...mapActions('machine', ['sendCode']),\r\n\t\t...mapMutations('machine/settings', ['addCode', 'removeCode']),\r\n\t\tclick() {\r\n\t\t\tif (this.wasFocused) {\r\n\t\t\t\tthis.showItems = !this.showItems;\r\n\t\t\t} else {\r\n\t\t\t\tthis.wasFocused = true;\r\n\t\t\t}\r\n\t\t},\r\n\t\tupdateSelection(selection) {\r\n\t\t\tif (selection instanceof Array) {\r\n\t\t\t\tselection = (selection.length > 0) ? selection[0] : -1;\r\n\t\t\t}\r\n\r\n\t\t\tconst items = this.displayedCodes;\r\n\t\t\tif (selection >= 0 && selection < items.length) {\r\n\t\t\t\tthis.selectedItem = items[selection].value;\r\n\t\t\t} else {\r\n\t\t\t\tthis.selectedItem = '';\r\n\t\t\t}\r\n\t\t},\r\n\t\tselectItem(e) {\r\n\t\t\tif (this.selectedItem !== '') {\r\n\t\t\t\tthis.code = this.selectedItem;\r\n\t\t\t\tthis.showItems = false;\r\n\t\t\t\te.preventDefault();\r\n\t\t\t}\r\n\t\t},\r\n\t\tchange(value) {\r\n\t\t\tif (value && !(value instanceof String)) {\r\n\t\t\t\tthis.code = value.value;\r\n\t\t\t}\r\n\t\t},\r\n\t\tdoSend() {\r\n\t\t\tif (this.$refs.input.isMenuActive) {\r\n\t\t\t\tthis.$refs.input.isMenuActive = false;\t\t// FIXME There must be a better solution than this\r\n\t\t\t\tthis.sendPending = true;\r\n\t\t\t} else {\r\n\t\t\t\tthis.send();\r\n\t\t\t}\r\n\t\t},\r\n\t\thasUnprecedentedParameters: (code) => !code || /(M23|M28|M30|M32|M36|M117)[^0-9]/i.test(code),\r\n\t\tasync send() {\r\n\t\t\tthis.$refs.input.isMenuActive = false;\t\t\t// FIXME There must be a better solution than this\r\n\r\n\t\t\tconst code = (this.code.constructor === String) ? this.code : this.code.value;\r\n\t\t\tif (code && code.trim() !== '' && !this.doingCode) {\r\n\t\t\t\tlet codeToSend = '', bareCode = '', inQuotes = false, inExpression = false, inWhiteSpace = false, inComment = false;\r\n\t\t\t\tif (!this.hasUnprecedentedParameters(codeToSend) &&\r\n\t\t\t\t\t!conditionalKeywords.some(keyword => code.trim().startsWith(keyword))) {\r\n\t\t\t\t\t// Convert code to upper-case and remove comments\r\n\t\t\t\t\tfor (let i = 0; i < code.length; i++) {\r\n\t\t\t\t\t\tconst char = code[i];\r\n\t\t\t\t\t\tif (inQuotes) {\r\n\t\t\t\t\t\t\tif (i < code.length - 1 && char === '\\\\' && code[i + 1] === '\"') {\r\n\t\t\t\t\t\t\t\tcodeToSend += '\\\\\"';\r\n\t\t\t\t\t\t\t\ti++;\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tif (char === '\"') {\r\n\t\t\t\t\t\t\t\t\tinQuotes = false;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tcodeToSend += char;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else if (inExpression) {\r\n\t\t\t\t\t\t\tcodeToSend += char;\r\n\t\t\t\t\t\t\tinExpression = (char !== '}');\r\n\t\t\t\t\t\t} else if (inComment) {\r\n\t\t\t\t\t\t\tcodeToSend += char;\r\n\t\t\t\t\t\t\tinComment = (char !== ')');\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tif (char === '\"') {\r\n\t\t\t\t\t\t\t\t// don't convert escaped strings\r\n\t\t\t\t\t\t\t\tinQuotes = true;\r\n\t\t\t\t\t\t\t} else if (char === ' ' || char === '\\t') {\r\n\t\t\t\t\t\t\t\t// remove duplicate white spaces\r\n\t\t\t\t\t\t\t\tif (inWhiteSpace) {\r\n\t\t\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tinWhiteSpace = true;\r\n\t\t\t\t\t\t\t} else if (char === ';') {\r\n\t\t\t\t\t\t\t\t// stop when final comments start\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t} else if (char === '(') {\r\n\t\t\t\t\t\t\t\t// don't process chars from encapsulated comments\r\n\t\t\t\t\t\t\t\tinComment = true;\r\n\t\t\t\t\t\t\t} else if (char === '{') {\r\n\t\t\t\t\t\t\t\t// don't process chars from expressions\r\n\t\t\t\t\t\t\t\tinExpression = true;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tinWhiteSpace = false;\r\n\t\t\t\t\t\t\tcodeToSend += char.toUpperCase();\r\n\t\t\t\t\t\t\tbareCode += code.toUpperCase();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// Don't modify the user input\r\n\t\t\t\t\tcodeToSend = code;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Send the code and wait for completion\r\n\t\t\t\tthis.doingCode = true;\r\n\t\t\t\ttry {\r\n\t\t\t\t\tconst reply = await this.sendCode({ code: codeToSend, fromInput: true });\r\n\t\t\t\t\tif (!inQuotes && !reply.startsWith('Error: ') && !reply.startsWith('Warning: ') &&\r\n\t\t\t\t\t\tbareCode.indexOf('M587') === -1 && bareCode.indexOf('M589') === -1 &&\r\n\t\t\t\t\t\t!this.disableAutoComplete && this.codes.indexOf(codeToSend.trim()) === -1) {\r\n\t\t\t\t\t\t// Automatically remember successful codes\r\n\t\t\t\t\t\tthis.addCode(codeToSend.trim());\r\n\t\t\t\t\t}\r\n\t\t\t\t} catch {\r\n\t\t\t\t\t// handled before we get here\r\n\t\t\t\t}\r\n\t\t\t\tthis.doingCode = false;\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\twatch: {\r\n\t\tcode(to) {\r\n\t\t\tif (to && to.length >= 2) {\r\n\t\t\t\tthis.showItems = true;\r\n\t\t\t}\r\n\t\t},\r\n\t\tuiFrozen(to) {\r\n\t\t\tif (to) {\r\n\t\t\t\t// Clear input when the UI is frozen\r\n\t\t\t\tthis.code = '';\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n</script>\r\n"],"sourceRoot":"src/components/inputs"}]}