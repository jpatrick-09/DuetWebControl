{"remainingRequest":"C:\\Users\\jpatrick\\Documents\\GitHub\\DuetWebControl_Fork\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\jpatrick\\Documents\\GitHub\\DuetWebControl_Fork\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\jpatrick\\Documents\\GitHub\\DuetWebControl_Fork\\node_modules\\vuetify-loader\\lib\\loader.js??ref--18-0!C:\\Users\\jpatrick\\Documents\\GitHub\\DuetWebControl_Fork\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\jpatrick\\Documents\\GitHub\\DuetWebControl_Fork\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\jpatrick\\Documents\\GitHub\\DuetWebControl_Fork\\src\\components\\lists\\MacroList.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\jpatrick\\Documents\\GitHub\\DuetWebControl_Fork\\src\\components\\lists\\MacroList.vue","mtime":1592248188544},{"path":"C:\\Users\\jpatrick\\Documents\\GitHub\\DuetWebControl_Fork\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\jpatrick\\Documents\\GitHub\\DuetWebControl_Fork\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\jpatrick\\Documents\\GitHub\\DuetWebControl_Fork\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\jpatrick\\Documents\\GitHub\\DuetWebControl_Fork\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1574476662000},{"path":"C:\\Users\\jpatrick\\Documents\\GitHub\\DuetWebControl_Fork\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\jpatrick\\Documents\\GitHub\\DuetWebControl_Fork\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["MacroList.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n\t<v-card>\r\n\t\t<v-card-title>\r\n\t\t\t<v-icon small class=\"mr-1\">mdi-polymer</v-icon> {{ $t('list.macro.caption') }}\r\n\t\t\t<v-spacer></v-spacer>\r\n\t\t\t<span v-show=\"isConnected\" class=\"subtitle-2\">{{ directory.replace(macrosDirectory, $t('list.macro.root')) }}</span>\r\n\t\t</v-card-title>\r\n\r\n\t\t<v-card-text class=\"pa-0\" v-show=\"loading || filelist.length || !isRootDirectory\">\r\n\t\t\t<v-progress-linear v-show=\"loading\" :indeterminate=\"true\" class=\"my-0\"></v-progress-linear>\r\n\r\n\t\t\t<v-list class=\"pt-0\" dense>\r\n\t\t\t\t<v-list-item v-if=\"!isRootDirectory\" @click=\"goUp\">\r\n\t\t\t\t\t<v-list-item-avatar>\r\n\t\t\t\t\t\t<v-icon class=\"list-icon mr-1 grey lighten-1 white--text\">mdi-arrow-up</v-icon>\r\n\t\t\t\t\t</v-list-item-avatar>\r\n\r\n\t\t\t\t\t<v-list-item-content>\r\n\t\t\t\t\t\t<v-list-item-title>{{ $t('list.baseFileList.goUp') }}</v-list-item-title>\r\n\t\t\t\t\t</v-list-item-content>\r\n\t\t\t\t</v-list-item>\r\n\r\n\t\t\t\t<v-list-item v-for=\"item in filelist\" :key=\"item.name\" @click=\"itemClick(item)\">\r\n\t\t\t\t\t<v-list-item-avatar>\r\n\t\t\t\t\t\t<v-icon class=\"mr-1\" :class=\"item.isDirectory ? 'grey lighten-1 white--text' : 'blue white--text'\">\r\n\t\t\t\t\t\t\t{{ item.isDirectory ? 'mdi-folder' : 'mdi-file' }}\r\n\t\t\t\t\t\t</v-icon>\r\n\t\t\t\t\t</v-list-item-avatar>\r\n\r\n\t\t\t\t\t<v-list-item-content>\r\n\t\t\t\t\t\t<v-list-item-title>{{ item.displayName }}</v-list-item-title>\r\n\t\t\t\t\t</v-list-item-content>\r\n\r\n\t\t\t\t\t<v-list-item-action v-if=\"!item.isDirectory && item.executing\">\r\n\t\t\t\t\t\t<v-progress-circular class=\"list-icon\" indeterminate color=\"blue\"></v-progress-circular>\r\n\t\t\t\t\t</v-list-item-action>\r\n\t\t\t\t</v-list-item>\r\n\t\t\t</v-list>\r\n\t\t</v-card-text>\r\n\r\n\t\t<v-alert :value=\"!filelist.length\" type=\"info\">\r\n\t\t\t{{ $t('list.macro.noMacros') }}\r\n\t\t</v-alert>\r\n\t</v-card>\r\n</template>\r\n\r\n<script>\r\n'use strict'\r\n\r\nimport { mapState, mapGetters, mapActions } from 'vuex'\r\n\r\nimport { getModifiedDirectories } from '../../store/machine'\r\nimport { DisconnectedError } from '../../utils/errors.js'\r\nimport Path from '../../utils/path.js'\r\n\r\nexport default {\r\n\tcomputed: {\r\n\t\t...mapState(['selectedMachine']),\r\n\t\t...mapGetters(['isConnected', 'uiFrozen']),\r\n\t\t...mapState('machine/model', {\r\n\t\t\tmacrosDirectory: state => state.directories.macros,\r\n\t\t\tvolumes: state => state.volumes\r\n\t\t}),\r\n\t\tisRootDirectory() { return Path.equals(this.directory, this.macrosDirectory); }\r\n\t},\r\n\tdata () {\r\n\t\treturn {\r\n\t\t\tunsubscribe: undefined,\r\n\t\t\tloading: false,\r\n\t\t\twasMounted: false,\r\n\t\t\tdirectory: Path.macros,\r\n\t\t\tfilelist: []\r\n\t\t}\r\n\t},\r\n\tmethods: {\r\n\t\t...mapActions('machine', ['sendCode', 'getFileList']),\r\n\t\tasync loadDirectory(directory) {\r\n\t\t\tif (this.loading) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tthis.loading = true;\r\n\t\t\ttry {\r\n\t\t\t\tconst files = await this.getFileList(directory);\r\n\t\t\t\tfiles.sort((a, b) => a.name.localeCompare(b.name, undefined, { sensivity: 'base' }));\r\n\t\t\t\tfiles.sort((a, b) => (a.isDirectory === b.isDirectory) ? 0 : (a.isDirectory ? -1 : 1));\r\n\t\t\t\tfiles.forEach(function(item) {\r\n\t\t\t\t\titem.displayName = Path.stripMacroFilename(item.name);\r\n\t\t\t\t\titem.executing = false;\r\n\t\t\t\t});\r\n\r\n\t\t\t\tthis.directory = directory;\r\n\t\t\t\tthis.filelist = files;\r\n\t\t\t} catch (e) {\r\n\t\t\t\tif (!(e instanceof DisconnectedError)) {\r\n\t\t\t\t\tconsole.warn(e);\r\n\t\t\t\t\tthis.$log('error', this.$t('error.filelistRequestFailed'), e.message);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.loading = false;\r\n\t\t},\r\n\t\tasync refresh() {\r\n\t\t\tawait this.loadDirectory(this.directory);\r\n\t\t},\r\n\t\tasync itemClick(item) {\r\n\t\t\tif (this.uiFrozen) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tconst filename = Path.combine(this.directory, item.name);\r\n\t\t\tif (item.isDirectory) {\r\n\t\t\t\tawait this.loadDirectory(filename);\r\n\t\t\t} else if (!item.executing) {\r\n\t\t\t\titem.executing = true;\r\n\t\t\t\ttry {\r\n\t\t\t\t\tawait this.sendCode(`M98 P\"${filename}\"`);\r\n\t\t\t\t} catch (e) {\r\n\t\t\t\t\tif (!(e instanceof DisconnectedError)) {\r\n\t\t\t\t\t\tconsole.warn(e);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\titem.executing = false;\r\n\t\t\t}\r\n\t\t},\r\n\t\tasync goUp() {\r\n\t\t\tawait this.loadDirectory(Path.extractDirectory(this.directory));\r\n\t\t}\r\n\t},\r\n\tmounted() {\r\n\t\t// Perform initial load\r\n\t\tthis.directory = this.macrosDirectory;\r\n\t\tif (this.isConnected) {\r\n\t\t\tthis.wasMounted = (this.volumes.length > 0) && this.volumes[0].mounted;\r\n\t\t\tthis.refresh();\r\n\t\t}\r\n\r\n\t\t// Keep track of file changes\r\n\t\tconst that = this;\r\n\t\tthis.unsubscribe = this.$store.subscribeAction(async function(action, state) {\r\n\t\t\tif (getModifiedDirectories(action, state).some(directory => Path.equals(directory, that.directory))) {\r\n\t\t\t\t// Refresh the list when a file or directory has been changed\r\n\t\t\t\tawait that.refresh();\r\n\t\t\t}\r\n\t\t});\r\n\t},\r\n\tbeforeDestroy() {\r\n\t\tthis.unsubscribe();\r\n\t},\r\n\twatch: {\r\n\t\tmacrosDirectory(to, from) {\r\n\t\t\tif (Path.equals(this.directory, from) || !Path.startsWith(this.directory, to)) {\r\n\t\t\t\tthis.directory = to;\r\n\t\t\t}\r\n\t\t},\r\n\t\tisConnected(to) {\r\n\t\t\tif (to) {\r\n\t\t\t\tthis.wasMounted = (this.volumes.length > 0) && this.volumes[0].mounted;\r\n\t\t\t\tthis.refresh();\r\n\t\t\t} else {\r\n\t\t\t\tthis.directory = Path.macros;\r\n\t\t\t\tthis.filelist = [];\r\n\t\t\t}\r\n\t\t},\r\n\t\tselectedMachine() {\r\n\t\t\t// TODO store current directory per selected machine\r\n\t\t\tif (this.isConnected) {\r\n\t\t\t\tthis.wasMounted = (this.volumes.length > 0) && this.volumes[0].mounted;\r\n\t\t\t\tthis.refresh();\r\n\t\t\t} else {\r\n\t\t\t\tthis.directory = Path.macros;\r\n\t\t\t\tthis.filelist = [];\r\n\t\t\t}\r\n\t\t},\r\n\t\tvolumes: {\r\n\t\t\tdeep: true,\r\n\t\t\thandler() {\r\n\t\t\t\tif (this.isConnected) {\r\n\t\t\t\t\tconst volume = Path.getVolume(this.directory);\r\n\t\t\t\t\tif (volume >= 0 && volume < this.volumes.length) {\r\n\t\t\t\t\t\tconst mounted = this.volumes[volume].mounted;\r\n\t\t\t\t\t\tif (this.wasMounted !== mounted) {\r\n\t\t\t\t\t\t\tthis.wasMounted = mounted;\r\n\t\t\t\t\t\t\tthis.refresh();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.wasMounted = false;\r\n\t\t\t\t\t\tthis.refresh();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n</script>\r\n"],"sourceRoot":"src/components/lists"}]}