{"remainingRequest":"C:\\Users\\jpatrick\\Documents\\GitHub\\DuetWebControl_Fork\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\jpatrick\\Documents\\GitHub\\DuetWebControl_Fork\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\jpatrick\\Documents\\GitHub\\DuetWebControl_Fork\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\jpatrick\\Documents\\GitHub\\DuetWebControl_Fork\\src\\store\\index.js","dependencies":[{"path":"C:\\Users\\jpatrick\\Documents\\GitHub\\DuetWebControl_Fork\\src\\store\\index.js","mtime":1592248188670},{"path":"C:\\Users\\jpatrick\\Documents\\GitHub\\DuetWebControl_Fork\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\jpatrick\\Documents\\GitHub\\DuetWebControl_Fork\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\jpatrick\\Documents\\GitHub\\DuetWebControl_Fork\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\jpatrick\\Documents\\GitHub\\DuetWebControl_Fork\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:J3VzZSBzdHJpY3QnOwoKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LmtleXMiOwppbXBvcnQgInJlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZSI7CmltcG9ydCBfYXN5bmNUb0dlbmVyYXRvciBmcm9tICJDOlxcVXNlcnNcXGpwYXRyaWNrXFxEb2N1bWVudHNcXEdpdEh1YlxcRHVldFdlYkNvbnRyb2xfRm9ya1xcbm9kZV9tb2R1bGVzXFxAYmFiZWxcXHJ1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7CmltcG9ydCBfZGVmaW5lUHJvcGVydHkgZnJvbSAiQzpcXFVzZXJzXFxqcGF0cmlja1xcRG9jdW1lbnRzXFxHaXRIdWJcXER1ZXRXZWJDb250cm9sX0ZvcmtcXG5vZGVfbW9kdWxlc1xcQGJhYmVsXFxydW50aW1lL2hlbHBlcnMvZXNtL2RlZmluZVByb3BlcnR5IjsKaW1wb3J0IFZ1ZSBmcm9tICd2dWUnOwppbXBvcnQgVnVleCBmcm9tICd2dWV4JzsKaW1wb3J0IG1hY2hpbmUsIHsgZGVmYXVsdE1hY2hpbmUgfSBmcm9tICcuL21hY2hpbmUnOwppbXBvcnQgY29ubmVjdG9yIGZyb20gJy4vbWFjaGluZS9jb25uZWN0b3InOwppbXBvcnQgb2JzZXJ2ZXIgZnJvbSAnLi9vYnNlcnZlci5qcyc7CmltcG9ydCBzZXR0aW5ncyBmcm9tICcuL3NldHRpbmdzLmpzJzsKaW1wb3J0IGkxOG4gZnJvbSAnLi4vaTE4bic7CmltcG9ydCBQbHVnaW5zIGZyb20gJy4uL3BsdWdpbnMnOwppbXBvcnQgeyBsb2dHbG9iYWwgfSBmcm9tICcuLi9wbHVnaW5zL2xvZ2dpbmcuanMnOwppbXBvcnQgeyBJbnZhbGlkUGFzc3dvcmRFcnJvciB9IGZyb20gJy4uL3V0aWxzL2Vycm9ycy5qcyc7ClZ1ZS51c2UoVnVleCk7CnZhciBkZWZhdWx0VXNlcm5hbWUgPSAnJzsKdmFyIGRlZmF1bHRQYXNzd29yZCA9ICdyZXByYXAnOwoKdmFyIG1hY2hpbmVzID0gX2RlZmluZVByb3BlcnR5KHt9LCBkZWZhdWx0TWFjaGluZSwgbWFjaGluZShkZWZhdWx0TWFjaGluZSkpOwoKdmFyIHN0b3JlID0gbmV3IFZ1ZXguU3RvcmUoewogIHN0YXRlOiB7CiAgICBpc0Nvbm5lY3Rpbmc6IGZhbHNlLAogICAgY29ubmVjdGluZ1Byb2dyZXNzOiAtMSwKICAgIGlzRGlzY29ubmVjdGluZzogZmFsc2UsCiAgICBpc0xvY2FsOiBsb2NhdGlvbi5ob3N0bmFtZSA9PT0gJ2xvY2FsaG9zdCcgfHwgbG9jYXRpb24uaG9zdG5hbWUgPT09ICcxMjcuMC4wLjEnIHx8IGxvY2F0aW9uLmhvc3RuYW1lID09PSAnWzo6MV0nLAogICAgY29ubmVjdERpYWxvZ1Nob3duOiBsb2NhdGlvbi5ob3N0bmFtZSA9PT0gJ2xvY2FsaG9zdCcgfHwgbG9jYXRpb24uaG9zdG5hbWUgPT09ICcxMjcuMC4wLjEnIHx8IGxvY2F0aW9uLmhvc3RuYW1lID09PSAnWzo6MV0nLAogICAgcGFzc3dvcmRSZXF1aXJlZDogZmFsc2UsCiAgICBzZWxlY3RlZE1hY2hpbmU6IGRlZmF1bHRNYWNoaW5lCiAgfSwKICBnZXR0ZXJzOiB7CiAgICBjb25uZWN0ZWRNYWNoaW5lczogZnVuY3Rpb24gY29ubmVjdGVkTWFjaGluZXMoKSB7CiAgICAgIHJldHVybiBPYmplY3Qua2V5cyhtYWNoaW5lcykuZmlsdGVyKGZ1bmN0aW9uIChtYWNoaW5lKSB7CiAgICAgICAgcmV0dXJuIG1hY2hpbmUgIT09IGRlZmF1bHRNYWNoaW5lOwogICAgICB9KTsKICAgIH0sCiAgICBpc0Nvbm5lY3RlZDogZnVuY3Rpb24gaXNDb25uZWN0ZWQoc3RhdGUpIHsKICAgICAgcmV0dXJuIHN0YXRlLnNlbGVjdGVkTWFjaGluZSAhPT0gZGVmYXVsdE1hY2hpbmUgJiYgc3RhdGUubWFjaGluZSAmJiAhc3RhdGUubWFjaGluZS5pc1JlY29ubmVjdGluZzsKICAgIH0sCiAgICB1aUZyb3plbjogZnVuY3Rpb24gdWlGcm96ZW4oc3RhdGUsIGdldHRlcnMpIHsKICAgICAgcmV0dXJuIHN0YXRlLmlzQ29ubmVjdGluZyB8fCBzdGF0ZS5pc0Rpc2Nvbm5lY3RpbmcgfHwgIWdldHRlcnMuaXNDb25uZWN0ZWQ7CiAgICB9CiAgfSwKICBhY3Rpb25zOiB7CiAgICAvLyBDb25uZWN0IHRvIHRoZSBnaXZlbiBob3N0bmFtZSB1c2luZyB0aGUgc3BlY2lmaWVkIGNyZWRlbnRpYWxzCiAgICBjb25uZWN0OiBmdW5jdGlvbiBjb25uZWN0KF9yZWYpIHsKICAgICAgdmFyIF9hcmd1bWVudHMgPSBhcmd1bWVudHM7CiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoKSB7CiAgICAgICAgdmFyIHN0YXRlLCBjb21taXQsIGRpc3BhdGNoLCBfcmVmMiwgX3JlZjIkaG9zdG5hbWUsIGhvc3RuYW1lLCBfcmVmMiR1c2VybmFtZSwgdXNlcm5hbWUsIF9yZWYyJHBhc3N3b3JkLCBwYXNzd29yZCwgX3JlZjIkcmV0cnlpbmcsIHJldHJ5aW5nLCBjb25uZWN0b3JJbnN0YW5jZSwgbW9kdWxlSW5zdGFuY2UsIGlzUGFzc3dvcmRFcnJvcjsKCiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgc3RhdGUgPSBfcmVmLnN0YXRlLCBjb21taXQgPSBfcmVmLmNvbW1pdCwgZGlzcGF0Y2ggPSBfcmVmLmRpc3BhdGNoOwogICAgICAgICAgICAgICAgX3JlZjIgPSBfYXJndW1lbnRzLmxlbmd0aCA+IDEgJiYgX2FyZ3VtZW50c1sxXSAhPT0gdW5kZWZpbmVkID8gX2FyZ3VtZW50c1sxXSA6IHt9LCBfcmVmMiRob3N0bmFtZSA9IF9yZWYyLmhvc3RuYW1lLCBob3N0bmFtZSA9IF9yZWYyJGhvc3RuYW1lID09PSB2b2lkIDAgPyBsb2NhdGlvbi5ob3N0IDogX3JlZjIkaG9zdG5hbWUsIF9yZWYyJHVzZXJuYW1lID0gX3JlZjIudXNlcm5hbWUsIHVzZXJuYW1lID0gX3JlZjIkdXNlcm5hbWUgPT09IHZvaWQgMCA/IGRlZmF1bHRVc2VybmFtZSA6IF9yZWYyJHVzZXJuYW1lLCBfcmVmMiRwYXNzd29yZCA9IF9yZWYyLnBhc3N3b3JkLCBwYXNzd29yZCA9IF9yZWYyJHBhc3N3b3JkID09PSB2b2lkIDAgPyBkZWZhdWx0UGFzc3dvcmQgOiBfcmVmMiRwYXNzd29yZCwgX3JlZjIkcmV0cnlpbmcgPSBfcmVmMi5yZXRyeWluZywgcmV0cnlpbmcgPSBfcmVmMiRyZXRyeWluZyA9PT0gdm9pZCAwID8gZmFsc2UgOiBfcmVmMiRyZXRyeWluZzsKCiAgICAgICAgICAgICAgICBpZiAoISghaG9zdG5hbWUgfHwgaG9zdG5hbWUgPT09IGRlZmF1bHRNYWNoaW5lKSkgewogICAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gNDsKICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdJbnZhbGlkIGhvc3RuYW1lJyk7CgogICAgICAgICAgICAgIGNhc2UgNDoKICAgICAgICAgICAgICAgIGlmICghKHN0YXRlLm1hY2hpbmVzW2hvc3RuYW1lXSAhPT0gdW5kZWZpbmVkKSkgewogICAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gNjsKICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCJIb3N0ICIuY29uY2F0KGhvc3RuYW1lLCAiIGlzIGFscmVhZHkgY29ubmVjdGVkISIpKTsKCiAgICAgICAgICAgICAgY2FzZSA2OgogICAgICAgICAgICAgICAgaWYgKCEoc3RhdGUuaXNDb25uZWN0aW5nICYmICFyZXRyeWluZykpIHsKICAgICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDg7CiAgICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignQWxyZWFkeSBjb25uZWN0aW5nJyk7CgogICAgICAgICAgICAgIGNhc2UgODoKICAgICAgICAgICAgICAgIGNvbW1pdCgnc2V0Q29ubmVjdGluZycsIHRydWUpOwogICAgICAgICAgICAgICAgX2NvbnRleHQucHJldiA9IDk7CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMTI7CiAgICAgICAgICAgICAgICByZXR1cm4gY29ubmVjdG9yLmNvbm5lY3QoaG9zdG5hbWUsIHVzZXJuYW1lLCBwYXNzd29yZCk7CgogICAgICAgICAgICAgIGNhc2UgMTI6CiAgICAgICAgICAgICAgICBjb25uZWN0b3JJbnN0YW5jZSA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgICAgICBtb2R1bGVJbnN0YW5jZSA9IG1hY2hpbmUoaG9zdG5hbWUsIGNvbm5lY3Rvckluc3RhbmNlKTsKICAgICAgICAgICAgICAgIGNvbW1pdCgnYWRkTWFjaGluZScsIHsKICAgICAgICAgICAgICAgICAgaG9zdG5hbWU6IGhvc3RuYW1lLAogICAgICAgICAgICAgICAgICBtb2R1bGVJbnN0YW5jZTogbW9kdWxlSW5zdGFuY2UKICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgY29ubmVjdG9ySW5zdGFuY2UucmVnaXN0ZXIobW9kdWxlSW5zdGFuY2UpOwogICAgICAgICAgICAgICAgY29tbWl0KCdzZXRTZWxlY3RlZE1hY2hpbmUnLCBob3N0bmFtZSk7CiAgICAgICAgICAgICAgICBsb2dHbG9iYWwoJ3N1Y2Nlc3MnLCBpMThuLnQoJ2V2ZW50cy5jb25uZWN0ZWQnLCBbaG9zdG5hbWVdKSk7CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMjA7CiAgICAgICAgICAgICAgICByZXR1cm4gZGlzcGF0Y2goJ21hY2hpbmUvc2V0dGluZ3MvbG9hZCcpOwoKICAgICAgICAgICAgICBjYXNlIDIwOgogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDIyOwogICAgICAgICAgICAgICAgcmV0dXJuIGRpc3BhdGNoKCdtYWNoaW5lL2NhY2hlL2xvYWQnKTsKCiAgICAgICAgICAgICAgY2FzZSAyMjoKICAgICAgICAgICAgICAgIGlmIChzdGF0ZS5pc0xvY2FsKSB7CiAgICAgICAgICAgICAgICAgIGNvbW1pdCgnc2V0dGluZ3Mvc2V0TGFzdEhvc3RuYW1lJywgaG9zdG5hbWUpOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAzNjsKICAgICAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgICAgICBjYXNlIDI1OgogICAgICAgICAgICAgICAgX2NvbnRleHQucHJldiA9IDI1OwogICAgICAgICAgICAgICAgX2NvbnRleHQudDAgPSBfY29udGV4dFsiY2F0Y2giXSg5KTsKICAgICAgICAgICAgICAgIGlzUGFzc3dvcmRFcnJvciA9IF9jb250ZXh0LnQwIGluc3RhbmNlb2YgSW52YWxpZFBhc3N3b3JkRXJyb3I7CgogICAgICAgICAgICAgICAgaWYgKCFpc1Bhc3N3b3JkRXJyb3IgfHwgcGFzc3dvcmQgIT09IGRlZmF1bHRQYXNzd29yZCkgewogICAgICAgICAgICAgICAgICBsb2dHbG9iYWwoaXNQYXNzd29yZEVycm9yID8gJ3dhcm5pbmcnIDogJ2Vycm9yJywgaTE4bi50KCdlcnJvci5jb25uZWN0JywgW2hvc3RuYW1lXSksIF9jb250ZXh0LnQwLm1lc3NhZ2UpOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgIGlmICghaXNQYXNzd29yZEVycm9yKSB7CiAgICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAzMzsKICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgY29tbWl0KCdhc2tGb3JQYXNzd29yZCcpOwogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDM2OwogICAgICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgICAgIGNhc2UgMzM6CiAgICAgICAgICAgICAgICBpZiAoISghc3RhdGUuaXNMb2NhbCAmJiBob3N0bmFtZSA9PT0gbG9jYXRpb24uaG9zdCkpIHsKICAgICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDM2OwogICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgICAgICAgcmV0dXJuIGRpc3BhdGNoKCdjb25uZWN0JywgewogICAgICAgICAgICAgICAgICAgIGhvc3RuYW1lOiBob3N0bmFtZSwKICAgICAgICAgICAgICAgICAgICB1c2VybmFtZTogdXNlcm5hbWUsCiAgICAgICAgICAgICAgICAgICAgcGFzc3dvcmQ6IHBhc3N3b3JkLAogICAgICAgICAgICAgICAgICAgIHJldHJ5aW5nOiB0cnVlCiAgICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgfSwgMTAwMCk7CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuYWJydXB0KCJyZXR1cm4iKTsKCiAgICAgICAgICAgICAgY2FzZSAzNjoKICAgICAgICAgICAgICAgIGNvbW1pdCgnc2V0Q29ubmVjdGluZycsIGZhbHNlKTsKCiAgICAgICAgICAgICAgY2FzZSAzNzoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUsIG51bGwsIFtbOSwgMjVdXSk7CiAgICAgIH0pKSgpOwogICAgfSwKICAgIC8vIERpc2Nvbm5lY3QgZnJvbSB0aGUgZ2l2ZW4gaG9zdG5hbWUKICAgIGRpc2Nvbm5lY3Q6IGZ1bmN0aW9uIGRpc2Nvbm5lY3QoX3JlZjMpIHsKICAgICAgdmFyIF9hcmd1bWVudHMyID0gYXJndW1lbnRzOwogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMigpIHsKICAgICAgICB2YXIgc3RhdGUsIGNvbW1pdCwgZGlzcGF0Y2gsIF9yZWY0LCBfcmVmNCRob3N0bmFtZSwgaG9zdG5hbWUsIF9yZWY0JGRvRGlzY29ubmVjdCwgZG9EaXNjb25uZWN0OwoKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTIkKF9jb250ZXh0MikgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDIucHJldiA9IF9jb250ZXh0Mi5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgc3RhdGUgPSBfcmVmMy5zdGF0ZSwgY29tbWl0ID0gX3JlZjMuY29tbWl0LCBkaXNwYXRjaCA9IF9yZWYzLmRpc3BhdGNoOwogICAgICAgICAgICAgICAgX3JlZjQgPSBfYXJndW1lbnRzMi5sZW5ndGggPiAxICYmIF9hcmd1bWVudHMyWzFdICE9PSB1bmRlZmluZWQgPyBfYXJndW1lbnRzMlsxXSA6IHt9LCBfcmVmNCRob3N0bmFtZSA9IF9yZWY0Lmhvc3RuYW1lLCBob3N0bmFtZSA9IF9yZWY0JGhvc3RuYW1lID09PSB2b2lkIDAgPyBzdGF0ZS5zZWxlY3RlZE1hY2hpbmUgOiBfcmVmNCRob3N0bmFtZSwgX3JlZjQkZG9EaXNjb25uZWN0ID0gX3JlZjQuZG9EaXNjb25uZWN0LCBkb0Rpc2Nvbm5lY3QgPSBfcmVmNCRkb0Rpc2Nvbm5lY3QgPT09IHZvaWQgMCA/IHRydWUgOiBfcmVmNCRkb0Rpc2Nvbm5lY3Q7CgogICAgICAgICAgICAgICAgaWYgKCEoIWhvc3RuYW1lIHx8IGhvc3RuYW1lID09PSBkZWZhdWx0TWFjaGluZSkpIHsKICAgICAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSA0OwogICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0ludmFsaWQgaG9zdG5hbWUnKTsKCiAgICAgICAgICAgICAgY2FzZSA0OgogICAgICAgICAgICAgICAgaWYgKCEoc3RhdGUubWFjaGluZXNbaG9zdG5hbWVdID09PSB1bmRlZmluZWQpKSB7CiAgICAgICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gNjsKICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCJIb3N0ICIuY29uY2F0KGhvc3RuYW1lLCAiIGlzIGFscmVhZHkgZGlzY29ubmVjdGVkISIpKTsKCiAgICAgICAgICAgICAgY2FzZSA2OgogICAgICAgICAgICAgICAgaWYgKCFzdGF0ZS5pc0Rpc2Nvbm5lY3RpbmcpIHsKICAgICAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSA4OwogICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0FscmVhZHkgZGlzY29ubmVjdGluZycpOwoKICAgICAgICAgICAgICBjYXNlIDg6CiAgICAgICAgICAgICAgICBpZiAoIWRvRGlzY29ubmVjdCkgewogICAgICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDIxOwogICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICBjb21taXQoJ3NldERpc2Nvbm5lY3RpbmcnLCB0cnVlKTsKICAgICAgICAgICAgICAgIF9jb250ZXh0Mi5wcmV2ID0gMTA7CiAgICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDEzOwogICAgICAgICAgICAgICAgcmV0dXJuIGRpc3BhdGNoKCJtYWNoaW5lcy8iLmNvbmNhdChob3N0bmFtZSwgIi9kaXNjb25uZWN0IikpOwoKICAgICAgICAgICAgICBjYXNlIDEzOgogICAgICAgICAgICAgICAgbG9nR2xvYmFsKCdzdWNjZXNzJywgaTE4bi50KCdldmVudHMuZGlzY29ubmVjdGVkJywgW2hvc3RuYW1lXSkpOyAvLyBEaXNjb25uZWN0aW5nIG11c3QgYWx3YXlzIHdvcmsgLSBldmVuIGlmIGl0IGRvZXMgbm90IGFsd2F5cyBoYXBwZW4gY2xlYW5seQoKICAgICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gMjA7CiAgICAgICAgICAgICAgICBicmVhazsKCiAgICAgICAgICAgICAgY2FzZSAxNjoKICAgICAgICAgICAgICAgIF9jb250ZXh0Mi5wcmV2ID0gMTY7CiAgICAgICAgICAgICAgICBfY29udGV4dDIudDAgPSBfY29udGV4dDJbImNhdGNoIl0oMTApOwogICAgICAgICAgICAgICAgbG9nR2xvYmFsKCd3YXJuaW5nJywgaTE4bi50KCdlcnJvci5kaXNjb25uZWN0JywgW2hvc3RuYW1lXSksIF9jb250ZXh0Mi50MC5tZXNzYWdlKTsKICAgICAgICAgICAgICAgIGNvbnNvbGUud2FybihfY29udGV4dDIudDApOwoKICAgICAgICAgICAgICBjYXNlIDIwOgogICAgICAgICAgICAgICAgY29tbWl0KCdzZXREaXNjb25uZWN0aW5nJywgZmFsc2UpOwoKICAgICAgICAgICAgICBjYXNlIDIxOgogICAgICAgICAgICAgICAgY29tbWl0KCJtYWNoaW5lcy8iLmNvbmNhdChob3N0bmFtZSwgIi91bnJlZ2lzdGVyIikpOwoKICAgICAgICAgICAgICAgIGlmIChzdGF0ZS5zZWxlY3RlZE1hY2hpbmUgPT09IGhvc3RuYW1lKSB7CiAgICAgICAgICAgICAgICAgIGNvbW1pdCgnc2V0U2VsZWN0ZWRNYWNoaW5lJywgZGVmYXVsdE1hY2hpbmUpOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgIGNvbW1pdCgncmVtb3ZlTWFjaGluZScsIGhvc3RuYW1lKTsKCiAgICAgICAgICAgICAgY2FzZSAyNDoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlMiwgbnVsbCwgW1sxMCwgMTZdXSk7CiAgICAgIH0pKSgpOwogICAgfSwKICAgIC8vIERpc2Nvbm5lY3QgZnJvbSBldmVyeSBob3N0CiAgICBkaXNjb25uZWN0QWxsOiBmdW5jdGlvbiBkaXNjb25uZWN0QWxsKF9yZWY1KSB7CiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUzKCkgewogICAgICAgIHZhciBkaXNwYXRjaCwgaG9zdG5hbWU7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUzJChfY29udGV4dDMpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQzLnByZXYgPSBfY29udGV4dDMubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIGRpc3BhdGNoID0gX3JlZjUuZGlzcGF0Y2g7CgogICAgICAgICAgICAgICAgZm9yIChob3N0bmFtZSBpbiBtYWNoaW5lcykgewogICAgICAgICAgICAgICAgICBpZiAoaG9zdG5hbWUgIT09IGRlZmF1bHRNYWNoaW5lKSB7CiAgICAgICAgICAgICAgICAgICAgLy8gRG9uJ3QgZG8gdGhpcyB2aWEgYXdhaXQgYmVjYXVzZSB3ZSBkb24ndCBoYXZlIG11Y2ggdGltZS4uLgogICAgICAgICAgICAgICAgICAgIGRpc3BhdGNoKCdkaXNjb25uZWN0JywgewogICAgICAgICAgICAgICAgICAgICAgaG9zdG5hbWU6IGhvc3RuYW1lCiAgICAgICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQzLnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUzKTsKICAgICAgfSkpKCk7CiAgICB9LAogICAgLy8gQ2FsbGVkIHdoZW4gYSBtYWNoaW5lIGNhbm5vdCBzdGF5IGNvbm5lY3RlZAogICAgb25Db25uZWN0aW9uRXJyb3I6IGZ1bmN0aW9uIG9uQ29ubmVjdGlvbkVycm9yKF9yZWY2LCBfcmVmNykgewogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlNCgpIHsKICAgICAgICB2YXIgc3RhdGUsIGRpc3BhdGNoLCBjb21taXQsIGhvc3RuYW1lLCBlcnJvcjsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTQkKF9jb250ZXh0NCkgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDQucHJldiA9IF9jb250ZXh0NC5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgc3RhdGUgPSBfcmVmNi5zdGF0ZSwgZGlzcGF0Y2ggPSBfcmVmNi5kaXNwYXRjaCwgY29tbWl0ID0gX3JlZjYuY29tbWl0OwogICAgICAgICAgICAgICAgaG9zdG5hbWUgPSBfcmVmNy5ob3N0bmFtZSwgZXJyb3IgPSBfcmVmNy5lcnJvcjsKCiAgICAgICAgICAgICAgICBpZiAoIShlcnJvciBpbnN0YW5jZW9mIEludmFsaWRQYXNzd29yZEVycm9yKSkgewogICAgICAgICAgICAgICAgICBfY29udGV4dDQubmV4dCA9IDk7CiAgICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgIGxvZ0dsb2JhbCgnZXJyb3InLCBpMThuLnQoJ2V2ZW50cy5jb25uZWN0aW9uTG9zdCcsIFtob3N0bmFtZV0pLCBlcnJvci5tZXNzYWdlKTsKICAgICAgICAgICAgICAgIF9jb250ZXh0NC5uZXh0ID0gNjsKICAgICAgICAgICAgICAgIHJldHVybiBkaXNwYXRjaCgnZGlzY29ubmVjdCcsIHsKICAgICAgICAgICAgICAgICAgaG9zdG5hbWU6IGhvc3RuYW1lLAogICAgICAgICAgICAgICAgICBkb0Rpc2Nvbm5lY3Q6IGZhbHNlCiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgY2FzZSA2OgogICAgICAgICAgICAgICAgY29tbWl0KCdhc2tGb3JQYXNzd29yZCcpOwogICAgICAgICAgICAgICAgX2NvbnRleHQ0Lm5leHQgPSAxNzsKICAgICAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgICAgICBjYXNlIDk6CiAgICAgICAgICAgICAgICBpZiAoIXN0YXRlLmlzTG9jYWwpIHsKICAgICAgICAgICAgICAgICAgX2NvbnRleHQ0Lm5leHQgPSAxNTsKICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgbG9nR2xvYmFsKCdlcnJvcicsIGkxOG4udCgnZXZlbnRzLmNvbm5lY3Rpb25Mb3N0JywgW2hvc3RuYW1lXSksIGVycm9yLm1lc3NhZ2UpOwogICAgICAgICAgICAgICAgX2NvbnRleHQ0Lm5leHQgPSAxMzsKICAgICAgICAgICAgICAgIHJldHVybiBkaXNwYXRjaCgnZGlzY29ubmVjdCcsIHsKICAgICAgICAgICAgICAgICAgaG9zdG5hbWU6IGhvc3RuYW1lLAogICAgICAgICAgICAgICAgICBkb0Rpc2Nvbm5lY3Q6IGZhbHNlCiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgY2FzZSAxMzoKICAgICAgICAgICAgICAgIF9jb250ZXh0NC5uZXh0ID0gMTc7CiAgICAgICAgICAgICAgICBicmVhazsKCiAgICAgICAgICAgICAgY2FzZSAxNToKICAgICAgICAgICAgICAgIGxvZ0dsb2JhbCgnd2FybmluZycsIGkxOG4udCgnZXZlbnRzLnJlY29ubmVjdGluZycsIFtob3N0bmFtZV0pLCBlcnJvci5tZXNzYWdlKTsKICAgICAgICAgICAgICAgIGRpc3BhdGNoKCJtYWNoaW5lcy8iLmNvbmNhdChob3N0bmFtZSwgIi9yZWNvbm5lY3QiKSk7CgogICAgICAgICAgICAgIGNhc2UgMTc6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDQuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZTQpOwogICAgICB9KSkoKTsKICAgIH0KICB9LAogIG11dGF0aW9uczogewogICAgc2hvd0Nvbm5lY3REaWFsb2c6IGZ1bmN0aW9uIHNob3dDb25uZWN0RGlhbG9nKHN0YXRlKSB7CiAgICAgIHJldHVybiBzdGF0ZS5jb25uZWN0RGlhbG9nU2hvd24gPSB0cnVlOwogICAgfSwKICAgIGhpZGVDb25uZWN0RGlhbG9nOiBmdW5jdGlvbiBoaWRlQ29ubmVjdERpYWxvZyhzdGF0ZSkgewogICAgICBzdGF0ZS5jb25uZWN0RGlhbG9nU2hvd24gPSBmYWxzZTsKICAgICAgc3RhdGUucGFzc3dvcmRSZXF1aXJlZCA9IGZhbHNlOwogICAgfSwKICAgIGFza0ZvclBhc3N3b3JkOiBmdW5jdGlvbiBhc2tGb3JQYXNzd29yZChzdGF0ZSkgewogICAgICBzdGF0ZS5jb25uZWN0RGlhbG9nU2hvd24gPSB0cnVlOwogICAgICBzdGF0ZS5wYXNzd29yZFJlcXVpcmVkID0gdHJ1ZTsKICAgIH0sCiAgICBzZXRDb25uZWN0aW5nOiBmdW5jdGlvbiBzZXRDb25uZWN0aW5nKHN0YXRlLCBjb25uZWN0aW5nKSB7CiAgICAgIHJldHVybiBzdGF0ZS5pc0Nvbm5lY3RpbmcgPSBjb25uZWN0aW5nOwogICAgfSwKICAgIHNldENvbm5lY3RpbmdQcm9ncmVzczogZnVuY3Rpb24gc2V0Q29ubmVjdGluZ1Byb2dyZXNzKHN0YXRlLCBwcm9ncmVzcykgewogICAgICByZXR1cm4gc3RhdGUuY29ubmVjdGluZ1Byb2dyZXNzID0gcHJvZ3Jlc3M7CiAgICB9LAogICAgYWRkTWFjaGluZTogZnVuY3Rpb24gYWRkTWFjaGluZShzdGF0ZSwgX3JlZjgpIHsKICAgICAgdmFyIGhvc3RuYW1lID0gX3JlZjguaG9zdG5hbWUsCiAgICAgICAgICBtb2R1bGVJbnN0YW5jZSA9IF9yZWY4Lm1vZHVsZUluc3RhbmNlOwogICAgICBtYWNoaW5lc1tob3N0bmFtZV0gPSBtb2R1bGVJbnN0YW5jZTsKICAgICAgdGhpcy5yZWdpc3Rlck1vZHVsZShbJ21hY2hpbmVzJywgaG9zdG5hbWVdLCBtb2R1bGVJbnN0YW5jZSk7CiAgICB9LAogICAgc2V0RGlzY29ubmVjdGluZzogZnVuY3Rpb24gc2V0RGlzY29ubmVjdGluZyhzdGF0ZSwgZGlzY29ubmVjdGluZykgewogICAgICByZXR1cm4gc3RhdGUuaXNEaXNjb25uZWN0aW5nID0gZGlzY29ubmVjdGluZzsKICAgIH0sCiAgICByZW1vdmVNYWNoaW5lOiBmdW5jdGlvbiByZW1vdmVNYWNoaW5lKHN0YXRlLCBob3N0bmFtZSkgewogICAgICB0aGlzLnVucmVnaXN0ZXJNb2R1bGUoWydtYWNoaW5lcycsIGhvc3RuYW1lXSk7CiAgICAgIGRlbGV0ZSBtYWNoaW5lc1tob3N0bmFtZV07CiAgICB9LAogICAgc2V0U2VsZWN0ZWRNYWNoaW5lOiBmdW5jdGlvbiBzZXRTZWxlY3RlZE1hY2hpbmUoc3RhdGUsIHNlbGVjdGVkTWFjaGluZSkgewogICAgICB0aGlzLnVucmVnaXN0ZXJNb2R1bGUoJ21hY2hpbmUnKTsKICAgICAgdGhpcy5yZWdpc3Rlck1vZHVsZSgnbWFjaGluZScsIG1hY2hpbmVzW3NlbGVjdGVkTWFjaGluZV0pOwogICAgICBzdGF0ZS5zZWxlY3RlZE1hY2hpbmUgPSBzZWxlY3RlZE1hY2hpbmU7IC8vIEFsbG93IGFjY2VzcyB0byB0aGUgbWFjaGluZSdzIGRhdGEgc3RvcmUgZm9yIGRlYnVnZ2luZy4uLgoKICAgICAgd2luZG93Lm1hY2hpbmVTdG9yZSA9IHN0YXRlLm1hY2hpbmU7CiAgICB9CiAgfSwKICBtb2R1bGVzOiB7CiAgICAvLyBtYWNoaW5lIHdpbGwgcHJvdmlkZSB0aGUgY3VycmVudGx5IHNlbGVjdGVkIG1hY2hpbmUKICAgIG1hY2hpbmVzOiB7CiAgICAgIG5hbWVzcGFjZWQ6IHRydWUsCiAgICAgIG1vZHVsZXM6IF9kZWZpbmVQcm9wZXJ0eSh7fSwgZGVmYXVsdE1hY2hpbmUsIG1hY2hpbmVzW2RlZmF1bHRNYWNoaW5lXSkKICAgIH0sCiAgICBzZXR0aW5nczogc2V0dGluZ3MKICB9LAogIHBsdWdpbnM6IFtjb25uZWN0b3IuaW5zdGFsbFN0b3JlLCBvYnNlcnZlciwgUGx1Z2lucy5pbnN0YWxsU3RvcmVdLAogIHN0cmljdDogcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJwp9KTsgLy8gVGhpcyBoYXMgdG8gYmUgcmVnaXN0ZXJlZCBkeW5hbWljYWxseSwgZWxzZSB1bnJlZ2lzdGVyTW9kdWxlIHdpbGwgbm90IHdvcmsgY2xlYW5seQoKc3RvcmUucmVnaXN0ZXJNb2R1bGUoJ21hY2hpbmUnLCBtYWNoaW5lc1tkZWZhdWx0TWFjaGluZV0pOyAvLyBEZWJ1ZyBmdW5jdGlvbiB0byByZXBsaWNhdGUgZGlmZmVyZW50IG1hY2hpbmUgc3RhdGVzCgppZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykgewogIHdpbmRvdy51cGRhdGVNYWNoaW5lU3RvcmUgPSBmdW5jdGlvbiAobmV3U3RvcmUpIHsKICAgIHN0b3JlLmRpc3BhdGNoKCdtYWNoaW5lL3VwZGF0ZScsIG5ld1N0b3JlKTsKICB9Owp9CgpleHBvcnQgZGVmYXVsdCBzdG9yZTs="},{"version":3,"sources":["C:/Users/jpatrick/Documents/GitHub/DuetWebControl_Fork/src/store/index.js"],"names":["Vue","Vuex","machine","defaultMachine","connector","observer","settings","i18n","Plugins","logGlobal","InvalidPasswordError","use","defaultUsername","defaultPassword","machines","store","Store","state","isConnecting","connectingProgress","isDisconnecting","isLocal","location","hostname","connectDialogShown","passwordRequired","selectedMachine","getters","connectedMachines","Object","keys","filter","isConnected","isReconnecting","uiFrozen","actions","connect","commit","dispatch","host","username","password","retrying","Error","undefined","connectorInstance","moduleInstance","register","t","isPasswordError","message","setTimeout","disconnect","doDisconnect","console","warn","disconnectAll","onConnectionError","error","mutations","showConnectDialog","hideConnectDialog","askForPassword","setConnecting","connecting","setConnectingProgress","progress","addMachine","registerModule","setDisconnecting","disconnecting","removeMachine","unregisterModule","setSelectedMachine","window","machineStore","modules","namespaced","plugins","installStore","strict","process","env","NODE_ENV","updateMachineStore","newStore"],"mappings":"AAAA;;;;;;;AAEA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AAEA,OAAOC,OAAP,IAAkBC,cAAlB,QAAwC,WAAxC;AACA,OAAOC,SAAP,MAAsB,qBAAtB;AACA,OAAOC,QAAP,MAAqB,eAArB;AACA,OAAOC,QAAP,MAAqB,eAArB;AAEA,OAAOC,IAAP,MAAiB,SAAjB;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,SAASC,SAAT,QAA0B,uBAA1B;AAEA,SAASC,oBAAT,QAAqC,oBAArC;AAEAV,GAAG,CAACW,GAAJ,CAAQV,IAAR;AAEA,IAAMW,eAAe,GAAG,EAAxB;AACA,IAAMC,eAAe,GAAG,QAAxB;;AAEA,IAAMC,QAAQ,uBACZX,cADY,EACKD,OAAO,CAACC,cAAD,CADZ,CAAd;;AAIA,IAAMY,KAAK,GAAG,IAAId,IAAI,CAACe,KAAT,CAAe;AAC5BC,EAAAA,KAAK,EAAE;AACNC,IAAAA,YAAY,EAAE,KADR;AAENC,IAAAA,kBAAkB,EAAE,CAAC,CAFf;AAGNC,IAAAA,eAAe,EAAE,KAHX;AAINC,IAAAA,OAAO,EAAGC,QAAQ,CAACC,QAAT,KAAsB,WAAvB,IAAwCD,QAAQ,CAACC,QAAT,KAAsB,WAA9D,IAA+ED,QAAQ,CAACC,QAAT,KAAsB,OAJxG;AAKNC,IAAAA,kBAAkB,EAAGF,QAAQ,CAACC,QAAT,KAAsB,WAAvB,IAAwCD,QAAQ,CAACC,QAAT,KAAsB,WAA9D,IAA+ED,QAAQ,CAACC,QAAT,KAAsB,OALnH;AAMNE,IAAAA,gBAAgB,EAAE,KANZ;AAONC,IAAAA,eAAe,EAAEvB;AAPX,GADqB;AAU5BwB,EAAAA,OAAO,EAAE;AACRC,IAAAA,iBAAiB,EAAE;AAAA,aAAMC,MAAM,CAACC,IAAP,CAAYhB,QAAZ,EAAsBiB,MAAtB,CAA6B,UAAA7B,OAAO;AAAA,eAAIA,OAAO,KAAKC,cAAhB;AAAA,OAApC,CAAN;AAAA,KADX;AAER6B,IAAAA,WAAW,EAAE,qBAAAf,KAAK;AAAA,aAAIA,KAAK,CAACS,eAAN,KAA0BvB,cAA1B,IAA4Cc,KAAK,CAACf,OAAlD,IAA6D,CAACe,KAAK,CAACf,OAAN,CAAc+B,cAAhF;AAAA,KAFV;AAGRC,IAAAA,QAAQ,EAAE,kBAACjB,KAAD,EAAQU,OAAR;AAAA,aAAoBV,KAAK,CAACC,YAAN,IAAsBD,KAAK,CAACG,eAA5B,IAA+C,CAACO,OAAO,CAACK,WAA5E;AAAA;AAHF,GAVmB;AAe5BG,EAAAA,OAAO,EAAE;AACR;AACMC,IAAAA,OAFE,yBAEgJ;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAxInB,gBAAAA,KAAwI,QAAxIA,KAAwI,EAAjIoB,MAAiI,QAAjIA,MAAiI,EAAzHC,QAAyH,QAAzHA,QAAyH;AAAA,+FAAJ,EAAI,yBAA3Gf,QAA2G,EAA3GA,QAA2G,+BAAhGD,QAAQ,CAACiB,IAAuF,0CAAjFC,QAAiF,EAAjFA,QAAiF,+BAAtE5B,eAAsE,0CAArD6B,QAAqD,EAArDA,QAAqD,+BAA1C5B,eAA0C,0CAAzB6B,QAAyB,EAAzBA,QAAyB,+BAAd,KAAc;;AAAA,sBACnJ,CAACnB,QAAD,IAAaA,QAAQ,KAAKpB,cADyH;AAAA;AAAA;AAAA;;AAAA,sBAEhJ,IAAIwC,KAAJ,CAAU,kBAAV,CAFgJ;;AAAA;AAAA,sBAInJ1B,KAAK,CAACH,QAAN,CAAeS,QAAf,MAA6BqB,SAJsH;AAAA;AAAA;AAAA;;AAAA,sBAKhJ,IAAID,KAAJ,gBAAkBpB,QAAlB,4BALgJ;;AAAA;AAAA,sBAOnJN,KAAK,CAACC,YAAN,IAAsB,CAACwB,QAP4H;AAAA;AAAA;AAAA;;AAAA,sBAQhJ,IAAIC,KAAJ,CAAU,oBAAV,CARgJ;;AAAA;AAWvJN,gBAAAA,MAAM,CAAC,eAAD,EAAkB,IAAlB,CAAN;AAXuJ;AAAA;AAAA,uBAatHjC,SAAS,CAACgC,OAAV,CAAkBb,QAAlB,EAA4BiB,QAA5B,EAAsCC,QAAtC,CAbsH;;AAAA;AAahJI,gBAAAA,iBAbgJ;AAchJC,gBAAAA,cAdgJ,GAc/H5C,OAAO,CAACqB,QAAD,EAAWsB,iBAAX,CAdwH;AAetJR,gBAAAA,MAAM,CAAC,YAAD,EAAe;AAAEd,kBAAAA,QAAQ,EAARA,QAAF;AAAYuB,kBAAAA,cAAc,EAAdA;AAAZ,iBAAf,CAAN;AACAD,gBAAAA,iBAAiB,CAACE,QAAlB,CAA2BD,cAA3B;AAEAT,gBAAAA,MAAM,CAAC,oBAAD,EAAuBd,QAAvB,CAAN;AACAd,gBAAAA,SAAS,CAAC,SAAD,EAAYF,IAAI,CAACyC,CAAL,CAAO,kBAAP,EAA2B,CAACzB,QAAD,CAA3B,CAAZ,CAAT;AAnBsJ;AAAA,uBAqBhJe,QAAQ,CAAC,uBAAD,CArBwI;;AAAA;AAAA;AAAA,uBAsBhJA,QAAQ,CAAC,oBAAD,CAtBwI;;AAAA;AAuBtJ,oBAAIrB,KAAK,CAACI,OAAV,EAAmB;AAClBgB,kBAAAA,MAAM,CAAC,0BAAD,EAA6Bd,QAA7B,CAAN;AACA;;AAzBqJ;AAAA;;AAAA;AAAA;AAAA;AA2BhJ0B,gBAAAA,eA3BgJ,GA2B9H,uBAAavC,oBA3BiH;;AA4BtJ,oBAAI,CAACuC,eAAD,IAAoBR,QAAQ,KAAK5B,eAArC,EAAsD;AACrDJ,kBAAAA,SAAS,CAACwC,eAAe,GAAG,SAAH,GAAe,OAA/B,EAAwC1C,IAAI,CAACyC,CAAL,CAAO,eAAP,EAAwB,CAACzB,QAAD,CAAxB,CAAxC,EAA6E,YAAE2B,OAA/E,CAAT;AACA;;AA9BqJ,qBAgClJD,eAhCkJ;AAAA;AAAA;AAAA;;AAiCrJZ,gBAAAA,MAAM,CAAC,gBAAD,CAAN;AAjCqJ;AAAA;;AAAA;AAAA,sBAkC3I,CAACpB,KAAK,CAACI,OAAP,IAAkBE,QAAQ,KAAKD,QAAQ,CAACiB,IAlCmG;AAAA;AAAA;AAAA;;AAmCrJY,gBAAAA,UAAU,CAAC;AAAA,yBAAMb,QAAQ,CAAC,SAAD,EAAY;AAAEf,oBAAAA,QAAQ,EAARA,QAAF;AAAYiB,oBAAAA,QAAQ,EAARA,QAAZ;AAAsBC,oBAAAA,QAAQ,EAARA,QAAtB;AAAgCC,oBAAAA,QAAQ,EAAE;AAA1C,mBAAZ,CAAd;AAAA,iBAAD,EAA8E,IAA9E,CAAV;AAnCqJ;;AAAA;AAuCvJL,gBAAAA,MAAM,CAAC,eAAD,EAAkB,KAAlB,CAAN;;AAvCuJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAwCvJ,KA1CO;AA4CR;AACMe,IAAAA,UA7CE,6BA6CsG;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAA3FnC,gBAAAA,KAA2F,SAA3FA,KAA2F,EAApFoB,MAAoF,SAApFA,MAAoF,EAA5EC,QAA4E,SAA5EA,QAA4E;AAAA,kGAAJ,EAAI,yBAA9Df,QAA8D,EAA9DA,QAA8D,+BAAnDN,KAAK,CAACS,eAA6C,8CAA5B2B,YAA4B,EAA5BA,YAA4B,mCAAb,IAAa;;AAAA,sBACzG,CAAC9B,QAAD,IAAaA,QAAQ,KAAKpB,cAD+E;AAAA;AAAA;AAAA;;AAAA,sBAEtG,IAAIwC,KAAJ,CAAU,kBAAV,CAFsG;;AAAA;AAAA,sBAIzG1B,KAAK,CAACH,QAAN,CAAeS,QAAf,MAA6BqB,SAJ4E;AAAA;AAAA;AAAA;;AAAA,sBAKtG,IAAID,KAAJ,gBAAkBpB,QAAlB,+BALsG;;AAAA;AAAA,qBAOzGN,KAAK,CAACG,eAPmG;AAAA;AAAA;AAAA;;AAAA,sBAQtG,IAAIuB,KAAJ,CAAU,uBAAV,CARsG;;AAAA;AAAA,qBAWzGU,YAXyG;AAAA;AAAA;AAAA;;AAY5GhB,gBAAAA,MAAM,CAAC,kBAAD,EAAqB,IAArB,CAAN;AAZ4G;AAAA;AAAA,uBAcrGC,QAAQ,oBAAaf,QAAb,iBAd6F;;AAAA;AAe3Gd,gBAAAA,SAAS,CAAC,SAAD,EAAYF,IAAI,CAACyC,CAAL,CAAO,qBAAP,EAA8B,CAACzB,QAAD,CAA9B,CAAZ,CAAT,CAf2G,CAgB3G;;AAhB2G;AAAA;;AAAA;AAAA;AAAA;AAkB3Gd,gBAAAA,SAAS,CAAC,SAAD,EAAYF,IAAI,CAACyC,CAAL,CAAO,kBAAP,EAA2B,CAACzB,QAAD,CAA3B,CAAZ,EAAoD,aAAE2B,OAAtD,CAAT;AACAI,gBAAAA,OAAO,CAACC,IAAR;;AAnB2G;AAqB5GlB,gBAAAA,MAAM,CAAC,kBAAD,EAAqB,KAArB,CAAN;;AArB4G;AAuB7GA,gBAAAA,MAAM,oBAAad,QAAb,iBAAN;;AAEA,oBAAIN,KAAK,CAACS,eAAN,KAA0BH,QAA9B,EAAwC;AACvCc,kBAAAA,MAAM,CAAC,oBAAD,EAAuBlC,cAAvB,CAAN;AACA;;AACDkC,gBAAAA,MAAM,CAAC,eAAD,EAAkBd,QAAlB,CAAN;;AA5B6G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA6B7G,KA1EO;AA4ER;AACMiC,IAAAA,aA7EE,gCA6E0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAZlB,gBAAAA,QAAY,SAAZA,QAAY;;AACjC,qBAASf,QAAT,IAAqBT,QAArB,EAA+B;AAC9B,sBAAIS,QAAQ,KAAKpB,cAAjB,EAAiC;AAChC;AACAmC,oBAAAA,QAAQ,CAAC,YAAD,EAAe;AAAEf,sBAAAA,QAAQ,EAARA;AAAF,qBAAf,CAAR;AACA;AACD;;AANgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOjC,KApFO;AAsFR;AACMkC,IAAAA,iBAvFE,2CAuFkE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAhDxC,gBAAAA,KAAgD,SAAhDA,KAAgD,EAAzCqB,QAAyC,SAAzCA,QAAyC,EAA/BD,MAA+B,SAA/BA,MAA+B;AAAnBd,gBAAAA,QAAmB,SAAnBA,QAAmB,EAATmC,KAAS,SAATA,KAAS;;AAAA,sBACrEA,KAAK,YAAYhD,oBADoD;AAAA;AAAA;AAAA;;AAExED,gBAAAA,SAAS,CAAC,OAAD,EAAUF,IAAI,CAACyC,CAAL,CAAO,uBAAP,EAAgC,CAACzB,QAAD,CAAhC,CAAV,EAAuDmC,KAAK,CAACR,OAA7D,CAAT;AAFwE;AAAA,uBAGlEZ,QAAQ,CAAC,YAAD,EAAe;AAAEf,kBAAAA,QAAQ,EAARA,QAAF;AAAY8B,kBAAAA,YAAY,EAAE;AAA1B,iBAAf,CAH0D;;AAAA;AAIxEhB,gBAAAA,MAAM,CAAC,gBAAD,CAAN;AAJwE;AAAA;;AAAA;AAAA,qBAK9DpB,KAAK,CAACI,OALwD;AAAA;AAAA;AAAA;;AAMxEZ,gBAAAA,SAAS,CAAC,OAAD,EAAUF,IAAI,CAACyC,CAAL,CAAO,uBAAP,EAAgC,CAACzB,QAAD,CAAhC,CAAV,EAAuDmC,KAAK,CAACR,OAA7D,CAAT;AANwE;AAAA,uBAOlEZ,QAAQ,CAAC,YAAD,EAAe;AAAEf,kBAAAA,QAAQ,EAARA,QAAF;AAAY8B,kBAAAA,YAAY,EAAE;AAA1B,iBAAf,CAP0D;;AAAA;AAAA;AAAA;;AAAA;AASxE5C,gBAAAA,SAAS,CAAC,SAAD,EAAYF,IAAI,CAACyC,CAAL,CAAO,qBAAP,EAA8B,CAACzB,QAAD,CAA9B,CAAZ,EAAuDmC,KAAK,CAACR,OAA7D,CAAT;AACAZ,gBAAAA,QAAQ,oBAAaf,QAAb,gBAAR;;AAVwE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYzE;AAnGO,GAfmB;AAoH5BoC,EAAAA,SAAS,EAAE;AACVC,IAAAA,iBAAiB,EAAE,2BAAA3C,KAAK;AAAA,aAAIA,KAAK,CAACO,kBAAN,GAA2B,IAA/B;AAAA,KADd;AAEVqC,IAAAA,iBAFU,6BAEQ5C,KAFR,EAEe;AACxBA,MAAAA,KAAK,CAACO,kBAAN,GAA2B,KAA3B;AACAP,MAAAA,KAAK,CAACQ,gBAAN,GAAyB,KAAzB;AACA,KALS;AAMVqC,IAAAA,cANU,0BAMK7C,KANL,EAMY;AACrBA,MAAAA,KAAK,CAACO,kBAAN,GAA2B,IAA3B;AACAP,MAAAA,KAAK,CAACQ,gBAAN,GAAyB,IAAzB;AACA,KATS;AAWVsC,IAAAA,aAAa,EAAE,uBAAC9C,KAAD,EAAQ+C,UAAR;AAAA,aAAuB/C,KAAK,CAACC,YAAN,GAAqB8C,UAA5C;AAAA,KAXL;AAYVC,IAAAA,qBAAqB,EAAE,+BAAChD,KAAD,EAAQiD,QAAR;AAAA,aAAqBjD,KAAK,CAACE,kBAAN,GAA2B+C,QAAhD;AAAA,KAZb;AAaVC,IAAAA,UAbU,sBAaClD,KAbD,SAasC;AAAA,UAA5BM,QAA4B,SAA5BA,QAA4B;AAAA,UAAlBuB,cAAkB,SAAlBA,cAAkB;AAC/ChC,MAAAA,QAAQ,CAACS,QAAD,CAAR,GAAqBuB,cAArB;AACA,WAAKsB,cAAL,CAAoB,CAAC,UAAD,EAAa7C,QAAb,CAApB,EAA4CuB,cAA5C;AACA,KAhBS;AAiBVuB,IAAAA,gBAAgB,EAAE,0BAACpD,KAAD,EAAQqD,aAAR;AAAA,aAA0BrD,KAAK,CAACG,eAAN,GAAwBkD,aAAlD;AAAA,KAjBR;AAkBVC,IAAAA,aAlBU,yBAkBItD,KAlBJ,EAkBWM,QAlBX,EAkBqB;AAC9B,WAAKiD,gBAAL,CAAsB,CAAC,UAAD,EAAajD,QAAb,CAAtB;AACA,aAAOT,QAAQ,CAACS,QAAD,CAAf;AACA,KArBS;AAuBVkD,IAAAA,kBAvBU,8BAuBSxD,KAvBT,EAuBgBS,eAvBhB,EAuBiC;AAC1C,WAAK8C,gBAAL,CAAsB,SAAtB;AACA,WAAKJ,cAAL,CAAoB,SAApB,EAA+BtD,QAAQ,CAACY,eAAD,CAAvC;AACAT,MAAAA,KAAK,CAACS,eAAN,GAAwBA,eAAxB,CAH0C,CAK1C;;AACAgD,MAAAA,MAAM,CAACC,YAAP,GAAsB1D,KAAK,CAACf,OAA5B;AACA;AA9BS,GApHiB;AAqJ5B0E,EAAAA,OAAO,EAAE;AACR;AACA9D,IAAAA,QAAQ,EAAE;AACT+D,MAAAA,UAAU,EAAE,IADH;AAETD,MAAAA,OAAO,sBACLzE,cADK,EACYW,QAAQ,CAACX,cAAD,CADpB;AAFE,KAFF;AASRG,IAAAA,QAAQ,EAARA;AATQ,GArJmB;AAgK5BwE,EAAAA,OAAO,EAAE,CACR1E,SAAS,CAAC2E,YADF,EAER1E,QAFQ,EAGRG,OAAO,CAACuE,YAHA,CAhKmB;AAqK5BC,EAAAA,MAAM,EAAEC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB;AArKL,CAAf,CAAd,C,CAwKA;;AACApE,KAAK,CAACqD,cAAN,CAAqB,SAArB,EAAgCtD,QAAQ,CAACX,cAAD,CAAxC,E,CAEA;;AACA,IAAI8E,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AAC1CT,EAAAA,MAAM,CAACU,kBAAP,GAA4B,UAASC,QAAT,EAAmB;AAC9CtE,IAAAA,KAAK,CAACuB,QAAN,CAAe,gBAAf,EAAiC+C,QAAjC;AACA,GAFD;AAGA;;AAED,eAAetE,KAAf","sourcesContent":["'use strict'\r\n\r\nimport Vue from 'vue'\r\nimport Vuex from 'vuex'\r\n\r\nimport machine, { defaultMachine } from './machine'\r\nimport connector from './machine/connector'\r\nimport observer from './observer.js'\r\nimport settings from './settings.js'\r\n\r\nimport i18n from '../i18n'\r\nimport Plugins from '../plugins'\r\nimport { logGlobal } from '../plugins/logging.js'\r\n\r\nimport { InvalidPasswordError } from '../utils/errors.js'\r\n\r\nVue.use(Vuex)\r\n\r\nconst defaultUsername = ''\r\nconst defaultPassword = 'reprap'\r\n\r\nconst machines = {\r\n\t[defaultMachine]: machine(defaultMachine)\r\n}\r\n\r\nconst store = new Vuex.Store({\r\n\tstate: {\r\n\t\tisConnecting: false,\r\n\t\tconnectingProgress: -1,\r\n\t\tisDisconnecting: false,\r\n\t\tisLocal: (location.hostname === 'localhost') || (location.hostname === '127.0.0.1') || (location.hostname === '[::1]'),\r\n\t\tconnectDialogShown: (location.hostname === 'localhost') || (location.hostname === '127.0.0.1') || (location.hostname === '[::1]'),\r\n\t\tpasswordRequired: false,\r\n\t\tselectedMachine: defaultMachine\r\n\t},\r\n\tgetters: {\r\n\t\tconnectedMachines: () => Object.keys(machines).filter(machine => machine !== defaultMachine),\r\n\t\tisConnected: state => state.selectedMachine !== defaultMachine && state.machine && !state.machine.isReconnecting,\r\n\t\tuiFrozen: (state, getters) => state.isConnecting || state.isDisconnecting || !getters.isConnected\r\n\t},\r\n\tactions: {\r\n\t\t// Connect to the given hostname using the specified credentials\r\n\t\tasync connect({ state, commit, dispatch }, { hostname = location.host, username = defaultUsername, password = defaultPassword, retrying = false } = {}) {\r\n\t\t\tif (!hostname || hostname === defaultMachine) {\r\n\t\t\t\tthrow new Error('Invalid hostname');\r\n\t\t\t}\r\n\t\t\tif (state.machines[hostname] !== undefined) {\r\n\t\t\t\tthrow new Error(`Host ${hostname} is already connected!`);\r\n\t\t\t}\r\n\t\t\tif (state.isConnecting && !retrying) {\r\n\t\t\t\tthrow new Error('Already connecting');\r\n\t\t\t}\r\n\r\n\t\t\tcommit('setConnecting', true);\r\n\t\t\ttry {\r\n\t\t\t\tconst connectorInstance = await connector.connect(hostname, username, password);\r\n\t\t\t\tconst moduleInstance = machine(hostname, connectorInstance);\r\n\t\t\t\tcommit('addMachine', { hostname, moduleInstance });\r\n\t\t\t\tconnectorInstance.register(moduleInstance);\r\n\r\n\t\t\t\tcommit('setSelectedMachine', hostname);\r\n\t\t\t\tlogGlobal('success', i18n.t('events.connected', [hostname]));\r\n\r\n\t\t\t\tawait dispatch('machine/settings/load');\r\n\t\t\t\tawait dispatch('machine/cache/load');\r\n\t\t\t\tif (state.isLocal) {\r\n\t\t\t\t\tcommit('settings/setLastHostname', hostname);\r\n\t\t\t\t}\r\n\t\t\t} catch (e) {\r\n\t\t\t\tconst isPasswordError = e instanceof InvalidPasswordError;\r\n\t\t\t\tif (!isPasswordError || password !== defaultPassword) {\r\n\t\t\t\t\tlogGlobal(isPasswordError ? 'warning' : 'error', i18n.t('error.connect', [hostname]), e.message);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (isPasswordError) {\r\n\t\t\t\t\tcommit('askForPassword');\r\n\t\t\t\t} else if (!state.isLocal && hostname === location.host) {\r\n\t\t\t\t\tsetTimeout(() => dispatch('connect', { hostname, username, password, retrying: true }), 1000);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tcommit('setConnecting', false);\r\n\t\t},\r\n\r\n\t\t// Disconnect from the given hostname\r\n\t\tasync disconnect({ state, commit, dispatch }, { hostname = state.selectedMachine, doDisconnect = true } = {}) {\r\n\t\t\tif (!hostname || hostname === defaultMachine) {\r\n\t\t\t\tthrow new Error('Invalid hostname');\r\n\t\t\t}\r\n\t\t\tif (state.machines[hostname] === undefined) {\r\n\t\t\t\tthrow new Error(`Host ${hostname} is already disconnected!`);\r\n\t\t\t}\r\n\t\t\tif (state.isDisconnecting) {\r\n\t\t\t\tthrow new Error('Already disconnecting');\r\n\t\t\t}\r\n\r\n\t\t\tif (doDisconnect) {\r\n\t\t\t\tcommit('setDisconnecting', true);\r\n\t\t\t\ttry {\r\n\t\t\t\t\tawait dispatch(`machines/${hostname}/disconnect`);\r\n\t\t\t\t\tlogGlobal('success', i18n.t('events.disconnected', [hostname]));\r\n\t\t\t\t\t// Disconnecting must always work - even if it does not always happen cleanly\r\n\t\t\t\t} catch (e) {\r\n\t\t\t\t\tlogGlobal('warning', i18n.t('error.disconnect', [hostname]), e.message);\r\n\t\t\t\t\tconsole.warn(e);\r\n\t\t\t\t}\r\n\t\t\t\tcommit('setDisconnecting', false);\r\n\t\t\t}\r\n\t\t\tcommit(`machines/${hostname}/unregister`);\r\n\r\n\t\t\tif (state.selectedMachine === hostname) {\r\n\t\t\t\tcommit('setSelectedMachine', defaultMachine);\r\n\t\t\t}\r\n\t\t\tcommit('removeMachine', hostname);\r\n\t\t},\r\n\r\n\t\t// Disconnect from every host\r\n\t\tasync disconnectAll({ dispatch }) {\r\n\t\t\tfor (let hostname in machines) {\r\n\t\t\t\tif (hostname !== defaultMachine) {\r\n\t\t\t\t\t// Don't do this via await because we don't have much time...\r\n\t\t\t\t\tdispatch('disconnect', { hostname });\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t// Called when a machine cannot stay connected\r\n\t\tasync onConnectionError({ state, dispatch, commit }, { hostname, error }) {\r\n\t\t\tif (error instanceof InvalidPasswordError) {\r\n\t\t\t\tlogGlobal('error', i18n.t('events.connectionLost', [hostname]), error.message);\r\n\t\t\t\tawait dispatch('disconnect', { hostname, doDisconnect: false });\r\n\t\t\t\tcommit('askForPassword');\r\n\t\t\t} else if (state.isLocal) {\r\n\t\t\t\tlogGlobal('error', i18n.t('events.connectionLost', [hostname]), error.message);\r\n\t\t\t\tawait dispatch('disconnect', { hostname, doDisconnect: false });\r\n\t\t\t} else {\r\n\t\t\t\tlogGlobal('warning', i18n.t('events.reconnecting', [hostname]), error.message);\r\n\t\t\t\tdispatch(`machines/${hostname}/reconnect`);\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tmutations: {\r\n\t\tshowConnectDialog: state => state.connectDialogShown = true,\r\n\t\thideConnectDialog(state) {\r\n\t\t\tstate.connectDialogShown = false;\r\n\t\t\tstate.passwordRequired = false;\r\n\t\t},\r\n\t\taskForPassword(state) {\r\n\t\t\tstate.connectDialogShown = true;\r\n\t\t\tstate.passwordRequired = true;\r\n\t\t},\r\n\r\n\t\tsetConnecting: (state, connecting) => state.isConnecting = connecting,\r\n\t\tsetConnectingProgress: (state, progress) => state.connectingProgress = progress,\r\n\t\taddMachine(state, { hostname, moduleInstance }) {\r\n\t\t\tmachines[hostname] = moduleInstance;\r\n\t\t\tthis.registerModule(['machines', hostname], moduleInstance);\r\n\t\t},\r\n\t\tsetDisconnecting: (state, disconnecting) => state.isDisconnecting = disconnecting,\r\n\t\tremoveMachine(state, hostname) {\r\n\t\t\tthis.unregisterModule(['machines', hostname]);\r\n\t\t\tdelete machines[hostname];\r\n\t\t},\r\n\r\n\t\tsetSelectedMachine(state, selectedMachine) {\r\n\t\t\tthis.unregisterModule('machine');\r\n\t\t\tthis.registerModule('machine', machines[selectedMachine]);\r\n\t\t\tstate.selectedMachine = selectedMachine;\r\n\t\t\t\r\n\t\t\t// Allow access to the machine's data store for debugging...\r\n\t\t\twindow.machineStore = state.machine;\r\n\t\t}\r\n\t},\r\n\r\n\tmodules: {\r\n\t\t// machine will provide the currently selected machine\r\n\t\tmachines: {\r\n\t\t\tnamespaced: true,\r\n\t\t\tmodules: {\r\n\t\t\t\t[defaultMachine]: machines[defaultMachine] \t\t\t\t// This represents the factory defaults\r\n\t\t\t\t// ... other machines are added as sub-modules to this object\r\n\t\t\t}\r\n\t\t},\r\n\t\tsettings\r\n\t},\r\n\tplugins: [\r\n\t\tconnector.installStore,\r\n\t\tobserver,\r\n\t\tPlugins.installStore\r\n\t],\r\n\tstrict: process.env.NODE_ENV !== 'production'\r\n})\r\n\r\n// This has to be registered dynamically, else unregisterModule will not work cleanly\r\nstore.registerModule('machine', machines[defaultMachine])\r\n\r\n// Debug function to replicate different machine states\r\nif (process.env.NODE_ENV !== 'production') {\r\n\twindow.updateMachineStore = function(newStore) {\r\n\t\tstore.dispatch('machine/update', newStore);\r\n\t}\r\n}\r\n\r\nexport default store\r\n"]}]}