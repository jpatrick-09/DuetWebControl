{"remainingRequest":"C:\\Users\\jpatrick\\Documents\\GitHub\\DuetWebControl_Fork\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\jpatrick\\Documents\\GitHub\\DuetWebControl_Fork\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\jpatrick\\Documents\\GitHub\\DuetWebControl_Fork\\node_modules\\vuetify-loader\\lib\\loader.js??ref--18-0!C:\\Users\\jpatrick\\Documents\\GitHub\\DuetWebControl_Fork\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\jpatrick\\Documents\\GitHub\\DuetWebControl_Fork\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\jpatrick\\Documents\\GitHub\\DuetWebControl_Fork\\src\\components\\buttons\\UploadBtn.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\jpatrick\\Documents\\GitHub\\DuetWebControl_Fork\\src\\components\\buttons\\UploadBtn.vue","mtime":1592248188509},{"path":"C:\\Users\\jpatrick\\Documents\\GitHub\\DuetWebControl_Fork\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\jpatrick\\Documents\\GitHub\\DuetWebControl_Fork\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\jpatrick\\Documents\\GitHub\\DuetWebControl_Fork\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\jpatrick\\Documents\\GitHub\\DuetWebControl_Fork\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1574476662000},{"path":"C:\\Users\\jpatrick\\Documents\\GitHub\\DuetWebControl_Fork\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\jpatrick\\Documents\\GitHub\\DuetWebControl_Fork\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["UploadBtn.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n\t<div>\r\n\t\t<v-btn v-bind=\"$props\" @click=\"chooseFile\" :disabled=\"$props.disabled || !canUpload\" :loading=\"isBusy\" :title=\"$t(`button.upload['${target}'].title`)\" :color=\"innerColor\" @dragover=\"dragOver\" @dragleave=\"dragLeave\" @drop.prevent.stop=\"dragDrop\">\r\n\t\t\t<template #loader>\r\n\t\t\t\t<v-progress-circular indeterminate :size=\"23\" :width=\"2\" class=\"mr-2\"></v-progress-circular>\r\n\t\t\t\t{{ caption }}\r\n\t\t\t</template>\r\n\r\n\t\t\t<slot>\r\n\t\t\t\t<v-icon class=\"mr-2\">mdi-cloud-upload</v-icon> {{ caption }}\r\n\t\t\t</slot>\r\n\t\t</v-btn>\r\n\r\n\t\t<input ref=\"fileInput\" type=\"file\" :accept=\"accept\" hidden @change=\"fileSelected\" multiple>\r\n\t\t<confirm-dialog :shown.sync=\"confirmUpdate\" :title=\"$t('dialog.update.title')\" :prompt=\"$t('dialog.update.prompt')\" @confirmed=\"startUpdate\"></confirm-dialog>\r\n\t</div>\r\n</template>\r\n\r\n<script>\r\n'use strict'\r\n\r\nimport JSZip from 'jszip'\r\nimport { VBtn } from 'vuetify/lib'\r\n\r\nimport { mapState, mapGetters, mapActions } from 'vuex'\r\n\r\nimport { NetworkInterfaceType, StatusType } from '../../store/machine/modelEnums.js'\r\nimport Path from '../../utils/path.js'\r\nimport { DisconnectedError } from '../../utils/errors.js'\r\n\r\nconst webExtensions = ['.htm', '.html', '.ico', '.xml', '.css', '.map', '.js', '.ttf', '.eot', '.svg', '.woff', '.woff2', '.jpeg', '.jpg', '.png']\r\n\r\nexport default {\r\n\tcomputed: {\r\n\t\t...mapState(['isLocal']),\r\n\t\t...mapState('machine/model', ['boards', 'directories', 'network', 'state']),\r\n\t\t...mapGetters(['isConnected', 'uiFrozen']),\r\n\t\tcaption() {\r\n\t\t\tif (this.extracting) {\r\n\t\t\t\treturn this.$t('generic.extracting');\r\n\t\t\t}\r\n\t\t\tif (this.uploading) {\r\n\t\t\t\treturn this.$t('generic.uploading');\r\n\t\t\t}\r\n\t\t\treturn this.$t(`button.upload['${this.target}'].caption`);\r\n\t\t},\r\n\t\tcanUpload() {\r\n\t\t\treturn this.isConnected && !this.uiFrozen;\r\n\t\t},\r\n\t\taccept() {\r\n\t\t\tswitch (this.target) {\r\n\t\t\t\tcase 'gcodes': return '.g,.gcode,.gc,.gco,.nc,.ngc,.tap';\r\n\t\t\t\tcase 'start': return '.g,.gcode,.gc,.gco,.nc,.ngc,.tap';\r\n\t\t\t\tcase 'macros': return '*';\r\n\t\t\t\tcase 'filaments': return '.zip';\r\n\t\t\t\tcase 'firmware': return '.zip,.bin';\r\n\t\t\t\tcase 'menu': return '*';\r\n\t\t\t\tcase 'system': return '.zip,.bin,.json,.g,.csv';\r\n\t\t\t\tcase 'web': return '.zip,.csv,.json,.htm,.html,.ico,.xml,.css,.map,.js,.ttf,.eot,.svg,.woff,.woff2,.jpeg,.jpg,.png,.gz';\r\n\t\t\t}\r\n\t\t\treturn undefined;\r\n\t\t},\r\n\t\tdestinationDirectory() {\r\n\t\t\tif (this.directory) {\r\n\t\t\t\treturn this.directory;\r\n\t\t\t}\r\n\r\n\t\t\tswitch (this.target) {\r\n\t\t\t\tcase 'gcodes': return this.directories.gCodes;\r\n\t\t\t\tcase 'start': return this.directories.gCodes;\r\n\t\t\t\tcase 'firmware': return this.directories.firmware;\r\n\t\t\t\tcase 'macros': return this.directories.macros;\r\n\t\t\t\tcase 'filaments': return this.directories.filaments;\r\n\t\t\t\tcase 'menu': return this.directories.menu;\r\n\t\t\t\tcase 'system': return this.directories.system;\r\n\t\t\t\tcase 'web': return this.directories.web;\r\n\t\t\t}\r\n\t\t\treturn undefined;\r\n\t\t},\r\n\t\tisBusy() {\r\n\t\t\treturn this.extracting || this.uploading;\r\n\t\t}\r\n\t},\r\n\tdata() {\r\n\t\treturn {\r\n\t\t\tinnerColor: this.color,\r\n\t\t\textracting: false,\r\n\t\t\tuploading: false,\r\n\r\n\t\t\tconfirmUpdate: false,\r\n\t\t\tupdates: {\r\n\t\t\t\twebInterface: false,\r\n\t\t\t\tfirmwareBoards: [],\r\n\t\t\t\twifiServer: false,\r\n\t\t\t\twifiServerSpiffs: false,\r\n\r\n\t\t\t\tcodeSent: false\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\textends: VBtn,\r\n\tprops: {\r\n\t\tdirectory: String,\r\n\t\ttarget: {\r\n\t\t\ttype: String,\r\n\t\t\trequired: true\r\n\t\t},\r\n\t\tuploadPrint: Boolean\r\n\t},\r\n\tmethods: {\r\n\t\t...mapActions('machine', ['sendCode', 'upload']),\r\n\t\tchooseFile() {\r\n\t\t\tif (!this.isBusy) {\r\n\t\t\t\tthis.$refs.fileInput.click();\r\n\t\t\t}\r\n\t\t},\r\n\t\tasync fileSelected(e) {\r\n\t\t\tawait this.doUpload(e.target.files);\r\n\t\t\te.target.value = '';\r\n\t\t},\r\n\t\tisWebFile(filename) {\r\n\t\t\tif (webExtensions.some(extension => filename.toLowerCase().endsWith(extension))) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\r\n\t\t\tconst matches = /(\\.[^.]+).gz$/i.exec(filename);\r\n\t\t\tif (matches && webExtensions.indexOf(matches[1].toLowerCase()) !== -1) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t},\r\n\t\tgetFirmwareName(fileName) {\r\n\t\t\tlet result = null;\r\n\t\t\tthis.boards.forEach((board, index) => {\r\n\t\t\t\tif (board && board.firmwareFileName && (board.canAddress || index === 0)) {\r\n\t\t\t\t\tconst regEx = new RegExp(board.firmwareFileName.replace(/\\.bin$/, '(.*)\\\\.bin'), 'i');\r\n\t\t\t\t\tif (regEx.test(fileName)) {\r\n\t\t\t\t\t\tresult = board.firmwareFileName;\r\n\t\t\t\t\t\tthis.updates.firmwareBoards.push(board.canAddress || 0);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}, this);\r\n\t\t\treturn result;\r\n\t\t},\r\n\t\tgetBinaryName(key, fileName) {\r\n\t\t\tlet result = null;\r\n\t\t\tthis.boards.forEach(board => {\r\n\t\t\t\tif (board && board[key]) {\r\n\t\t\t\t\tconst regEx = new RegExp(board[key].replace(/\\.bin$/, '(.*)\\\\.bin'), 'i');\r\n\t\t\t\t\tif (regEx.test(fileName)) {\r\n\t\t\t\t\t\tresult = board[key];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\treturn result;\r\n\t\t},\r\n\t\tasync doUpload(files, zipName, startTime) {\r\n\t\t\tif (!files.length) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (this.target === 'start' && files.length !== 1) {\r\n\t\t\t\tthis.$makeNotification('error', this.$t(`button.upload['${this.target}'].caption`), this.$t('error.uploadStartWrongFileCount'));\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (!zipName) {\r\n\t\t\t\tif (files.length > 1 && files[0].name.toLowerCase().endsWith('.zip')) {\r\n\t\t\t\t\tthis.$makeNotification('error', this.$t(`button.upload['${this.target}'].caption`), this.$t('error.uploadNoSingleZIP'));\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (files[0].name.toLowerCase().endsWith('.zip')) {\r\n\t\t\t\t\tconst zip = new JSZip(), zipFiles = [], target = this.target;\r\n\t\t\t\t\tthis.extracting = true;\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\t// Open the ZIP file and read its content\r\n\t\t\t\t\t\tawait zip.loadAsync(files[0], { checkCRC32: true });\r\n\t\t\t\t\t\tzip.forEach(function(file) {\r\n\t\t\t\t\t\t\tif (!file.endsWith('/') && (file.split('/').length === 2 || target !== 'filaments')) {\r\n\t\t\t\t\t\t\t\tzipFiles.push(file);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t// Could we get anything useful?\r\n\t\t\t\t\t\tif (!zipFiles.length) {\r\n\t\t\t\t\t\t\tthis.extracting = false;\r\n\t\t\t\t\t\t\tthis.$makeNotification('error', this.$t(`button.upload['${this.target}'].caption`), this.$t('error.uploadNoFiles'));\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Extract everything and start the upload\r\n\t\t\t\t\t\tfor (let i = 0; i < zipFiles.length; i++) {\r\n\t\t\t\t\t\t\tconst name = zipFiles[i];\r\n\t\t\t\t\t\t\tzipFiles[i] = await zip.file(name).async('blob');\r\n\t\t\t\t\t\t\tzipFiles[i].name = name;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tthis.doUpload(zipFiles, files[0].name, new Date());\r\n\t\t\t\t\t} catch (e) {\r\n\t\t\t\t\t\tconsole.warn(e);\r\n\t\t\t\t\t\tthis.$makeNotification('error', this.$t('error.uploadDecompressionFailed'), e.message);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.extracting = false;\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.updates.webInterface = false;\r\n\t\t\tthis.updates.firmwareBoards = [];\r\n\t\t\tthis.updates.wifiServer = false;\r\n\t\t\tthis.updates.wifiServerSpiffs = false;\r\n\r\n\t\t\tlet success = true;\r\n\t\t\tthis.uploading = true;\r\n\t\t\tfor (let i = 0; i < files.length; i++) {\r\n\t\t\t\tconst content = files[i];\r\n\r\n\t\t\t\t// Adjust filename if an update is being uploaded\r\n\t\t\t\tlet filename = Path.combine(this.destinationDirectory, content.name);\r\n\t\t\t\tif (this.target === 'system' || this.target === 'firmware') {\r\n\t\t\t\t\tif (Path.isSdPath('/' + content.name)) {\r\n\t\t\t\t\t\tfilename = Path.combine('0:/', content.name);\r\n\t\t\t\t\t} else if (this.isWebFile(content.name)) {\r\n\t\t\t\t\t\tfilename = Path.combine(this.directories.web, content.name);\r\n\t\t\t\t\t\tthis.updates.webInterface |= /index.html(\\.gz)?/i.test(content.name);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tconst firmwareFileName = this.getFirmwareName(content.name);\r\n\t\t\t\t\t\tconst bootloaderFileName = this.getBinaryName('bootloaderFileName', content.name);\r\n\t\t\t\t\t\tconst iapFileNameSBC = this.getBinaryName('iapFileNameSBC', content.name);\r\n\t\t\t\t\t\tconst iapFileNameSD = this.getBinaryName('iapFileNameSD', content.name);\r\n\t\t\t\t\t\tif (firmwareFileName) {\r\n\t\t\t\t\t\t\tfilename = Path.combine(this.directories.firmware, firmwareFileName);\r\n\t\t\t\t\t\t} else if (bootloaderFileName) {\r\n\t\t\t\t\t\t\tfilename = Path.combine(this.directories.firmware, bootloaderFileName);\r\n\t\t\t\t\t\t} else if (this.state.dsfVersion && iapFileNameSBC) {\r\n\t\t\t\t\t\t\tfilename = Path.combine(this.directories.firmware, iapFileNameSBC);\r\n\t\t\t\t\t\t} else if (iapFileNameSD) {\r\n\t\t\t\t\t\t\tfilename = Path.combine(this.directories.firmware, iapFileNameSD);\r\n\t\t\t\t\t\t} else if (!this.state.dsfVersion && this.network.interfaces.some(iface => iface.type === NetworkInterfaceType.wifi)) {\r\n\t\t\t\t\t\t\tif ((/DuetWiFiSocketServer(.*)\\.bin/i.test(content.name) || /DuetWiFiServer(.*)\\.bin/i.test(content.name))) {\r\n\t\t\t\t\t\t\t\tfilename = Path.combine(this.directories.firmware, 'DuetWiFiServer.bin');\r\n\t\t\t\t\t\t\t\tthis.updates.wifiServer = true;\r\n\t\t\t\t\t\t\t} else if (/DuetWebControl(.*)\\.bin/i.test(content.name)) {\r\n\t\t\t\t\t\t\t\tfilename = Path.combine(this.directories.firmware, 'DuetWebControl.bin');\r\n\t\t\t\t\t\t\t\tthis.updates.wifiServerSpiffs = true;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else if (content.name.endsWith('.bin')) {\r\n\t\t\t\t\t\t\t// FIXME This will be no longer needed when CAN board enumeration is supported\r\n\t\t\t\t\t\t\tfilename = Path.combine(this.directories.firmware, content.name);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttry {\r\n\t\t\t\t\t// Start uploading\r\n\t\t\t\t\tif (files.length > 1) {\r\n\t\t\t\t\t\tawait this.upload({ filename, content, showSuccess: !zipName, num: i + 1, count: files.length });\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tawait this.upload({ filename, content });\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Run it (if required)\r\n\t\t\t\t\tif (this.target === 'start') {\r\n\t\t\t\t\t\tawait this.sendCode(`M32 \"${filename}\"`);\r\n\t\t\t\t\t}\r\n\t\t\t\t} catch (e) {\r\n\t\t\t\t\tsuccess = false;\r\n\t\t\t\t\tthis.$emit('uploadFailed', { filename, reason: e });\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.uploading = false;\r\n\r\n\t\t\tif (success) {\r\n\t\t\t\tthis.$emit('uploadComplete', files);\r\n\r\n\t\t\t\tif ((this.updates.firmwareBoards.length > 0) || this.updates.wifiServer || this.updates.wifiServerSpiffs) {\r\n\t\t\t\t\t// Ask user to perform an update\r\n\t\t\t\t\tthis.confirmUpdate = true;\r\n\t\t\t\t} else if (!this.isLocal && this.updates.webInterface) {\r\n\t\t\t\t\t// Reload the web interface immediately if it was the only update\r\n\t\t\t\t\tlocation.reload(true);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// FIXME For some reason the $t function throws an exception when this button is floating\r\n\t\t\t\tif (zipName) {\r\n\t\t\t\t\tconst secondsPassed = Math.round((new Date() - startTime) / 1000);\r\n\t\t\t\t\tthis.$makeNotification('success', this.$t('notification.upload.success', [zipName, this.$displayTime(secondsPassed)]));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tasync startUpdate() {\r\n\t\t\t// Update expansion boards\r\n\t\t\tfor (let i = 0; i < this.updates.firmwareBoards.length; i++) {\r\n\t\t\t\tconst boardToUpdate = this.updates.firmwareBoards[i];\r\n\t\t\t\tif (boardToUpdate > 0) {\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tawait this.sendCode(`M997 B${boardToUpdate}`);\r\n\t\t\t\t\t\tdo {\r\n\t\t\t\t\t\t\t// Wait in 2-second intervals until the status is no longer 'Updating'\r\n\t\t\t\t\t\t\tawait new Promise(resolve => setTimeout(resolve, 2000));\r\n\r\n\t\t\t\t\t\t\t// Stop if the connection has been interrupted\r\n\t\t\t\t\t\t\tif (!this.isConnected) {\r\n\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} while (this.state.status === StatusType.updating);\r\n\r\n\t\t\t\t\t} catch (e) {\r\n\t\t\t\t\t\tif (!(e instanceof DisconnectedError)) {\r\n\t\t\t\t\t\t\tconsole.warn(e);\r\n\t\t\t\t\t\t\tthis.$log('error', this.$t('generic.error'), e.message);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Update other modules\r\n\t\t\tlet modules = [];\r\n\t\t\tif (this.updates.firmwareBoards.indexOf(0) >= 0) {\r\n\t\t\t\tmodules.push('0');\r\n\t\t\t}\r\n\t\t\tif (this.updates.wifiServer) {\r\n\t\t\t\tmodules.push('1');\r\n\t\t\t}\r\n\t\t\tif (this.updates.wifiServerSpiffs) {\r\n\t\t\t\tmodules.push('2');\r\n\t\t\t}\r\n\r\n\t\t\tthis.updates.codeSent = true;\r\n\t\t\ttry {\r\n\t\t\t\tawait this.sendCode(`M997 S${modules.join(':')}`);\r\n\t\t\t} catch (e) {\r\n\t\t\t\tif (!(e instanceof DisconnectedError)) {\r\n\t\t\t\t\tconsole.warn(e);\r\n\t\t\t\t\tthis.$log('error', this.$t('generic.error'), e.message);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tdragOver(e) {\r\n\t\t\te.preventDefault();\r\n\t\t\te.stopPropagation();\r\n\t\t\tif (!this.isBusy) {\r\n\t\t\t\tthis.innerColor = 'success';\r\n\t\t\t}\r\n\t\t},\r\n\t\tdragLeave(e) {\r\n\t\t\te.preventDefault();\r\n\t\t\te.stopPropagation();\r\n\t\t\tthis.innerColor = this.color;\r\n\t\t},\r\n\t\tasync dragDrop(e) {\r\n\t\t\tthis.innerColor = this.color;\r\n\t\t\tif (!this.isBusy && e.dataTransfer.files.length) {\r\n\t\t\t\tawait this.doUpload(e.dataTransfer.files);\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\twatch: {\r\n\t\tisConnected(to) {\r\n\t\t\tif (to && !this.isLocal && this.updates.codeSent && this.updates.webInterface) {\r\n\t\t\t\t// Reload the web interface when the connection could be established again\r\n\t\t\t\tlocation.reload(true);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n</script>\r\n"],"sourceRoot":"src/components/buttons"}]}