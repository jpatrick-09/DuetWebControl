{"remainingRequest":"C:\\Users\\jpatrick\\Documents\\GitHub\\DuetWebControl_Fork\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\jpatrick\\Documents\\GitHub\\DuetWebControl_Fork\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\jpatrick\\Documents\\GitHub\\DuetWebControl_Fork\\node_modules\\vuetify-loader\\lib\\loader.js??ref--18-0!C:\\Users\\jpatrick\\Documents\\GitHub\\DuetWebControl_Fork\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\jpatrick\\Documents\\GitHub\\DuetWebControl_Fork\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\jpatrick\\Documents\\GitHub\\DuetWebControl_Fork\\src\\components\\lists\\BaseFileList.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\jpatrick\\Documents\\GitHub\\DuetWebControl_Fork\\src\\components\\lists\\BaseFileList.vue","mtime":1592248188537},{"path":"C:\\Users\\jpatrick\\Documents\\GitHub\\DuetWebControl_Fork\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\jpatrick\\Documents\\GitHub\\DuetWebControl_Fork\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\jpatrick\\Documents\\GitHub\\DuetWebControl_Fork\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\jpatrick\\Documents\\GitHub\\DuetWebControl_Fork\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1574476662000},{"path":"C:\\Users\\jpatrick\\Documents\\GitHub\\DuetWebControl_Fork\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\jpatrick\\Documents\\GitHub\\DuetWebControl_Fork\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["BaseFileList.vue"],"names":[],"mappings":"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","sourcesContent":["<style scoped>\r\ntd {\r\n\tcursor: pointer;\r\n}\r\n\r\n.loading-cursor {\r\n\tcursor: wait;\r\n}\r\n.loading-cursor td {\r\n\tcursor: wait;\r\n}\r\n</style>\r\n\r\n<style>\r\n.base-file-list th {\r\n\twhite-space: nowrap;\r\n}\r\n</style>\r\n\r\n<template>\r\n\t<div>\r\n\t\t<v-data-table v-model=\"innerValue\" v-bind=\"$props\"\r\n\t\t\t:items=\"innerFilelist\" item-key=\"name\" :headers=\"headers || defaultHeaders\" show-select \r\n\t\t\t:loading=\"loading || innerLoading\"\r\n\t\t\t:custom-sort=\"sort\" :sort-by.sync=\"internalSortBy\" :sort-desc.sync=\"internalSortDesc\" must-sort\r\n\t\t\tdisable-pagination hide-default-footer :mobile-breakpoint=\"0\"\r\n\t\t\tclass=\"base-file-list elevation-3\" :class=\"{ 'empty-table-fix' : !innerFilelist.length, 'loading-cursor' : isLoading }\">\r\n\r\n\t\t\t<template #progress>\r\n\t\t\t\t<slot name=\"progress\">\r\n\t\t\t\t\t<v-progress-linear indeterminate></v-progress-linear>\r\n\t\t\t\t</slot>\r\n\t\t\t</template>\r\n\r\n\t\t\t<template #no-data>\r\n\t\t\t\t<slot name=\"no-data\">\r\n\t\t\t\t\t<v-alert :value=\"true\" type=\"info\" class=\"text-left ma-0\" @contextmenu.prevent=\"\">\r\n\t\t\t\t\t\t{{ $t(noItemsText) }}\r\n\t\t\t\t\t</v-alert>\r\n\t\t\t\t</slot>\r\n\t\t\t</template>\r\n\r\n\t\t\t<template #item=\"props\">\r\n\t\t\t\t<tr v-ripple :active=\"props.isSelected\" @keydown.space.prevent=\"props.select(!props.isSelected)\"\r\n\t\t\t\t\t@touchstart=\"onItemTouchStart(props, $event)\" @touchend=\"onItemTouchEnd\"\r\n\t\t\t\t\t@click=\"onItemClick(props)\" @keydown.enter.prevent=\"onItemClick(props)\"\r\n\t\t\t\t\t@contextmenu.prevent=\"onItemContextmenu(props, $event)\" @keydown.escape.prevent=\"contextMenu.shown = false\"\r\n\t\t\t\t\t@dragstart=\"onItemDragStart(props.item, $event)\" @dragover=\"onItemDragOver(props.item, $event)\" @drop.prevent=\"onItemDragDrop(props.item, $event)\"\r\n\t\t\t\t\t:data-filename=\"(props.item.isDirectory ? '*' : '') + props.item.name\" draggable=\"true\" tabindex=\"0\">\r\n\r\n\t\t\t\t\t<td v-for=\"header in props.headers\" :key=\"header.value\" :class=\"{ 'pr-0': header.value === 'data-table-select' }\">\r\n\t\t\t\t\t\t<template v-if=\"header.value === 'data-table-select'\">\r\n\t\t\t\t\t\t\t<v-checkbox :input-value=\"props.isSelected\" @touchstart.stop=\"\" @touchend.stop=\"\" @click.stop.prevent=\"props.select(!props.isSelected)\" primary hide-details class=\"mt-n1\" tabindex=\"-1\"></v-checkbox>\r\n\t\t\t\t\t\t</template>\r\n\t\t\t\t\t\t<template v-else-if=\"header.value === 'name'\">\r\n\t\t\t\t\t\t\t<div class=\"d-inline-flex align-center\">\r\n\t\t\t\t\t\t\t\t<slot :name=\"`${props.item.isDirectory ? 'folder' : 'file'}.${props.item.name}`\">\r\n\t\t\t\t\t\t\t\t\t<v-icon class=\"mr-1\">{{ props.item.isDirectory ? folderIcon : fileIcon }}</v-icon> {{ props.item.name }}\r\n\t\t\t\t\t\t\t\t</slot>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</template>\r\n\t\t\t\t\t\t<template v-else-if=\"header.unit === 'bytes'\">\r\n\t\t\t\t\t\t\t{{ (props.item[header.value] !== null) ? $displaySize(props.item[header.value]) : '' }}\r\n\t\t\t\t\t\t</template>\r\n\t\t\t\t\t\t<template v-else-if=\"header.unit === 'date'\">\r\n\t\t\t\t\t\t\t{{ props.item.lastModified ? props.item.lastModified.toLocaleString() : $t('generic.noValue') }}\r\n\t\t\t\t\t\t</template>\r\n\t\t\t\t\t\t<template v-else-if=\"header.unit === 'filaments'\">\r\n\t\t\t\t\t\t\t<v-tooltip bottom :disabled=\"!props.item[header.value] || props.item[header.value].length <= 1\">\r\n\t\t\t\t\t\t\t\t<template #activator=\"{ on }\">\r\n\t\t\t\t\t\t\t\t\t<span v-on=\"on\">\r\n\t\t\t\t\t\t\t\t\t\t{{ displayLoadingValue(props.item, header.value, 1, 'mm') }}\r\n\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t</template>\r\n\r\n\t\t\t\t\t\t\t\t{{ $display(props.item[header.value], 1, 'mm') }}\r\n\t\t\t\t\t\t\t</v-tooltip>\r\n\t\t\t\t\t\t</template>\r\n\t\t\t\t\t\t<template v-else-if=\"header.unit === 'time'\">\r\n\t\t\t\t\t\t\t{{ displayTimeValue(props.item, header.value) }}\r\n\t\t\t\t\t\t</template>\r\n\t\t\t\t\t\t<template v-else>\r\n\t\t\t\t\t\t\t{{ displayLoadingValue(props.item, header.value, header.precision, header.unit) }}\r\n\t\t\t\t\t\t</template>\r\n\t\t\t\t\t</td>\r\n\t\t\t\t</tr>\r\n\t\t\t</template>\r\n\t\t</v-data-table>\r\n\r\n\t\t<v-menu v-model=\"contextMenu.shown\" :position-x=\"contextMenu.x\" :position-y=\"contextMenu.y\" absolute offset-y>\r\n\t\t\t<v-list>\r\n\t\t\t\t<slot name=\"context-menu\"></slot>\r\n\r\n\t\t\t\t<v-list-item v-show=\"!noDownload && innerValue.length === 1 && filesSelected\" @click=\"download\">\r\n\t\t\t\t\t<v-icon class=\"mr-1\">mdi-cloud-download</v-icon> {{ $tc('list.baseFileList.download', innerValue.length) }}\r\n\t\t\t\t</v-list-item>\r\n\t\t\t\t<v-list-item v-show=\"!noEdit && innerValue.length === 1 && filesSelected\" :disabled=\"!canEditFile\" @click=\"edit(innerValue[0])\">\r\n\t\t\t\t\t<v-icon class=\"mr-1\">mdi-file-document-edit</v-icon> {{ $t('list.baseFileList.edit') }}\r\n\t\t\t\t</v-list-item>\r\n\t\t\t\t<v-list-item v-show=\"!noRename && innerValue.length === 1\" @click=\"rename\">\r\n\t\t\t\t\t<v-icon class=\"mr-1\">mdi-rename-box</v-icon> {{ $t('list.baseFileList.rename') }}\r\n\t\t\t\t</v-list-item>\r\n\t\t\t\t<v-list-item v-show=\"!noDelete\" @click=\"remove\">\r\n\t\t\t\t\t<v-icon class=\"mr-1\">mdi-delete</v-icon> {{ $t('list.baseFileList.delete') }}\r\n\t\t\t\t</v-list-item>\r\n\t\t\t\t<v-list-item v-show=\"!foldersSelected && innerValue.length > 1\" @click=\"downloadZIP\">\r\n\t\t\t\t\t<v-icon class=\"mr-1\">mdi-package-down</v-icon> {{ $t('list.baseFileList.downloadZIP') }}\r\n\t\t\t\t</v-list-item>\r\n\t\t\t</v-list>\r\n\t\t</v-menu>\r\n\r\n\t\t<file-edit-dialog :shown.sync=\"editDialog.shown\" :filename=\"editDialog.filename\" v-model=\"editDialog.content\" @editComplete=\"$emit('fileEdited', $event)\"></file-edit-dialog>\r\n\t\t<input-dialog :shown.sync=\"renameDialog.shown\" :title=\"$t('dialog.renameFile.title')\" :prompt=\"$t('dialog.renameFile.prompt')\" :preset=\"renameDialog.item && renameDialog.item.name\" @confirmed=\"renameCallback\"></input-dialog>\r\n\t</div>\r\n</template>\r\n\r\n<script>\r\n'use strict'\r\n\r\nimport JSZip from 'jszip'\r\nimport saveAs from 'file-saver'\r\nimport { VDataTable } from 'vuetify/lib'\r\n\r\nimport Vue from 'vue'\r\nimport { mapState, mapGetters, mapActions, mapMutations } from 'vuex'\r\n\r\nimport i18n from '../../i18n'\r\nimport { defaultMachine, getModifiedDirectories } from '../../store/machine'\r\nimport { DisconnectedError, OperationCancelledError } from '../../utils/errors.js'\r\nimport Path from '../../utils/path.js'\r\n\r\nconst maxEditFileSize = 15728640;\t\t// 15 MiB\r\n\r\nexport default {\r\n\tprops: {\r\n\t\theaders: Array,\r\n\t\tsortTable: String,\r\n\t\tdirectory: {\r\n\t\t\ttype: String,\r\n\t\t\trequired: true\r\n\t\t},\r\n\t\tfilelist: Array,\r\n\t\tvalue: Array,\r\n\t\tfileIcon: {\r\n\t\t\ttype: String,\r\n\t\t\tdefault: 'mdi-file'\r\n\t\t},\r\n\t\tfolderIcon: {\r\n\t\t\ttype: String,\r\n\t\t\tdefault: 'mdi-folder'\r\n\t\t},\r\n\t\tloading: Boolean,\r\n\t\tdoingFileOperation: Boolean,\r\n\t\tnoDragDrop: Boolean,\r\n\t\tnoDownload: Boolean,\r\n\t\tnoEdit: Boolean,\r\n\t\tnoFilesText:\r\n\t\t{\r\n\t\t\ttype: String,\r\n\t\t\tdefault: ''\r\n\t\t},\r\n\t\tnoRename: Boolean,\r\n\t\tnoDelete: Boolean\r\n\t},\r\n\tcomputed: {\r\n\t\t...mapState(['selectedMachine']),\r\n\t\t...mapGetters(['isConnected']),\r\n\t\t...mapState('machine', ['isReconnecting']),\r\n\t\t...mapState('machine/cache', ['sorting']),\r\n\t\t...mapState('machine/model', ['volumes']),\r\n\t\tdefaultHeaders() {\r\n\t\t\treturn [\r\n\t\t\t\t{\r\n\t\t\t\t\ttext: i18n.t('list.baseFileList.fileName'),\r\n\t\t\t\t\tvalue: 'name'\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttext: i18n.t('list.baseFileList.size'),\r\n\t\t\t\t\tvalue: 'size',\r\n\t\t\t\t\tunit: 'bytes'\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttext: i18n.t('list.baseFileList.lastModified'),\r\n\t\t\t\t\tvalue: 'lastModified',\r\n\t\t\t\t\tunit: 'date'\r\n\t\t\t\t}\r\n\t\t\t];\r\n\t\t},\r\n\t\tisLoading() {\r\n\t\t\treturn this.loading || this.innerLoading || this.doingFileOperation || this.innerDoingFileOperation;\r\n\t\t},\r\n\t\tfoldersSelected() {\r\n\t\t\treturn this.innerValue.some(item => item.isDirectory)\r\n\t\t},\r\n\t\tfilesSelected() {\r\n\t\t\treturn this.innerValue.some(item => !item.isDirectory)\r\n\t\t},\r\n\t\tcanEditFile() {\r\n\t\t\treturn (this.innerValue.length > 0) && (this.innerValue[0].size < maxEditFileSize);\r\n\t\t},\r\n\t\tnoItemsText() {\r\n\t\t\tif (this.selectedMachine === defaultMachine) {\r\n\t\t\t\treturn this.noFilesText;\r\n\t\t\t}\r\n\t\t\tconst volume = Path.getVolume(this.innerDirectory);\r\n\t\t\treturn (volume >= 0 && volume < this.volumes.length && this.volumes[volume].mounted) ? this.noFilesText : 'list.baseFileList.driveUnmounted';\r\n\t\t},\r\n\t\tinternalSortBy: {\r\n\t\t\tget() { return this.sorting[this.sortTable].column; },\r\n\t\t\tset(value) {\r\n\t\t\t\tthis.setSorting({ table: this.sortTable, column: value, descending: this.internalSortDesc });\r\n\t\t\t}\r\n\t\t},\r\n\t\tinternalSortDesc: {\r\n\t\t\tget() { return this.sorting[this.sortTable].descending; },\r\n\t\t\tset(value) {\r\n\t\t\t\tthis.setSorting({ table: this.sortTable, column: this.internalSortBy, descending: value });\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tdata() {\r\n\t\treturn {\r\n\t\t\tunsubscribe: undefined,\r\n\t\t\twasMounted: false,\r\n\t\t\tinitialDirectory: this.directory,\r\n\t\t\tinnerDirectory: this.directory,\r\n\t\t\tinnerFilelist: [],\r\n\t\t\tinnerLoading: false,\r\n\t\t\tinnerDoingFileOperation: false,\r\n\t\t\tinnerValue: [],\r\n\t\t\tprevSelection: [],\r\n\t\t\tcontextMenu: {\r\n\t\t\t\tshown: false,\r\n\t\t\t\ttouchTimer: undefined,\r\n\t\t\t\tx: 0,\r\n\t\t\t\ty: 0\r\n\t\t\t},\r\n\t\t\teditDialog: {\r\n\t\t\t\tshown: false,\r\n\t\t\t\tfilename: '',\r\n\t\t\t\tcontent: ''\r\n\t\t\t},\r\n\t\t\trenameDialog: {\r\n\t\t\t\tshown: false,\r\n\t\t\t\tdirectory: '',\r\n\t\t\t\titem: null\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\textends: VDataTable,\r\n\tmethods: {\r\n\t\t...mapActions('machine', {\r\n\t\t\tmachineDownload: 'download',\r\n\t\t\tmachineMove: 'move',\r\n\t\t\tmachineDelete: 'delete',\r\n\t\t\tgetFileList: 'getFileList'\r\n\t\t}),\r\n\t\t...mapMutations('machine/cache', ['setSorting']),\r\n\t\ttoggleAll() {\r\n\t\t\tthis.innerValue = this.innerValue.length ? [] : this.innerFilelist.slice();\r\n\t\t},\r\n\t\tsort(items, sortBy, sortDesc) {\r\n\t\t\tsortBy = sortBy.length ? sortBy[0] : 'name';\r\n\t\t\tsortDesc = sortDesc[0];\r\n\r\n\t\t\t// Sort by index\r\n\t\t\titems.sort(function(a, b) {\r\n\t\t\t\tif (a[sortBy] === b[sortBy]) {\r\n\t\t\t\t\treturn 0;\r\n\t\t\t\t}\r\n\t\t\t\tif (a[sortBy] === null || a[sortBy] === undefined) {\r\n\t\t\t\t\treturn -1;\r\n\t\t\t\t}\r\n\t\t\t\tif (b[sortBy] === null || b[sortBy] === undefined) {\r\n\t\t\t\t\treturn 1;\r\n\t\t\t\t}\r\n\t\t\t\tif (a[sortBy].constructor === String && b[sortBy].constructor === String) {\r\n\t\t\t\t\treturn a[sortBy].localeCompare(b[sortBy], undefined, { sensivity: 'base' });\r\n\t\t\t\t}\r\n\t\t\t\tif (a[sortBy] instanceof Array && b[sortBy] instanceof Array) {\r\n\t\t\t\t\tconst reducedA = a[sortBy].length ? a.filament.reduce((a, b) => a + b) : 0;\r\n\t\t\t\t\tconst reducedB = b[sortBy].length ? b.filament.reduce((a, b) => a + b) : 0;\r\n\t\t\t\t\treturn reducedA - reducedB;\r\n\t\t\t\t}\r\n\t\t\t\treturn a[sortBy] - b[sortBy];\r\n\t\t\t});\r\n\r\n\t\t\t// Deal with descending order\r\n\t\t\tif (sortDesc) {\r\n\t\t\t\titems.reverse();\r\n\t\t\t}\r\n\r\n\t\t\t// Then make sure directories come first\r\n\t\t\titems.sort((a, b) => (a.isDirectory === b.isDirectory) ? 0 : (a.isDirectory ? -1 : 1));\r\n\t\t\treturn items;\r\n\t\t},\r\n\t\tasync refresh() {\r\n\t\t\tawait this.loadDirectory(this.innerDirectory);\r\n\t\t},\r\n\t\tasync loadDirectory(directory) {\r\n\t\t\tif (!this.isConnected) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// Update our path even if we're still busy loading\r\n\t\t\tthis.innerDirectory = directory;\r\n\t\t\tif (this.innerLoading) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// Make sure the current volume is actually available\r\n\t\t\tconst volume = Path.getVolume(this.innerDirectory);\r\n\t\t\tif (volume < 0 || volume >= this.volumes.length || !this.volumes[volume].mounted) {\r\n\t\t\t\tthis.innerDirectory = (volume === 0) ? this.initialDirectory : `${volume}:`;\r\n\t\t\t\tthis.innerFilelist = [];\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// Load file list\r\n\t\t\tthis.innerLoading = true;\r\n\t\t\ttry {\r\n\t\t\t\tconst files = await this.getFileList(directory);\r\n\r\n\t\t\t\t// Create missing props if required\r\n\t\t\t\tif (this.headers) {\r\n\t\t\t\t\tfiles.forEach(function(item) {\r\n\t\t\t\t\t\tthis.headers.forEach(function(header) {\r\n\t\t\t\t\t\t\tif (item[header.value] === undefined) {\r\n\t\t\t\t\t\t\t\tVue.set(item, header.value, undefined);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}, this);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Check if another directory was requested while files were being loaded\r\n\t\t\t\tif (directory !== this.innerDirectory) {\r\n\t\t\t\t\tthis.innerLoading = false;\r\n\t\t\t\t\tthis.loadDirectory(this.innerDirectory);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Assign new file list\r\n\t\t\t\tthis.innerFilelist = files;\r\n\t\t\t\tthis.innerValue = [];\r\n\t\t\t\tthis.$nextTick(function() {\r\n\t\t\t\t\tthis.$emit('directoryLoaded', directory);\r\n\t\t\t\t});\r\n\t\t\t} catch (e) {\r\n\t\t\t\tif (!(e instanceof DisconnectedError)) {\r\n\t\t\t\t\tconsole.warn(e);\r\n\t\t\t\t\tthis.$makeNotification('error', this.$t('error.filelistRequestFailed'), e.message);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.innerLoading = false;\r\n\t\t},\r\n\t\tdisplayLoadingValue(item, prop, precision, unit = '') {\r\n\t\t\tif (item.isDirectory) {\r\n\t\t\t\treturn '';\r\n\t\t\t}\r\n\t\t\tif (!item[prop]) {\r\n\t\t\t\treturn this.$t((item[prop] === undefined) ? 'generic.loading' : 'generic.noValue');\r\n\t\t\t}\r\n\r\n\t\t\tlet displayValue;\r\n\t\t\tif (item[prop] instanceof Array) {\r\n\t\t\t\tif (!item[prop].length) {\r\n\t\t\t\t\treturn this.$t('generic.noValue');\r\n\t\t\t\t}\r\n\t\t\t\tdisplayValue = item[prop].reduce((a, b) => a + b);\r\n\t\t\t} else {\r\n\t\t\t\tdisplayValue = item[prop];\r\n\t\t\t}\r\n\r\n\t\t\tif (precision !== undefined) {\r\n\t\t\t\tdisplayValue = displayValue.toFixed(precision);\r\n\t\t\t}\r\n\t\t\treturn `${displayValue} ${unit}`;\r\n\t\t},\r\n\t\tdisplayTimeValue(item, prop) {\r\n\t\t\tif (item.isDirectory) {\r\n\t\t\t\treturn '';\r\n\t\t\t}\r\n\t\t\treturn (item[prop] !== null) ? this.$displayTime(item[prop]) : this.$t('generic.noValue');\r\n\t\t},\r\n\t\tonItemTouchStart(props, e) {\r\n\t\t\tconst that = this;\r\n\t\t\tthis.contextMenu.touchTimer = setTimeout(function() {\r\n\t\t\t\tthat.contextMenu.touchTimer = undefined;\r\n\t\t\t\tthat.onItemContextmenu(props, { clientX: e.targetTouches[0].clientX, clientY: e.targetTouches[0].clientY });\r\n\t\t\t}, 1000);\r\n\t\t},\r\n\t\tonItemTouchEnd() {\r\n\t\t\tif (this.contextMenu.touchTimer) {\r\n\t\t\t\tclearTimeout(this.contextMenu.touchTimer);\r\n\t\t\t\tthis.contextMenu.touchTimer = undefined;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonItemClick(props) {\r\n\t\t\tif (props.item.isDirectory) {\r\n\t\t\t\tthis.loadDirectory(Path.combine(this.innerDirectory, props.item.name));\r\n\t\t\t} else {\r\n\t\t\t\tthis.$emit('fileClicked', props.item);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonItemContextmenu(props, e) {\r\n\t\t\tif (this.contextMenu.shown) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthis.onItemTouchEnd();\r\n\r\n\t\t\t// Deal with selection\r\n\t\t\tthis.prevSelection = this.innerValue;\r\n\t\t\tif (!props.isSelected) {\r\n\t\t\t\tthis.innerValue = [];\r\n\t\t\t\tthis.$nextTick(() => props.select(true));\r\n\t\t\t}\r\n\r\n\t\t\t// Open the context menu\r\n\t\t\tthis.contextMenu.shown = false;\r\n\t\t\tthis.contextMenu.x = e.clientX;\r\n\t\t\tthis.contextMenu.y = e.clientY;\r\n\t\t\tthis.$nextTick(() => {\r\n\t\t\t\tthis.contextMenu.shown = true;\r\n\t\t\t});\r\n\t\t},\r\n\t\tonItemDragStart(item, e) {\r\n\t\t\tif (this.noDragDrop || this.contextMenu.touchTimer || this.contextMenu.shown) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tconst itemsToDrag = this.innerValue;\r\n\t\t\tif (itemsToDrag.indexOf(item) === -1) {\r\n\t\t\t\titemsToDrag.push(item);\r\n\t\t\t}\r\n\t\t\te.dataTransfer.setData('application/json', JSON.stringify({\r\n\t\t\t\ttype: 'dwcFiles',\r\n\t\t\t\tdirectory: this.innerDirectory,\r\n\t\t\t\titems: itemsToDrag\r\n\t\t\t}));\r\n\t\t\te.dataTransfer.effectAllowed = 'move';\r\n\r\n\t\t\tconst table = this.$el.querySelector('table'), firstRow = table.tBodies[0].rows[0];\r\n\t\t\tconst tableClone = table.cloneNode(true), itemFilename = (item.isDirectory ? '*' : '') + item.name;\r\n\t\t\tlet offsetY = 0, countingOffset = true;\r\n\r\n\t\t\ttableClone.tHead.remove();\r\n\t\t\tArray.from(tableClone.tBodies[0].rows).forEach(function(row) {\r\n\t\t\t\tconst filename = row.dataset.filename;\r\n\t\t\t\tif (itemsToDrag.some(item => (item.isDirectory ? '*' : '') + item.name === filename)) {\r\n\t\t\t\t\tArray.from(row.children).forEach(function(td, index) {\r\n\t\t\t\t\t\tif (td.tagName === 'TD') {\r\n\t\t\t\t\t\t\ttd.style.width = `${firstRow.children[index].offsetWidth}px`;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\ttd.remove();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tif (countingOffset) {\r\n\t\t\t\t\t\tif (filename === itemFilename) {\r\n\t\t\t\t\t\t\tcountingOffset = false;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\toffsetY += firstRow.offsetHeight;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\trow.remove();\r\n\t\t\t\t}\r\n\t\t\t}, this);\r\n\t\t\ttableClone.style.backgroundColor = this.$vuetify.theme.isDark ? '#424242' : '#FFFFFF';\r\n\t\t\ttableClone.style.opacity = 0.7;\r\n\t\t\ttableClone.style.position = 'absolute';\r\n\t\t\ttableClone.style.pointerEvents = 'none';\r\n\t\t\tArray.from(tableClone.querySelectorAll('[class^=\"v-ripple\"]')).forEach(function(item) {\r\n\t\t\t\titem.classList = Array.from(item.classList).filter(c => !c.startsWith('v-ripple'));\r\n\t\t\t});\r\n\t\t\ttable.parentNode.append(tableClone);\r\n\r\n\t\t\tconst x = e.clientX - table.getClientRects()[0].left;\r\n\t\t\tconst y = e.clientY - e.target.closest('tr').getClientRects()[0].top + offsetY;\r\n\t\t\te.dataTransfer.setDragImage(tableClone, x, y);\r\n\r\n\t\t\tsetTimeout(() => tableClone.remove(), 0);\r\n\t\t},\r\n\t\tonItemDragOver(item, e) {\r\n\t\t\tif (!this.noDragDrop && item.isDirectory) {\r\n\t\t\t\tconst jsonData = e.dataTransfer.getData('application/json');\r\n\t\t\t\tif (jsonData) {\r\n\t\t\t\t\tconst data = JSON.parse(jsonData);\r\n\t\t\t\t\tif (data.type === 'dwcFiles' && !data.items.some(dataItem => dataItem.isDirectory && dataItem.name === item.name)) {\r\n\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\te.stopPropagation();\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// Fix for Chrome: It does not grant access to dataTransfer on the same domain \"for security reasons\"...\r\n\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\te.stopPropagation();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tasync onItemDragDrop(item, e) {\r\n\t\t\tconst jsonData = e.dataTransfer.getData('application/json');\r\n\t\t\tif (jsonData) {\r\n\t\t\t\tconst data = JSON.parse(jsonData);\r\n\t\t\t\tif (data.type === 'dwcFiles' && !data.items.some(dataItem => dataItem.isDirectory && dataItem.name === item.name)) {\r\n\t\t\t\t\tconst directory = this.innerDirectory;\r\n\t\t\t\t\tfor (let i = 0; i < data.items.length; i++) {\r\n\t\t\t\t\t\tconst from = Path.combine(data.directory, data.items[i].name);\r\n\t\t\t\t\t\tconst to = Path.combine(directory, item.name, data.items[i].name);\r\n\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\tawait this.machineMove({ from, to });\r\n\t\t\t\t\t\t} catch (e) {\r\n\t\t\t\t\t\t\tthis.$makeNotification('error', `Failed to move ${data.items[i].name} to ${directory}`, e.message);\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tasync download(item) {\r\n\t\t\ttry {\r\n\t\t\t\tconst filename = (item && item.name) ? item.name : this.innerValue[0].name;\r\n\t\t\t\tconst blob = await this.machineDownload({ filename: Path.combine(this.innerDirectory, filename), type: 'blob' });\r\n\t\t\t\tsaveAs(blob, filename);\r\n\t\t\t} catch (e) {\r\n\t\t\t\tif (!(e instanceof DisconnectedError) && !(e instanceof OperationCancelledError)) {\r\n\t\t\t\t\t// should be handled before we get here\r\n\t\t\t\t\tconsole.warn(e);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tasync edit(item) {\r\n\t\t\ttry {\r\n\t\t\t\tconst filename = Path.combine(this.innerDirectory, item.name);\r\n\t\t\t\tconst response = await this.machineDownload({ filename, type: 'text', showSuccess: false });\r\n\t\t\t\tthis.editDialog.filename = filename;\r\n\t\t\t\tthis.editDialog.content = response;\r\n\t\t\t\tthis.editDialog.shown = true;\r\n\t\t\t} catch (e) {\r\n\t\t\t\tif (!(e instanceof DisconnectedError) && !(e instanceof OperationCancelledError)) {\r\n\t\t\t\t\t// should be handled before we get here\r\n\t\t\t\t\tconsole.warn(e);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tasync rename(item) {\r\n\t\t\tthis.renameDialog.directory = this.innerDirectory;\r\n\t\t\tthis.renameDialog.item = (item && item.name) ? item : this.innerValue[0];\r\n\t\t\tthis.renameDialog.shown = true;\r\n\t\t},\r\n\t\tasync renameCallback(newFilename) {\r\n\t\t\tconst oldFilename = this.renameDialog.item.name;\r\n\t\t\tif (this.innerDoingFileOperation) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tthis.innerDoingFileOperation = true;\r\n\t\t\ttry {\r\n\t\t\t\tawait this.machineMove({\r\n\t\t\t\t\tfrom: Path.combine(this.renameDialog.directory, oldFilename),\r\n\t\t\t\t\tto: Path.combine(this.renameDialog.directory, newFilename)\r\n\t\t\t\t});\r\n\r\n\t\t\t\tthis.innerFilelist.some(function(file) {\r\n\t\t\t\t\tif (file.isDirectory === this.isDirectory && file.name === this.name) {\r\n\t\t\t\t\t\tfile.name = newFilename;\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}, this.renameDialog.item);\r\n\r\n\t\t\t\tthis.$makeNotification('success', this.$t('notification.rename.success', [oldFilename, newFilename]));\r\n\t\t\t} catch (e) {\r\n\t\t\t\tconsole.warn(e);\r\n\t\t\t\tthis.$log('error', this.$t('notification.rename.error', [oldFilename, newFilename]), e.message);\r\n\t\t\t}\r\n\t\t\tthis.innerDoingFileOperation = false;\r\n\t\t},\r\n\t\tasync remove(items) {\r\n\t\t\tif (!items || !(items instanceof Array)) {\r\n\t\t\t\titems = this.innerValue.slice();\r\n\t\t\t}\r\n\r\n\t\t\tif (this.innerDoingFileOperation) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tthis.innerDoingFileOperation = true;\r\n\t\t\tconst deletedItems = [], directory = this.directory;\r\n\t\t\tfor (let i = 0; i < items.length; i++) {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tconst item = items[i];\r\n\t\t\t\t\tawait this.machineDelete(Path.combine(directory, item.name));\r\n\r\n\t\t\t\t\tdeletedItems.push(items[i]);\r\n\t\t\t\t\tthis.innerFilelist = this.innerFilelist.filter(file => file.isDirectory !== item.isDirectory || file.name !== item.name);\r\n\t\t\t\t\tthis.innerValue = this.innerValue.filter(file => file.isDirectory !== item.isDirectory || file.name !== item.name);\r\n\t\t\t\t} catch (e) {\r\n\t\t\t\t\tthis.$makeNotification('error', this.$t('notification.delete.errorTitle', [items[i].name]), items[i].isDirectory ? this.$t('notification.delete.errorMessageDirectory') : e.message);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (deletedItems.length) {\r\n\t\t\t\tthis.$log('success', (deletedItems.length > 1) ? this.$t('notification.delete.successMultiple', [deletedItems.length]) : this.$t('notification.delete.success', [deletedItems[0].name]));\r\n\t\t\t}\r\n\t\t\tthis.innerDoingFileOperation = false;\r\n\t\t},\r\n\t\tasync downloadZIP(items) {\r\n\t\t\tif (!items || !(items instanceof Array)) { items = this.innerValue.slice(); }\r\n\t\t\tconst directory = this.directory;\r\n\r\n\t\t\t// Download files\r\n\t\t\tconst zip = new JSZip();\r\n\t\t\tfor (let i = 0; i < items.length; i++) {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tconst blob = await this.machineDownload({ filename: Path.combine(directory, items[i].name), type: 'blob', num: i + 1, count: items.length });\r\n\t\t\t\t\tzip.file(items[i].name, blob);\r\n\t\t\t\t} catch (e) {\r\n\t\t\t\t\tif (!(e instanceof DisconnectedError) && !(e instanceof OperationCancelledError)) {\r\n\t\t\t\t\t\t// should be handled before we get here\r\n\t\t\t\t\t\tconsole.warn(e);\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Compress files and save the new archive\r\n\t\t\tconst notification = this.$makeNotification('info', this.$t('notification.compress.title'), this.$t('notification.compress.message'));\r\n\t\t\ttry {\r\n\t\t\t\tconst zipBlob = await zip.generateAsync({ type: 'blob' });\r\n\t\t\t\tsaveAs(zipBlob, 'download.zip');\r\n\t\t\t} catch (e) {\r\n\t\t\t\tconsole.warn(e);\r\n\t\t\t\tthis.$makeNotification('error', this.$t('notification.compress.errorTitle'), e.message);\r\n\t\t\t}\r\n\t\t\tnotification.hide();\r\n\t\t}\r\n\t},\r\n\tmounted() {\r\n\t\t// Perform initial load\r\n\t\tif (this.isConnected) {\r\n\t\t\tconst volume = Path.getVolume(this.innerDirectory);\r\n\t\t\tthis.wasMounted = (volume >= 0) && (volume >= this.volumes.length) && this.volumes[volume].mounted;\r\n\t\t\tthis.refresh();\r\n\t\t}\r\n\r\n\t\t// Keep track of file changes\r\n\t\tconst that = this;\r\n\t\tthis.unsubscribe = this.$store.subscribeAction(async function(action, state) {\r\n\t\t\tif (!that.doingFileOperation && !that.innerDoingFileOperation &&\r\n\t\t\t\tgetModifiedDirectories(action, state).some(directory => Path.equals(directory, that.innerDirectory))) {\r\n\t\t\t\t// Refresh the list when a file or directory has been changed\r\n\t\t\t\tawait that.refresh();\r\n\t\t\t}\r\n\t\t});\r\n\t},\r\n\tbeforeDestroy() {\r\n\t\tthis.unsubscribe();\r\n\t},\r\n\twatch: {\r\n\t\tisConnected(to) {\r\n\t\t\tif (to) {\r\n\t\t\t\tthis.refresh();\r\n\t\t\t} else {\r\n\t\t\t\tthis.innerDirectory = this.initialDirectory;\r\n\t\t\t\tthis.innerFilelist = [];\r\n\r\n\t\t\t\tthis.editDialog.shown = false;\r\n\t\t\t\tthis.renameDialog.shown = false;\r\n\t\t\t}\r\n\t\t},\r\n\t\tselectedMachine() {\r\n\t\t\t// TODO store current directory per selected machine\r\n\t\t\tthis.innerDirectory = this.initialDirectory;\r\n\t\t\tthis.innerFilelist = [];\r\n\r\n\t\t\tthis.editDialog.shown = false;\r\n\t\t\tthis.renameDialog.shown = false;\r\n\t\t},\r\n\t\tvolumes: {\r\n\t\t\tdeep: true,\r\n\t\t\thandler() {\r\n\t\t\t\tif (this.isConnected) {\r\n\t\t\t\t\tconst volume = Path.getVolume(this.directory);\r\n\t\t\t\t\tif (volume >= 0 && volume < this.volumes.length) {\r\n\t\t\t\t\t\tconst mounted = this.volumes[volume].mounted;\r\n\t\t\t\t\t\tif (this.wasMounted !== mounted) {\r\n\t\t\t\t\t\t\tthis.wasMounted = mounted;\r\n\t\t\t\t\t\t\tthis.refresh();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.wasMounted = false;\r\n\t\t\t\t\t\tthis.refresh();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tdirectory(to) {\r\n\t\t\tif (to !== this.innerDirectory) {\r\n\t\t\t\tthis.loadDirectory(to);\r\n\t\t\t}\r\n\t\t},\r\n\t\tinnerDirectory(to) {\r\n\t\t\tif (this.directory !== to) {\r\n\t\t\t\tthis.$emit('update:directory', to);\r\n\t\t\t}\r\n\t\t},\r\n\t\tinnerFilelist(to) {\r\n\t\t\tif (this.filelist !== to) {\r\n\t\t\t\tthis.$emit('update:filelist', to);\r\n\t\t\t}\r\n\t\t},\r\n\t\tinnerLoading(to) {\r\n\t\t\tif (this.loading !== to) {\r\n\t\t\t\tthis.$emit('update:loading', to);\r\n\t\t\t}\r\n\t\t},\r\n\t\tinnerValue(to) {\r\n\t\t\tif (this.value !== to) {\r\n\t\t\t\tthis.$emit('input', to);\r\n\t\t\t}\r\n\t\t},\r\n\t\t'contextMenu.shown'(to) {\r\n\t\t\tif (!to) {\r\n\t\t\t\t// Restore previously selected items\r\n\t\t\t\tthis.innerValue = this.prevSelection;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n</script>\r\n"],"sourceRoot":"src/components/lists"}]}