{"remainingRequest":"C:\\Users\\jpatrick\\Documents\\GitHub\\DuetWebControl_Fork\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\jpatrick\\Documents\\GitHub\\DuetWebControl_Fork\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\jpatrick\\Documents\\GitHub\\DuetWebControl_Fork\\node_modules\\vuetify-loader\\lib\\loader.js??ref--18-0!C:\\Users\\jpatrick\\Documents\\GitHub\\DuetWebControl_Fork\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\jpatrick\\Documents\\GitHub\\DuetWebControl_Fork\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\jpatrick\\Documents\\GitHub\\DuetWebControl_Fork\\src\\components\\lists\\FilamentFileList.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\jpatrick\\Documents\\GitHub\\DuetWebControl_Fork\\src\\components\\lists\\FilamentFileList.vue","mtime":1592248188541},{"path":"C:\\Users\\jpatrick\\Documents\\GitHub\\DuetWebControl_Fork\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\jpatrick\\Documents\\GitHub\\DuetWebControl_Fork\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\jpatrick\\Documents\\GitHub\\DuetWebControl_Fork\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\jpatrick\\Documents\\GitHub\\DuetWebControl_Fork\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1574476662000},{"path":"C:\\Users\\jpatrick\\Documents\\GitHub\\DuetWebControl_Fork\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\jpatrick\\Documents\\GitHub\\DuetWebControl_Fork\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["FilamentFileList.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n\t<div class=\"component\">\r\n\t\t<v-toolbar>\r\n\t\t\t<directory-breadcrumbs v-model=\"directory\"></directory-breadcrumbs>\r\n\r\n\t\t\t<v-spacer></v-spacer>\r\n\r\n\t\t\t<v-btn class=\"hidden-sm-and-down mr-3\" v-show=\"!isRootDirectory\" :disabled=\"uiFrozen\" @click=\"showNewFile = true\">\r\n\t\t\t\t<v-icon class=\"mr-1\">mdi-file-plus</v-icon> {{ $t('button.newFile.caption') }}\r\n\t\t\t</v-btn>\r\n\t\t\t<v-btn class=\"hidden-sm-and-down mr-3\" v-show=\"isRootDirectory\" :disabled=\"uiFrozen\" @click=\"showNewFilament = true\">\r\n\t\t\t\t<v-icon class=\"mr-1\">mdi-folder-plus</v-icon> {{ $t('button.newFilament.caption') }}\r\n\t\t\t</v-btn>\r\n\t\t\t<v-btn class=\"hidden-sm-and-down mr-3\" color=\"info\" :loading=\"loading\" :disabled=\"uiFrozen\" @click=\"refresh\">\r\n\t\t\t\t<v-icon class=\"mr-1\">mdi-refresh</v-icon> {{ $t('button.refresh.caption') }}\r\n\t\t\t</v-btn>\r\n\t\t\t<upload-btn class=\"hidden-sm-and-down\" target=\"filaments\" color=\"success\"></upload-btn>\r\n\t\t</v-toolbar>\r\n\r\n\t\t<base-file-list ref=\"filelist\" v-model=\"selection\" :directory.sync=\"directory\" :folder-icon=\"isRootDirectory ? 'mdi-radiobox-marked' : 'mdi-folder'\" :loading.sync=\"loading\" :doingFileOperation=\"doingFileOperation\" sort-table=\"filaments\" @fileClicked=\"fileClicked\" :no-delete=\"isRootDirectory\" :no-rename=\"filamentSelected\" no-drag-drop :no-files-text=\"isRootDirectory ? 'list.filament.noFilaments' : 'list.baseFileList.noFiles'\">\r\n\t\t\t<template #context-menu>\r\n\t\t\t\t<v-list-item v-show=\"filamentSelected\" @click=\"downloadFilament\">\r\n\t\t\t\t\t<v-icon class=\"mr-1\">mdi-cloud-download</v-icon> {{ $t('list.baseFileList.downloadZIP') }}\r\n\t\t\t\t</v-list-item>\r\n\t\t\t\t<v-list-item v-show=\"filamentSelected\" @click=\"rename\">\r\n\t\t\t\t\t<v-icon class=\"mr-1\">mdi-rename-box</v-icon> {{ $t('list.baseFileList.rename') }}\r\n\t\t\t\t</v-list-item>\r\n\t\t\t\t<v-list-item @click=\"remove\">\r\n\t\t\t\t\t<v-icon class=\"mr-1\">mdi-delete</v-icon> {{ $t('list.baseFileList.delete') }}\r\n\t\t\t\t</v-list-item>\r\n\t\t\t</template>\r\n\t\t</base-file-list>\r\n\r\n\t\t<v-speed-dial v-model=\"fab\" bottom right fixed direction=\"top\" transition=\"scale-transition\" class=\"hidden-md-and-up\">\r\n\t\t\t<template #activator>\r\n\t\t\t\t<v-btn v-model=\"fab\" dark color=\"primary\" fab>\r\n\t\t\t\t\t<v-icon v-if=\"fab\">mdi-close</v-icon>\r\n\t\t\t\t\t<v-icon v-else>mdi-dots-vertical</v-icon>\r\n\t\t\t\t</v-btn>\r\n\t\t\t</template>\r\n\r\n\t\t\t<v-btn v-show=\"!isRootDirectory\" fab :disabled=\"uiFrozen\" @click=\"showNewFile = true\">\r\n\t\t\t\t<v-icon class=\"mr-1\">mdi-file-plus</v-icon>\r\n\t\t\t</v-btn>\r\n\r\n\t\t\t<v-btn v-show=\"isRootDirectory\" fab :disabled=\"uiFrozen\" @click=\"showNewFilament = true\">\r\n\t\t\t\t<v-icon>mdi-folder-plus</v-icon>\r\n\t\t\t</v-btn>\r\n\r\n\t\t\t<v-btn fab color=\"info\" :loading=\"loading\" :disabled=\"uiFrozen\" @click=\"refresh\">\r\n\t\t\t\t<v-icon>mdi-refresh</v-icon>\r\n\t\t\t</v-btn>\r\n\r\n\t\t\t<upload-btn fab dark :directory=\"directory\" target=\"filaments\" color=\"success\">\r\n\t\t\t\t<v-icon>mdi-cloud-upload</v-icon>\r\n\t\t\t</upload-btn>\r\n\t\t</v-speed-dial>\r\n\r\n\t\t<new-directory-dialog :shown.sync=\"showNewFilament\" :directory=\"directory\" :title=\"$t('dialog.newFilament.title')\" :prompt=\"$t('dialog.newFilament.prompt')\" :showSuccess=\"false\" :showError=\"false\" @directoryCreationFailed=\"directoryCreationFailed\" @directoryCreated=\"createFilamentFiles\"></new-directory-dialog>\r\n\t\t<new-file-dialog :shown.sync=\"showNewFile\" :directory=\"directory\"></new-file-dialog>\r\n\t</div>\r\n</template>\r\n\r\n<script>\r\n'use strict'\r\n\r\nimport JSZip from 'jszip'\r\nimport saveAs from 'file-saver'\r\n\r\nimport { mapState, mapGetters, mapActions } from 'vuex'\r\n\r\nimport { DisconnectedError, FileNotFoundError, OperationCancelledError } from '../../utils/errors.js'\r\nimport Path from '../../utils/path.js'\r\n\r\nexport default {\r\n\tcomputed: {\r\n\t\t...mapGetters(['uiFrozen']),\r\n\t\t...mapState('machine/model', {\r\n\t\t\tfilamentsDirectory: state => state.directories.filaments,\r\n\t\t\ttools: state => state.tools\r\n\t\t}),\r\n\t\tisRootDirectory() { return Path.equals(this.directory, this.filamentsDirectory); },\r\n\t\tfilamentSelected() { return Path.equals(this.directory, this.filamentsDirectory) && (this.selection.length === 1) && this.selection[0].isDirectory; }\r\n\t},\r\n\tdata() {\r\n\t\treturn {\r\n\t\t\tdirectory: Path.filaments,\r\n\t\t\tselection: [],\r\n\t\t\tloading: false,\r\n\t\t\tdoingFileOperation: false,\r\n\t\t\tshowNewFile: false,\r\n\t\t\tshowNewFilament: false,\r\n\t\t\tfab: false\r\n\t\t}\r\n\t},\r\n\tmethods: {\r\n\t\t...mapActions('machine', ['sendCode', 'upload', 'download', 'delete', 'getFileList']),\r\n\t\tdirectoryCreationFailed(error) {\r\n\t\t\tthis.$makeNotification('error', this.$t('notification.newFilament.errorTitle'), error.message);\r\n\t\t},\r\n\t\tasync createFilamentFiles(path) {\r\n\t\t\tif (this.doingFileOperation) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tthis.doingFileOperation = true;\r\n\t\t\ttry {\r\n\t\t\t\tconst emptyFile = new Blob();\r\n\t\t\t\tawait this.upload({ filename: Path.combine(path, 'load.g'), content: emptyFile, showSuccess: false });\r\n\t\t\t\tawait this.upload({ filename: Path.combine(path, 'config.g'), content: emptyFile, showSuccess: false });\r\n\t\t\t\tawait this.upload({ filename: Path.combine(path, 'unload.g'), content: emptyFile, showSuccess: false });\r\n\t\t\t\tthis.$makeNotification('success', this.$t('notification.newFilament.successTitle'), this.$t('notification.newFilament.successMessage', [Path.extractFileName(path)]));\r\n\t\t\t} catch (e) {\r\n\t\t\t\tconsole.warn(e);\r\n\t\t\t\tthis.$makeNotification('error', this.$t('notification.newFilament.errorTitleMacros'), e.message);\r\n\t\t\t}\r\n\t\t\tthis.doingFileOperation = false;\r\n\t\t},\r\n\t\trefresh() {\r\n\t\t\tthis.$refs.filelist.refresh();\r\n\t\t},\r\n\t\tasync downloadFilament() {\r\n\t\t\tconst filament = this.selection[0].name;\r\n\r\n\t\t\t// Download the files first\r\n\t\t\tlet loadG, unloadG;\r\n\t\t\ttry {\r\n\t\t\t\tloadG = await this.download({ filename: Path.combine(Path.filaments, filament, 'load.g'), type: 'blob', showSuccess: false, showError: false });\r\n\t\t\t\tunloadG = await this.download({ filename: Path.combine(Path.filaments, filament, 'unload.g'), type: 'blob', showSuccess: false, showError: false });\r\n\t\t\t} catch (e) {\r\n\t\t\t\tif (!(e instanceof DisconnectedError) && !(e instanceof OperationCancelledError)) {\r\n\t\t\t\t\tthis.$makeNotification('error', this.$t('notification.download.error', [!loadG ? 'load.g' : 'unload.g']), e.message);\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tlet configG;\r\n\t\t\ttry {\r\n\t\t\t\tconfigG = await this.download({ filename: Path.combine(Path.filaments, filament, 'config.g'), type: 'blob', showSuccess: false, showError: false });\r\n\t\t\t} catch (e) {\r\n\t\t\t\t// config.g may not exist\r\n\t\t\t\tif (!(e instanceof DisconnectedError) && !(e instanceof OperationCancelledError) && !(e instanceof FileNotFoundError)) {\r\n\t\t\t\t\tthis.$makeNotification('error', this.$t('notification.download.error', ['config.g']), e.message);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Bundle them in a ZIP file and pass it to the user\r\n\t\t\tconst zip = new JSZip();\r\n\t\t\tzip.file(`${filament}/load.g`, loadG);\r\n\t\t\tzip.file(`${filament}/unload.g`, unloadG);\r\n\t\t\tif (configG) {\r\n\t\t\t\tzip.file(`${filament}/config.g`, configG);\r\n\t\t\t}\r\n\r\n\t\t\ttry {\r\n\t\t\t\tconst zipBlob = await zip.generateAsync({ type: 'blob' });\r\n\t\t\t\tsaveAs(zipBlob, `${filament}.zip`);\r\n\t\t\t} catch (e) {\r\n\t\t\t\tconsole.warn(e);\r\n\t\t\t\tthis.$makeNotification('error', this.$t('notification.compress.errorTitle', ['load.g']), e.message);\r\n\t\t\t}\r\n\t\t},\r\n\t\tasync rename() {\r\n\t\t\tconst filament = this.selection[0].name;\r\n\t\t\tif (this.tools.some(tool => tool && tool.filament === filament)) {\r\n\t\t\t\tthis.$makeNotification('error', this.$t('notification.renameFilament.errorTitle'), this.$t('notification.renameFilament.errorStillLoaded'));\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tthis.$refs.filelist.rename(this.selection[0]);\r\n\t\t},\r\n\t\tasync remove(items) {\r\n\t\t\tif (!items || !(items instanceof Array)) {\r\n\t\t\t\titems = this.selection.slice();\r\n\t\t\t}\r\n\r\n\t\t\tif (items.some(item => item.isDirectory && this.tools.some(tool => tool && tool.filament === item.name))) {\r\n\t\t\t\tthis.$makeNotification('error', this.$t('notification.deleteFilament.errorTitle'), this.$t('notification.deleteFilament.errorStillLoaded'));\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (this.doingFileOperation) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tthis.doingFileOperation = true;\r\n\t\t\tfor (let i = 0; i < items.length; i++) {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tif (items[i].isDirectory) {\r\n\t\t\t\t\t\t// Get files from the filament directory\r\n\t\t\t\t\t\tconst files = await this.getFileList(Path.combine(Path.filaments, items[i].name));\r\n\t\t\t\t\t\tif (files.some(item => item.isDirectory)) {\r\n\t\t\t\t\t\t\tthis.$makeNotification('error', this.$t('notification.deleteFilament.errorTitle'), this.$t('notification.deleteFilament.errorSubDirectories', [items[i].name]));\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Delete each file from the directory\r\n\t\t\t\t\t\tfor (let k = 0; k < files.length; k++) {\r\n\t\t\t\t\t\t\tawait this.delete(Path.combine(Path.filaments, items[i].name, files[k].name));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Delete the item\r\n\t\t\t\t\tawait this.delete(Path.combine(Path.filaments, items[i].name));\r\n\t\t\t\t\tawait this.refresh();\r\n\t\t\t\t} catch (e) {\r\n\t\t\t\t\tif (!(e instanceof DisconnectedError)) {\r\n\t\t\t\t\t\tconsole.warn(e);\r\n\t\t\t\t\t\tthis.$makeNotification('error', this.$t('notification.deleteFilament.errorTitle'), e.message);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.doingFileOperation = false;\r\n\t\t},\r\n\t\tfileClicked(item) {\r\n\t\t\tthis.$refs.filelist.edit(item);\r\n\t\t}\r\n\t},\r\n\tmounted() {\r\n\t\tthis.directory = this.filamentsDirectory;\r\n\t},\r\n\twatch: {\r\n\t\tfilamentsDirectory(to, from) {\r\n\t\t\tif (Path.equals(this.directory, from) || !Path.startsWith(this.directory, to)) {\r\n\t\t\t\tthis.directory = to;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n</script>\r\n"],"sourceRoot":"src/components/lists"}]}